{"version":3,"sources":["assets/images/team.svg","globalData/actionTypes/index.js","globalData/customModalItems/index.js","globalData/facePhoto/index.js","globalData/webcamResolutionType/index.js","globalData/attendanceMode/index.js","context/attendance.js","context/auth.js","context/course.js","context/enrolment.js","context/facePhoto.js","context/navbar.js","globalData/navbar/index.js","context/faceThresholdDistance.js","globalData/faceAPI/index.js","context/notification.js","components/common/customModal/index.js","components/common/sharedLayout/Footer.js","utils/ErrorHandling.js","graphql/query/course/courseQuery.js","graphql/query/facePhoto/facePhotosQuery.js","graphql/query/notification/notificationsQuery.js","graphql/query/warning/getWarningCountQuery.js","graphql/query/attendance/attendanceQuery.js","graphql/query/trx/trxListInAttendanceQuery.js","components/lecturerComponent/LecturerDrawerMenu.js","components/lecturerComponent/LecturerMenu.js","assets/index.js","components/lecturerComponent/LecturerSiderNavbar.js","components/studentComponent/StudentDrawerMenu.js","components/studentComponent/StudentMenu.js","components/studentComponent/StudentSiderNavbar.js","components/common/sharedLayout/ProfileNavbar.js","components/common/sharedLayout/Greeting.js","components/common/sharedLayout/Navbar.js","components/common/sharedLayout/PageTitleBreadcrumb.js","graphql/mutation/attendance/createAttendanceMutation.js","graphql/mutation/attendance/editAttendanceModeMutation.js","graphql/mutation/attendance/editAttendanceOnOffMutation.js","graphql/mutation/attendance/deleteAttendanceMutation.js","graphql/mutation/course/addCourseMutation.js","graphql/mutation/course/deleteCourseMutation.js","graphql/mutation/course/enrolCourseMutation.js","graphql/mutation/course/withdrawCourseMutation.js","graphql/mutation/enrolment/enrolmentMutation.js","graphql/mutation/facePhoto/addFacePhotoMutation.js","graphql/mutation/facePhoto/deleteFacePhotoMutation.js","graphql/mutation/login_register/loginUserMutation.js","graphql/mutation/login_register/registerUserMutation.js","graphql/mutation/participant/participantMutation.js","graphql/mutation/user/editProfileMutation.js","graphql/mutation/user/editCardIDAndUserLevel.js","graphql/mutation/warning/obtainStudentWarningMutation.js","graphql/mutation/trx/createTrxMutation.js","pages/common/courseDetails/CourseDetailCard.js","pages/common/courseDetails/CourseDetails.js","utils/hooks.js","components/common/course/AddCourseForm.js","components/common/course/EnrolCourseInput.js","pages/common/dashboard/Dashboard.js","globalData/limitFetch/index.js","components/common/mainMenu/HeaderNavbar.js","pages/common/mainMenu/MainMenu.js","config/index.js","pages/common/mainMenu/SignIn.js","pages/common/mainMenu/SignUp.js","pages/common/noFound/NoFound.js","components/common/notification/Notification.js","utils/FetchChecker.js","utils/LoadingSpin.js","pages/common/notification/Notifications.js","pages/common/profile/Profile.js","pages/common/attendance/inCourseHistory.js","pages/common/attendance/HistoryViz.js","pages/common/attendance/singleHistory.js","faceUtil/index.js","utils/ModelLoading.js","utils/ModelLoadStatus.js","pages/common/attendanceRoom/ProcessFaceRecognition.js","utils/drawRectAndLabelFace.js","pages/common/attendanceRoom/ListView.js","pages/common/attendanceRoom/TrxDashboard.js","pages/common/attendanceRoom/index.js","pages/common/undefinedCardIDAndRole/index.js","pages/common/privacyPolicy/PrivacyPolicy.js","pages/common/termCondition/TermCondition.js","pages/common/userGuidelines/UserGuidelines.js","pages/lecturerPage/attendanceForm/index.js","pages/studentPage/faceGallery/UploadFromDisk.js","pages/studentPage/faceGallery/UploadFromWebcam.js","utils/drawFaceRect.js","pages/studentPage/faceGallery/addFacePhoto.js","pages/studentPage/faceGallery/index.js","routes/AuthRoute.js","routes/LecturerRoute.js","routes/ProtectedRoute.js","routes/StudentRoute.js","routes/UndefinedCardIDAndRoleRoute.js","Testing/index.js","App.js","ApolloProvider.js","serviceWorker.js","index.js"],"names":["module","exports","actionTypes","modalItems","name","action","delete","withdraw","kick","approve","reject","UPLOAD_OPTION","DEFAULT_WEBCAM_RESOLUTION","webcamResolutionType","label","width","height","attendanceMode","initialState","attendances","newAttendances","initialAccess","AttendanceContext","createContext","attendanceReducer","state","type","attendance","AttendanceProvider","props","useReducer","dispatch","Provider","value","loadAttendances","addAttendance","resetState","user","avatarColor","backgroundColor","Math","random","localStorage","getItem","decodedToken","jwtDecode","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","payload","updated","AuthProvider","setItem","token","window","location","reload","editProfile","courses","newCourses","fetchedDone","CourseContext","courseReducer","done","course","CourseProvider","setFetchedDone","loadCourses","addCourse","enrolments","newEnrolments","initialCountDone","enrolCount","EnrolmentContext","enrolmentReducer","count","updatedEnrolments","enrolment","EnrolmentProvider","getEnrolCount","setEnrolCount","loadEnrolments","enrolCourse","facePhotos","notifyAddPhoto","FacePhotoContext","facePhotoReducer","updatedFacePhotos","length","FacePhotoProvider","loadFacePhotos","NavbarContext","NavbarProvider","useState","collapsed","SetCollapsed","toggleCollapsed","FaceThresholdDistanceContext","FaceThresholdDistanceProvider","threshold","SetThreshold","setFaceThresholdDistance","notifications","uncheckedNotificationCount","pressedNotification","NotificationContext","notificationReducer","NotificationProvider","setPressedNotification","loadNotifications","setUncheckedNotificationCount","title","itemType","visible","loading","handleOk","handleCancel","template","shortID","code","session","student","firstName","lastName","cardID","shape","src","photoURL","size","icon","FileImageOutlined","matricNumber","key","date","time","stats","onOk","onCancel","okButtonProps","disabled","cancelButtonProps","okText","tip","style","fontSize","Footer","Layout","textAlign","getFullYear","to","CheckError","err","message","error","msg","replace","FETCH_COURSES_COUNT_QUERY","gql","FETCH_COURSE_QUERY","FETCH_PARTICIPANTS_QUERY","FETCH_COURSES_QUERY","FETCH_FACE_PHOTOS_COUNT_QUERY","FETCH_FACE_PHOTOS_QUERY","FETCH_FACE_MATCHER_IN_COURSE_QUERY","FETCH_UNCHECKED_NOTIFICATIONS_QUERY","FETCH_NOTIFICATIONS_QUERY","FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY","FETCH_ATTENDANCE_QUERY","FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY","FETCH_TRX_LIST_IN_ATTENDANCE","isCollapseMenuOpen","setIsCollapseMenuOpen","pathname","substr","useContext","className","placement","onClose","HomeOutlined","path","theme","mode","defaultSelectedKeys","Item","top","APP_LOGO_URL","link","alt","onError","console","log","LecturerMenu","PictureOutlined","StudentMenu","menuVisible","setMenuVisible","overlay","UserOutlined","LogoutOutlined","onClick","profilePictureURL","Header","Title","Typography","useQuery","onCompleted","data","getUncheckedNotificationsCount","level","UnorderedListOutlined","userLevel","StudentDrawerMenu","LecturerDrawerMenu","h","getHours","greetMode","BellOutlined","Sider","collapsible","onCollapse","titleList","map","CREATE_ATTENDANCE_MUTATION","EDIT_ATTENDANCE_MODE_MUTATION","EDIT_ATTENDANCE_ON_OFF_MUTATION","DELETE_ATTENDANCE_MUTATION","ADD_COURSE_MUTATION","DELETE_COURSE_MUTATION","ENROL_COURSE_MUTATION","WITHDRAW_COURSE_MUTATION","ADD_FACE_PHOTO_MUTATION","DELETE_FACE_PHOTO_MUTATION","LOGIN_USER","LOGIN_GOOGLE_USER","REGISTER_USER","KICK_PARTICIPANT_MUTATION","EDIT_PROFILE_MUTATION","EDIT_CARDID_AND_ROLE_MUTATION","CREATE_TRX_MUTATION","Content","columns","dataIndex","render","imgURL","record","displayedName","align","sorter","a","b","localeCompare","index","danger","setVisible","setSelectedParticipant","selectedParticipant","kickParticipantStatus","participants","setParticipants","splice","fetchCourseGQLQuery","variables","id","match","params","notifyOnNetworkStatusChange","fetchParticipantGQLQuery","useEffect","getParticipants","useMutation","success","kickParticipant","kickParticipantCallback","profilePicture","PageTitleBreadcrumb","CourseDetailCard","getCourse","orientation","color","fontWeight","scroll","x","dataSource","currUser","find","par","_id","filter","parsedParticipants","float","RedoOutlined","refetch","participantID","courseID","update","updatedParticipant","participant","useForm","callback","values","setValues","onChange","event","target","onSubmit","refetchTableTotal","refetchTable","addCourseCallback","courseName","courseCode","courseSession","onFinish","rules","required","placeholder","htmlType","setCourseID","enrolCourseCallback","enrolCourseStatus","display","e","marginLeft","text","active","compare","bil","multiple","_","handleAccess","margin","ArrowRightOutlined","handleDelete","selectedCourse","withdrawCourseStatus","DeleteFilled","pageSize","current","total","tablePagination","setTablePagination","SetSelectedCourse","SetVisible","totalCoursesQuery","getCoursesCount","getEnrolledCoursesCount","prevState","currPage","fetchMore","withdrawCourse","withdrawCourseCallback","deleteCourseCallback","deleteCourseStatus","getCourses","history","push","EnrolCourseInput","AddCourseForm","direction","pagination","parsedData","c","tmp","owner","creator","parseCourseData","class","teamimg","GOOGLE_CLIENT_ID","context","loginUser","email","password","pressedGoogleLogin","setPressedGoogleLogin","googleSignIn","loginGoogleUser","loginGoogleUserStatus","alignItems","justifyContent","flexDirection","initialValues","remember","prefix","MailOutlined","Password","LockOutlined","clientId","buttonText","onSuccess","res","googleID","profileObj","googleId","googleEmail","googleFirstName","givenName","googleLastName","familyName","googleProfilePicture","imageUrl","onFailure","cookiePolicy","onRequest","LoadingOutlined","addUser","confirmPassword","register","info","pattern","min","whitespace","getFieldValue","validator","rule","Promise","resolve","valuePropName","Group","span","marginBottom","notification","checked","content","CheckOutlined","moment","updatedAt","fromNow","FetchChecker","allLoadedMessage","noItemMessage","handleFetchMore","LoadingSpin","limit","networkStatus","getNotifications","n","setTimeout","hasNextPage","cursor","updateQuery","pv","fetchMoreResult","__typename","previewSource","setPreviewSource","editProfileMutation","htmlFor","file","reader","FileReader","readAsDataURL","onloadend","result","previewFile","files","accept","defaultValue","attendanceList","setAttendanceList","ClockCircleFilled","StopOutlined","open","handleAccessRoom","RightCircleFilled","handleAccessHistory","ProfileOutlined","selectedAttendance","deleteAttendanceListtatus","setSelectedAttendance","totalAttendanceListCountInCourse","getAttendanceListCountInCourse","attendanceID","deleteAttendanceCallback","getAttendanceListInCourse","att","format","room","isOn","parseAttendanceData","attendeesLength","absenteesLength","setData","activeIndex","setActiveIndex","innerWidth","innerHeight","pieSize","setPieSize","PIECOLORS","addEventListener","activeShape","RADIAN","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","y","dy","d","stroke","r","toFixed","dataKey","onMouseEnter","entry","status","checkin_date","checkin_time","attendees","setAttendees","absentees","setAbsentees","setStats","attendanceGQLQuery","courseAndParticipantsGQLQuery","trxListInAttendanceGQLQuery","currAbsentees","attend_at","getTrxListInAttendance","attendee","studentID","currAttendees","Object","assign","createdAt","getAttendance","HistoryViz","avatar","abs","parseParticipantData","loadModels","setLoadingMessage","setLoadingMessageError","MODEL_URL","faceapi","getFullFaceDescription","blob","inputSize","scoreThreshold","OPTION","useTinyModel","img","withFaceLandmarks","withFaceDescriptors","fullDesc","createMatcher","faceProfile","maxDescriptorDistance","labeledDescriptors","profile","photo","Float32Array","faceDescriptor","Number","faceMatcher","isFaceDetectionModelLoaded","ssdMobilenetv1","isFeatureExtractionModelLoaded","faceRecognitionNet","isFacialLandmarkDetectionModelLoaded","faceLandmark68TinyNet","loadingMessage","minHeight","indicator","marginRight","errorMessage","opacity","Option","Select","webcamRef","useRef","canvasRef","selectedWebcam","setSelectedWebcam","inputDevices","setInputDevices","camWidth","setCamWidth","camHeight","setCamHeight","isAllModelLoaded","setIsAllModelLoaded","loadingMessageError","setFullDesc","waitText","setWaitText","createTrx","createTrxCallback","loadingtheModel","navigator","mediaDevices","enumerateDevices","then","devices","device","kind","inputDevice","capture","video","readyState","videoWidth","videoHeight","getScreenshot","catch","ctx","getContext","descriptions","faceDB","forEach","desc","detection","box","landmarksPoint","landmarks","_positions","bestMatch","findBestMatch","descriptor","_label","filterParticipants","font","lineWidth","strokeStyle","point","beginPath","fillText","fillStyle","arc","_x","_y","closePath","rect","distance","drawRectAndLabelFace","interval","setInterval","clearInterval","deviceId","ModelLoadStatus","ModelLoading","muted","ref","audio","screenshotFormat","videoConstraints","mirrored","position","zindex","studentList","isPhotoVisible","setIsPhotoVisible","itemLayout","renderItem","item","Meta","description","flexWrap","data-src","process","trxGQLQuery","pollInterval","sort","ListView","setMode","setIsOn","setFacePhotos","setFaceMatcher","setCourse","getFaceMatcherInCourse","matcher","validMatcher","m","profileList","editAttendanceMode","editAttendanceModeCallback","editAttendanceModeStatus","editAttendanceOnOff","editAttendanceOnOffCallback","editAttendanceOnOffStatus","ProcessFaceRecognition","TrxDashboard","editCardIDAndRoleCallback","editCardIDAndUserLevel","editCardIDAndRoleStatus","role","href","toISOString","selectedDate","setSelectedDate","selectedTime","setSelectedTime","courseGQLQuery","createAttendance","submitAttendanceCallback","submitAttendanceStatus","_d","getBase64","onload","onerror","UploadFromDisk","addFacePhotoCallback","galleryRefetch","countRefetch","previewVisible","setPreviewVisible","setFaceDescriptor","previewImage","setPreviewImage","previewTitle","setPreviewTitle","isRunningFaceDetector","setIsRunningFaceDetector","detectionCount","setDetectionCount","fileList","setFileList","handlePreview","url","substring","lastIndexOf","handleChange","preview","test","alert","originFileObj","beforeUpload","listType","onPreview","progress","PlusOutlined","marginTop","photoData","toString","wordBreak","footer","UploadFromWebcam","drawFaceRect","selectedUploadOption","setSelectedUploadOption","op","isDescriptorVisible","setIsDescriptorVisible","isDeleteModalVisible","setIsDeleteModalVisible","selectedPhoto","setSelectedPhoto","getFacePhotos","facePhotosCountQuery","deleteFacePhotoCallback","deleteFacePhotoStatus","getFacePhotosCount","deleteFacePhoto","photoID","AuthRoute","Component","component","rest","LecturerRoute","ProtectedRoute","StudentRoute","App","exact","MainMenu","SignIn","SignUp","UndefinedCardIDAndRoleRoute","UndefinedCardIDAndRole","Dashboard","Profile","Notifications","CourseDetails","AttendanceForm","AttendanceRoom","InCourseAttendanceHistory","SingleAttendanceHistory","FaceGallery","TermCondition","PrivacyPolicy","UserGuidelines","NoFound","httpLink","createHttpLink","uri","authLink","setContext","headers","Authorization","client","ApolloClient","concat","cache","InMemoryCache","dataIdFromObject","responseObject","defaultDataIdFromObject","Boolean","hostname","ReactDOM","ApolloProvider","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b58af87f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/team.3ae3c132.svg\";","export const actionTypes = {\r\n  //auth\r\n  LOGIN_ACTION: 'LOGIN',\r\n  EDIT_PROFILE_ACTION: 'EDIT_PROFILE',\r\n  LOGOUT_ACTION: 'LOGOUT',\r\n\r\n  //commom fetch done\r\n  FETCH_DONE_ACTION: 'FETCH_DONE',\r\n\r\n  //course\r\n  LOAD_COURSES_ACTION: 'LOAD_COURSES',\r\n  ADD_COURSE_ACTION: 'ADD_COURSE',\r\n\r\n  //enrolment\r\n  LOAD_ENROLMENTS_ACTION: 'LOAD_ENROLMENTS',\r\n  ENROL_COURSE_ACTION: 'ENROL_COURSE',\r\n  SET_ENROLCOUNT_ACTION: 'SET_ENROLCOUNT',\r\n  GET_ENROLCOUNT_ACTION: 'FETCH_ENROLCOUNT',\r\n\r\n  //notification\r\n  PRESSED_NOTIFICATION_ACTION: 'PRESSED_NOTIFICATION',\r\n  LOAD_NOTIFICATIONS_ACTION: 'LOAD_NOTIFICATIONS',\r\n  SET_UNCHECKED_NOTIFICATION_COUNT_ACTION: 'SET_UNCHECKED_NOTIFICATION_COUNT',\r\n\r\n  //face photo\r\n  LOAD_FACE_PHOTOS_ACTION: 'LOAD_FACE_PHOTOS',\r\n\r\n  //attendace\r\n  LOAD_ATTENDANCES_ACTION: 'LOAD_ATTENDANCES',\r\n  ADD_ATTENDANCE_ACTION: 'ADD_ATTENDANCE',\r\n  RESET_STATE_ACTION: 'RESET_STATE',\r\n};\r\n","export const modalItems = {\r\n  course: {\r\n    name: 'course',\r\n    action: { delete: 'Delete', withdraw: 'Withdraw' },\r\n  },\r\n  participant: {\r\n    name: 'student',\r\n    action: { kick: 'Kick' },\r\n  },\r\n  enrolment: {\r\n    name: 'enrolment',\r\n    action: { approve: 'Approve', reject: 'Reject' },\r\n  },\r\n  facePhoto: { name: 'photo', action: { delete: 'Delete' } },\r\n  attendance: { name: 'attendance', action: { delete: 'Delete' } },\r\n};\r\n","export const DEFAULT_UPLOAD_OPTION = 'From Disk';\r\n\r\nexport const UPLOAD_OPTION = ['From Disk', 'From Webcam'];\r\n","export const DEFAULT_WEBCAM_RESOLUTION = {\r\n  label: '640x480',\r\n  width: 640,\r\n  height: 480,\r\n};\r\n\r\nexport const webcamResolutionType = [\r\n  {\r\n    label: '300x250',\r\n    width: 300,\r\n    height: 250,\r\n  },\r\n  {\r\n    label: '500x350',\r\n    width: 500,\r\n    height: 350,\r\n  },\r\n  {\r\n    label: '640x480',\r\n    width: 640,\r\n    height: 480,\r\n  },\r\n  {\r\n    label: '960x720',\r\n    width: 960,\r\n    height: 720,\r\n  },\r\n  {\r\n    label: '1024x768',\r\n    width: 1024,\r\n    height: 768,\r\n  },\r\n  {\r\n    label: '1280x960',\r\n    width: 1280,\r\n    height: 960,\r\n  }\r\n];\r\n","export const DEFAULT_ATTENDANCE_MODE = \"Remote\";\r\n  \r\n  export const attendanceMode = [\r\n    \"Remote\",\r\n    \"F2F\"\r\n  ];\r\n  ","import React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  attendances: [],\r\n  newAttendances: [],\r\n  initialAccess: true,\r\n};\r\n\r\nconst AttendanceContext = createContext({});\r\n\r\nfunction attendanceReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOAD_ATTENDANCES_ACTION:\r\n      return {\r\n        ...state,\r\n        attendances: [...state.newAttendances, ...action.attendances],\r\n        initialAccess: false,\r\n      };\r\n\r\n    case actionTypes.ADD_ATTENDANCE_ACTION:\r\n      //here we check whether the attendances is not fully loaded, mean the attendance should be included in the fetch\r\n      if (state.initialAccess) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        newAttendances: [action.attendance, ...state.newAttendances],\r\n      };\r\n\r\n    case actionTypes.RESET_STATE_ACTION:\r\n      return {\r\n        ...state,\r\n        attendances: [],\r\n        newAttendances: []\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AttendanceProvider(props) {\r\n  const [state, dispatch] = useReducer(attendanceReducer, initialState);\r\n\r\n  function loadAttendances(attendances) {\r\n    dispatch({ type: actionTypes.LOAD_ATTENDANCES_ACTION, attendances });\r\n  }\r\n\r\n  function addAttendance(attendance) {\r\n    dispatch({\r\n      type: actionTypes.ADD_ATTENDANCE_ACTION,\r\n      attendance,\r\n    });\r\n  }\r\n\r\n  function resetState(attendance) {\r\n    dispatch({\r\n      type: actionTypes.RESET_STATE_ACTION,\r\n      attendance,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <AttendanceContext.Provider\r\n      value={{\r\n        attendances: state.attendances,\r\n        loadAttendances,\r\n        addAttendance,\r\n        resetState\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AttendanceContext, AttendanceProvider };\r\n","import jwtDecode from 'jwt-decode';\r\nimport React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  user: null,\r\n  avatarColor: {\r\n    backgroundColor: `rgb(${Math.random() * 150 + 30}, ${\r\n      Math.random() * 150 + 30\r\n    }, ${Math.random() * 150 + 30})`,\r\n  },\r\n};\r\n\r\nif (localStorage.getItem('jwtToken')) {\r\n  const decodedToken = jwtDecode(localStorage.getItem('jwtToken'));\r\n\r\n  if (decodedToken.exp * 1000 < Date.now()) {\r\n    localStorage.removeItem('jwtToken');\r\n  } else {\r\n    initialState.user = decodedToken;\r\n  }\r\n}\r\n\r\nconst AuthContext = createContext({\r\n  user: null,\r\n  login: (userData) => {},\r\n  logout: () => {},\r\n});\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_ACTION:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case actionTypes.EDIT_PROFILE_ACTION:\r\n      return {\r\n        ...state,\r\n        user: action.updated,\r\n      };\r\n    case actionTypes.LOGOUT_ACTION:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction AuthProvider(props) {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  function login(userData) {\r\n    localStorage.setItem('jwtToken', userData.token);\r\n    dispatch({\r\n      type: actionTypes.LOGIN_ACTION,\r\n      payload: userData,\r\n    });\r\n  }\r\n\r\n  function editProfile(updated) {\r\n    localStorage.setItem('jwtToken', updated.token);\r\n    dispatch({ type: actionTypes.EDIT_PROFILE_ACTION, updated });\r\n  }\r\n\r\n  function logout() {\r\n    localStorage.removeItem('jwtToken');\r\n    dispatch({ type: actionTypes.LOGOUT_ACTION });\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        avatarColor: state.avatarColor,\r\n        login,\r\n        logout,\r\n        editProfile,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  courses: [],\r\n  newCourses: [],\r\n  fetchedDone: false,\r\n  initialAccess: true\r\n};\r\n\r\nconst CourseContext = createContext({});\r\n\r\nfunction courseReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_DONE_ACTION:\r\n      return {\r\n        ...state,\r\n        fetchedDone: action.done,\r\n      };\r\n\r\n    case actionTypes.LOAD_COURSES_ACTION:\r\n      return {\r\n        ...state,\r\n        courses: [...state.newCourses, ...action.courses],\r\n        initialAccess: false\r\n      };\r\n\r\n    case actionTypes.ADD_COURSE_ACTION:\r\n      //here we check whether the courses is not fully loaded, mean the course should be included in the fetch\r\n      if (state.initialAccess) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        newCourses: [action.course, ...state.newCourses],\r\n      };\r\n  }\r\n}\r\n\r\nfunction CourseProvider(props) {\r\n  const [state, dispatch] = useReducer(courseReducer, initialState);\r\n\r\n  function loadCourses(courses) {\r\n    dispatch({ type: actionTypes.LOAD_COURSES_ACTION, courses });\r\n  }\r\n\r\n  function setFetchedDone(done) {\r\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\r\n  }\r\n\r\n  function addCourse(course) {\r\n    dispatch({\r\n      type: actionTypes.ADD_COURSE_ACTION,\r\n      course,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <CourseContext.Provider\r\n      value={{\r\n        courses: state.courses,\r\n        fetchedDone: state.fetchedDone,\r\n        setFetchedDone,\r\n        loadCourses,\r\n        addCourse,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { CourseContext, CourseProvider };\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  enrolments: [],\r\n  newEnrolments: [],\r\n  initialCountDone: false,\r\n  enrolCount: 0,\r\n  fetchedDone: false,\r\n  initialAccess: true,\r\n};\r\n\r\nconst EnrolmentContext = createContext({});\r\n\r\nfunction enrolmentReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.GET_ENROLCOUNT_ACTION:\r\n      if (!state.initialCountDone) {\r\n        return {\r\n          ...state,\r\n          enrolCount: action.count,\r\n          initialCountDone: true,\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n      };\r\n    case actionTypes.SET_ENROLCOUNT_ACTION:\r\n      return {\r\n        ...state,\r\n        enrolCount: action.count,\r\n      };\r\n\r\n    case actionTypes.FETCH_DONE_ACTION:\r\n      return {\r\n        ...state,\r\n        fetchedDone: action.done,\r\n      };\r\n    case actionTypes.LOAD_ENROLMENTS_ACTION:\r\n      var updatedEnrolments = [...state.newEnrolments, ...action.enrolments];\r\n      return {\r\n        ...state,\r\n        enrolments: updatedEnrolments,\r\n        initialAccess: false,\r\n      };\r\n\r\n    case actionTypes.ENROL_COURSE_ACTION:\r\n      if (state.initialAccess) return { ...state };\r\n      return {\r\n        ...state,\r\n        newEnrolments: [action.enrolment, ...state.newEnrolments],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction EnrolmentProvider(props) {\r\n  const [state, dispatch] = useReducer(enrolmentReducer, initialState);\r\n\r\n  function getEnrolCount(count) {\r\n    dispatch({ type: actionTypes.GET_ENROLCOUNT_ACTION, count });\r\n  }\r\n\r\n  function setEnrolCount(count) {\r\n    dispatch({ type: actionTypes.SET_ENROLCOUNT_ACTION, count });\r\n  }\r\n\r\n  function setFetchedDone(done) {\r\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\r\n  }\r\n\r\n  function loadEnrolments(enrolments) {\r\n    dispatch({ type: actionTypes.LOAD_ENROLMENTS_ACTION, enrolments });\r\n  }\r\n\r\n  function enrolCourse(enrolment) {\r\n    dispatch({ type: actionTypes.ENROL_COURSE_ACTION, enrolment });\r\n  }\r\n\r\n  return (\r\n    <EnrolmentContext.Provider\r\n      value={{\r\n        enrolments: state.enrolments,\r\n        enrolCount: state.enrolCount,\r\n        fetchedDone: state.fetchedDone,\r\n        initialCountDone: state.initialCountDone,\r\n        getEnrolCount,\r\n        setEnrolCount,\r\n        loadEnrolments,\r\n        setFetchedDone,\r\n        enrolCourse,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { EnrolmentContext, EnrolmentProvider };\r\n","import React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  facePhotos: [],\r\n  fetchedDone: false,\r\n  notifyAddPhoto: false,\r\n};\r\n\r\nconst FacePhotoContext = createContext({});\r\n\r\nfunction facePhotoReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_DONE_ACTION:\r\n      return {\r\n        ...state,\r\n        fetchedDone: action.done,\r\n      };\r\n    case actionTypes.LOAD_FACE_PHOTOS_ACTION:\r\n      var updatedFacePhotos = [...action.facePhotos];\r\n      if (updatedFacePhotos.length < 2)\r\n        return {\r\n          ...state,\r\n          facePhotos: updatedFacePhotos,\r\n          notifyAddPhoto: true,\r\n        };\r\n      return {\r\n        ...state,\r\n        facePhotos: updatedFacePhotos,\r\n        notifyAddPhoto: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction FacePhotoProvider(props) {\r\n  const [state, dispatch] = useReducer(facePhotoReducer, initialState);\r\n\r\n  function setFetchedDone(done) {\r\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\r\n  }\r\n\r\n  function loadFacePhotos(facePhotos) {\r\n    dispatch({ type: actionTypes.LOAD_FACE_PHOTOS_ACTION, facePhotos });\r\n  }\r\n\r\n  return (\r\n    <FacePhotoContext.Provider\r\n      value={{\r\n        facePhotos: state.facePhotos,\r\n        fetchedDone: state.fetchedDone,\r\n        notifyAddPhoto: state.notifyAddPhoto,\r\n        loadFacePhotos,\r\n        setFetchedDone,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { FacePhotoContext, FacePhotoProvider };\r\n","import React, { createContext, useState } from 'react';\r\nimport { INITIAL_COLLAPSE } from '../globalData';\r\n\r\nconst NavbarContext = createContext();\r\n\r\nconst NavbarProvider = (props) => {\r\n  const [collapsed, SetCollapsed] = useState(INITIAL_COLLAPSE);\r\n  function toggleCollapsed() {\r\n    SetCollapsed((collapsed) => !collapsed);\r\n  }\r\n  return (\r\n    <NavbarContext.Provider value={{ collapsed, toggleCollapsed }} {...props} />\r\n  );\r\n};\r\nexport { NavbarContext, NavbarProvider };\r\n","export const INITIAL_COLLAPSE = false;\r\n","import React, { createContext, useState } from 'react';\r\nimport {maxDescriptorDistance} from \"../globalData\";\r\n\r\nconst FaceThresholdDistanceContext = createContext();\r\n\r\nconst FaceThresholdDistanceProvider = (props) => {\r\n  const [threshold, SetThreshold] = useState(maxDescriptorDistance);\r\n  function setFaceThresholdDistance(value) {\r\n    SetThreshold(value);\r\n  }\r\n  return (\r\n    <FaceThresholdDistanceContext.Provider value={{ threshold, setFaceThresholdDistance }} {...props} />\r\n  );\r\n};\r\nexport { FaceThresholdDistanceContext, FaceThresholdDistanceProvider };\r\n","export const inputSize = 160;\r\nexport const maxDescriptorDistance = 0.45;","import React, { createContext, useReducer } from 'react';\r\nimport { actionTypes } from '../globalData';\r\n\r\nconst initialState = {\r\n  notifications: [],\r\n  uncheckedNotificationCount: 0,\r\n  fetchedDone: false,\r\n  pressedNotification: false,\r\n};\r\n\r\nconst NotificationContext = createContext({});\r\n\r\nfunction notificationReducer(state, action) {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_DONE_ACTION:\r\n      return {\r\n        ...state,\r\n        fetchedDone: action.done,\r\n      };\r\n\r\n    case actionTypes.PRESSED_NOTIFICATION_ACTION:\r\n      return {\r\n        ...state,\r\n        pressedNotification: action.done,\r\n      };\r\n\r\n    case actionTypes.LOAD_NOTIFICATIONS_ACTION:\r\n      return {\r\n        ...state,\r\n        notifications: [...action.notifications],\r\n      };\r\n    case actionTypes.SET_UNCHECKED_NOTIFICATION_COUNT_ACTION:\r\n      return {\r\n        ...state,\r\n        uncheckedNotificationCount: action.value,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction NotificationProvider(props) {\r\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\r\n\r\n  function setFetchedDone(done) {\r\n    dispatch({ type: actionTypes.FETCH_DONE_ACTION, done });\r\n  }\r\n\r\n  function setPressedNotification(done) {\r\n    dispatch({ type: actionTypes.PRESSED_NOTIFICATION_ACTION, done });\r\n  }\r\n\r\n  function setUncheckedNotificationCount(value) {\r\n    dispatch({\r\n      type: actionTypes.SET_UNCHECKED_NOTIFICATION_COUNT_ACTION,\r\n      value,\r\n    });\r\n  }\r\n\r\n  function loadNotifications(notifications) {\r\n    dispatch({ type: actionTypes.LOAD_NOTIFICATIONS_ACTION, notifications });\r\n  }\r\n\r\n  return (\r\n    <NotificationContext.Provider\r\n      value={{\r\n        notifications: state.notifications,\r\n        uncheckedNotificationCount: state.uncheckedNotificationCount,\r\n        fetchedDone: state.fetchedDone,\r\n        pressedNotification: state.pressedNotification,\r\n        setPressedNotification,\r\n        loadNotifications,\r\n        setUncheckedNotificationCount,\r\n        setFetchedDone,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { NotificationContext, NotificationProvider };\r\n","import { Modal, Spin, Avatar } from 'antd';\r\nimport { FileImageOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport { modalItems } from '../../../globalData';\r\nexport default ({\r\n  title,\r\n  action,\r\n  itemType,\r\n  visible,\r\n  loading,\r\n  handleOk,\r\n  handleCancel,\r\n  payload,\r\n}) => {\r\n  const template = (type, payload) => {\r\n    switch (type) {\r\n      case modalItems.course.name:\r\n        return (\r\n          <>\r\n            <p>\r\n              <strong>Course ID</strong>: {payload.shortID}\r\n            </p>\r\n            <p>\r\n              <strong>Particular</strong>:{' '}\r\n              {payload.code + '-' + payload.name + ' (' + payload.session + ')'}\r\n            </p>\r\n          </>\r\n        );\r\n      case modalItems.enrolment.name:\r\n        return (\r\n          <>\r\n            <strong>Student: </strong>\r\n            {payload.student?.firstName} {payload.student?.lastName} (\r\n            {payload.student?.cardID})\r\n            <br />\r\n            <br />\r\n            <strong>Course (ID: {payload.course?.shortID}): </strong>\r\n            {payload.course?.code} {payload.course?.name} (\r\n            {payload.course?.session})\r\n          </>\r\n        );\r\n      case modalItems.facePhoto.name:\r\n        return (\r\n          <>\r\n            <Avatar\r\n              shape='square'\r\n              src={payload?.photoURL}\r\n              size={200}\r\n              icon={<FileImageOutlined />}\r\n            />\r\n          </>\r\n        );\r\n      case modalItems.participant.name:\r\n        return (\r\n          <div>\r\n            <strong>Particular</strong>:{' '}\r\n            {payload.firstName +\r\n              '-' +\r\n              payload.lastName +\r\n              ' (' +\r\n              (payload.cardID||payload.matricNumber) +\r\n              ')'} {/* in case table and other stuff mess with cardID */}\r\n        </div>\r\n        );\r\n      case modalItems.attendance.name:\r\n        return (\r\n          <>\r\n            <p>\r\n              <strong>Attendance ID: </strong>\r\n              {payload.key}\r\n            </p>\r\n            <br />\r\n            <p>\r\n              <strong>Course: </strong>\r\n              {payload.course}\r\n            </p>\r\n            <p>\r\n              <strong>Date: </strong>\r\n              {payload.date}\r\n            </p>\r\n            <p>\r\n              <strong>Time: </strong>\r\n              {payload.time}\r\n            </p>\r\n            <p>\r\n              <strong>Stats: </strong>\r\n              {payload.stats}\r\n            </p>\r\n          </>\r\n        );\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      title={title}\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      onCancel={handleCancel}\r\n      okButtonProps={{ disabled: loading }}\r\n      cancelButtonProps={{ disabled: loading }}\r\n      okText={action}\r\n    >\r\n      {!loading ? (\r\n        <div>\r\n          <p>\r\n            Are you sure to{' '}\r\n            <strong style={{ fontSize: '15px' }}>{action}</strong> the following{' '}\r\n            {itemType}?\r\n          </p>\r\n          {template(itemType, payload)}\r\n        </div>\r\n      ) : (\r\n        <Spin tip={'Loading, please wait...'}>\r\n          <p>\r\n            Are you sure to {action} the following {itemType}?\r\n          </p>\r\n          {template(itemType, payload)}\r\n        </Spin>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst { Footer } = Layout;\r\nexport default () => (\r\n  <Footer style={{ textAlign: 'center' }}>\r\n    <span>&copy; SmartMark {new Date().getFullYear()}</span>\r\n    <span>&nbsp;&nbsp;&nbsp; <Link to=\"/privacypolicy\">Privacy Policy</Link></span>\r\n    <span>&nbsp;&nbsp;&nbsp; <Link to=\"/termandcondition\">Term & Condition</Link></span>\r\n    <span>&nbsp;&nbsp;&nbsp; <Link to=\"/userguidelines\">User Guidelines</Link></span>\r\n  </Footer>\r\n);\r\n","import { message } from \"antd\";\r\n\r\nexport const CheckError = (err) => {\r\n  switch (err.message) {\r\n    case \"GraphQL error: Invalid/Expired token\":\r\n      if (err.message === \"GraphQL error: Invalid/Expired token\") {\r\n        message.error(\"Please re-login!\");\r\n        localStorage.removeItem(\"jwtToken\");\r\n        window.location.reload();\r\n      }\r\n    default:\r\n      let msg = err.message.replace(\"GraphQL error: \", \"\");\r\n      message.error(msg);\r\n  }\r\n};\r\n","import gql from 'graphql-tag';\r\n\r\n\r\nexport const FETCH_COURSES_COUNT_QUERY = gql`\r\n  query getCoursesCount {\r\n    getCoursesCount\r\n  }\r\n`;\r\n\r\nexport const FETCH_COURSE_QUERY = gql`\r\n  query getCourse($id: ID!) {\r\n    getCourse(courseID: $id) {\r\n        _id\r\n        shortID\r\n        name\r\n        code\r\n        session\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_PARTICIPANTS_QUERY = gql`\r\n  query getParticipants($id: ID!) {\r\n    getParticipants(courseID: $id) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      profilePictureURL\r\n      cardID\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_COURSES_QUERY = gql`\r\n  query getCourses($currPage: Int!, $pageSize: Int!) {\r\n    getCourses(currPage: $currPage, pageSize: $pageSize) {\r\n      courses {\r\n        _id\r\n        shortID\r\n        creator {\r\n          firstName\r\n          lastName\r\n          cardID\r\n        }\r\n        name\r\n        code\r\n        session\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;","import gql from 'graphql-tag';\r\n\r\nexport const FETCH_FACE_PHOTOS_COUNT_QUERY = gql`\r\n  query getFacePhotosCount {\r\n    getFacePhotosCount\r\n  }\r\n`;\r\n\r\nexport const FETCH_FACE_PHOTOS_QUERY = gql`\r\n  query getFacePhotos($cursor: ID, $limit: Int!) {\r\n    getFacePhotos(cursor: $cursor, limit: $limit) {\r\n      facePhotos {\r\n        _id\r\n        faceDescriptor\r\n        photoURL\r\n        createdAt\r\n      }\r\n      hasNextPage\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_FACE_MATCHER_IN_COURSE_QUERY = gql`\r\n  query getFaceMatcherInCourse($courseID: String!) {\r\n    getFaceMatcherInCourse(courseID: $courseID) {\r\n      course {\r\n        _id\r\n        code\r\n        name\r\n        session\r\n        shortID\r\n      }\r\n      matcher {\r\n        student {\r\n          _id\r\n          firstName\r\n          lastName\r\n          cardID\r\n          profilePictureURL\r\n        }\r\n        facePhotos {\r\n          faceDescriptor\r\n          photoURL\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const FETCH_UNCHECKED_NOTIFICATIONS_QUERY = gql`\r\n  query getUncheckedNotificationsCount {\r\n    getUncheckedNotificationsCount\r\n  }\r\n`;\r\n\r\nexport const FETCH_NOTIFICATIONS_QUERY = gql`\r\n  query getNotifications($cursor: ID, $limit: Int!) {\r\n    getNotifications(cursor: $cursor, limit: $limit) {\r\n      notifications {\r\n        _id\r\n        title\r\n        content\r\n        checked\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      hasNextPage\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const GET_WARNING_COUNT_QUERY = gql`\r\n  query getWarningCount($courseID: ID!) {\r\n    getWarningCount(courseID: $courseID)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY = gql`\r\n  query getAttendanceListCountInCourse($courseID: String!) {\r\n    getAttendanceListCountInCourse(courseID: $courseID)\r\n  }\r\n`;\r\n\r\nexport const FETCH_ATTENDANCE_QUERY = gql`\r\n  query getAttendance($attendanceID: ID!) {\r\n    getAttendance(attendanceID: $attendanceID) {\r\n      _id\r\n      course {\r\n        _id\r\n        name\r\n        code\r\n        session\r\n        shortID\r\n      }\r\n      time\r\n      date\r\n      mode\r\n      isOn\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY = gql`\r\n  query getAttendanceListInCourse(\r\n    $courseID: String!\r\n    $currPage: Int!\r\n    $pageSize: Int!\r\n  ) {\r\n    getAttendanceListInCourse(\r\n      courseID: $courseID\r\n      currPage: $currPage\r\n      pageSize: $pageSize\r\n    ) {\r\n      course{\r\n        _id\r\n        shortID\r\n        code\r\n        name\r\n        session\r\n      }\r\n      attendanceList{\r\n        _id\r\n        time\r\n        date\r\n        mode\r\n        isOn\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const FETCH_TRX_LIST_IN_ATTENDANCE = gql`\r\n  query getTrxListInAttendance($attendanceID: ID!) {\r\n    getTrxListInAttendance(attendanceID: $attendanceID){\r\n        studentID\r\n        createdAt\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  HomeOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Drawer } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { EnrolmentContext } from '../../context';\r\nimport { CheckError } from '../../utils/ErrorHandling';\r\nimport { FETCH_ENROLREQUEST_COUNT_QUERY } from '../../graphql/query';\r\n\r\nexport default ({ isCollapseMenuOpen, setIsCollapseMenuOpen }) => {\r\n  const pathname = window.location.pathname;\r\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\r\n\r\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\r\n\r\n\r\n  return (\r\n    <Drawer\r\n      title='Menu'\r\n      className='drawerMenu'\r\n      visible={isCollapseMenuOpen}\r\n      placement='top'\r\n      onClose={() => {\r\n        setIsCollapseMenuOpen(false);\r\n      }}\r\n    >\r\n      <p>\r\n        <Link to={'/dashboard'}>\r\n          <HomeOutlined />\r\n          &nbsp; Courses\r\n        </Link>\r\n      </p>\r\n    </Drawer>\r\n  );\r\n};\r\n","import {\r\n  HomeOutlined\r\n} from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Menu } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { FpsView } from 'react-fps';\r\nimport { Link } from 'react-router-dom';\r\nimport { EnrolmentContext, NavbarContext } from '../../context';\r\nimport { CheckError } from '../../utils/ErrorHandling';\r\n\r\nexport default () => {\r\n  const pathname = window.location.pathname;\r\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\r\n\r\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\r\n  const { collapsed } = useContext(NavbarContext);\r\n\r\n  return (\r\n    <Menu theme='dark' mode='vertical' defaultSelectedKeys={[path]}>\r\n      <Menu.Item key={'dashboard'} icon={<HomeOutlined />}>\r\n        <Link to={'/dashboard'}>Courses</Link>\r\n      </Menu.Item>\r\n      {!collapsed && <FpsView width={190} height={100} top={525} />}\r\n    </Menu>\r\n  );\r\n};\r\n","export const APP_LOGO_URL = {\r\n  link: process.env.PUBLIC_URL + '/img/logo.png',\r\n  width: '30px',\r\n  height: '30px',\r\n};","import { Avatar } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavbarContext } from '../../context';\r\nimport { LecturerMenu } from './';\r\nimport './LecturerSiderNavbar.css';\r\nimport { APP_LOGO_URL } from '../../assets';\r\n\r\nexport default () => {\r\n  const { collapsed } = useContext(NavbarContext);\r\n\r\n  return (\r\n    <div className='lecturerSiderNavbar'>\r\n      <Link to='/dashboard'>\r\n        <div className='lecturerSiderNavbar__logo'>\r\n          <Avatar\r\n            shape=\"square\"\r\n            className='avatar'\r\n            size='large'\r\n            alt='Face In'\r\n            src={APP_LOGO_URL.link}\r\n            onError={(err) => {\r\n              console.log(err);\r\n            }}\r\n          />\r\n          <div\r\n            className={\r\n              !collapsed\r\n                ? 'lecturerSiderNavbar__text'\r\n                : 'lecturerSiderNavbar__text__hidden'\r\n            }\r\n          >\r\n            <span className='lecturerSiderNavbar__text__item'>Lecturer</span>\r\n            <span className='lecturerSiderNavbar__text__item'>Version</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='lecturerSiderNavbar__menu'>\r\n        <LecturerMenu />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n\r\n  HomeOutlined,\r\n  PictureOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Drawer } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { EnrolmentContext } from '../../context';\r\nimport { CheckError } from '../../utils/ErrorHandling';\r\n\r\nexport default ({ isCollapseMenuOpen, setIsCollapseMenuOpen }) => {\r\n  const pathname = window.location.pathname;\r\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\r\n\r\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\r\n\r\n\r\n  return (\r\n    <Drawer\r\n      title='Menu'\r\n      className='drawerMenu'\r\n      visible={isCollapseMenuOpen}\r\n      placement='top'\r\n      onClose={() => {\r\n        setIsCollapseMenuOpen(false);\r\n      }}\r\n    >\r\n      <p>\r\n        <Link to={'/dashboard'}>\r\n          <HomeOutlined />\r\n          &nbsp; Home\r\n        </Link>\r\n      </p>\r\n      <p>\r\n        <Link to={'/facegallery'}>\r\n          <PictureOutlined />\r\n          &nbsp; Face Gallery\r\n        </Link>\r\n      </p>\r\n    </Drawer>\r\n  );\r\n};\r\n","import {\r\n  HomeOutlined,\r\n  PictureOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Menu } from 'antd';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { FpsView } from 'react-fps';\r\nimport { Link } from 'react-router-dom';\r\nimport { EnrolmentContext, NavbarContext } from '../../context';\r\nimport { CheckError } from '../../utils/ErrorHandling';\r\n\r\nexport default () => {\r\n  const pathname = window.location.pathname;\r\n  const path = pathname === '/' ? 'home' : pathname.substr(1);\r\n\r\n  const { enrolCount, getEnrolCount } = useContext(EnrolmentContext);\r\n\r\n  const { collapsed } = useContext(NavbarContext);\r\n\r\n  return (\r\n    <Menu theme='dark' mode='vertical' defaultSelectedKeys={[path]}>\r\n      <Menu.Item key={'dashboard'} icon={<HomeOutlined />}>\r\n        <Link to={'/dashboard'}>Courses</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key={'facegallery'} icon={<PictureOutlined />}>\r\n        <Link to={'/facegallery'}>Face Gallery</Link>\r\n      </Menu.Item>\r\n      {!collapsed && <FpsView width={190} height={100} top={525} />}\r\n    </Menu>\r\n  );\r\n};\r\n","import { Avatar } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavbarContext } from '../../context';\r\nimport { StudentMenu } from './';\r\nimport './StudentSiderNavbar.css';\r\nimport { APP_LOGO_URL } from '../../assets';\r\n\r\nexport default () => {\r\n  const { collapsed } = useContext(NavbarContext);\r\n  return (\r\n    <div className='studentSiderNavbar'>\r\n      <Link to='/dashboard'>\r\n        <div className='studentSiderNavbar__logo'>\r\n          <Avatar\r\n            shape=\"square\"\r\n            className='avatar'\r\n            size='large'\r\n            alt='Face In'\r\n            title='Face in (Student Version)'\r\n            src={APP_LOGO_URL.link}\r\n            onError={(err) => {\r\n              console.log(err);\r\n            }}\r\n          />\r\n          <div\r\n            className={\r\n              !collapsed\r\n                ? 'studentSiderNavbar__text'\r\n                : 'studentSiderNavbar__text__hidden'\r\n            }\r\n          >\r\n            <span className='studentSiderNavbar__text__item'>Student</span>\r\n            <span className='studentSiderNavbar__text__item'>Version</span>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n\r\n      <div className='studentSiderNavbar__menu'>\r\n        <StudentMenu />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { LogoutOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Avatar, Dropdown, Menu } from 'antd';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context/auth';\r\nimport './ProfileNavbar.css';\r\n\r\nexport default () => {\r\n  const { user, avatarColor, logout } = useContext(AuthContext);\r\n\r\n  const [menuVisible, setMenuVisible] = useState(false);\r\n  const menu = () => (\r\n    <Menu theme='dark'>\r\n      <Menu.Item key={'profile'} icon={<UserOutlined />}>\r\n        <Link to='/profile'>Profile</Link>\r\n      </Menu.Item>\r\n      <Menu.Item key={'logout'} icon={<LogoutOutlined />} onClick={logout}>\r\n        Log Out\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <div className='profileNavbar'>\r\n      <Dropdown\r\n        overlay={menu}\r\n        visible={menuVisible}\r\n        \r\n        onClick={() => setMenuVisible(!menuVisible)}\r\n        placement='bottomCenter'\r\n      >\r\n        <Avatar\r\n          className='avatar'\r\n          size='large'\r\n          alt='Face In Profile'\r\n          src={user.profilePictureURL}\r\n          onError={(err) => {\r\n            console.log(err);\r\n          }}\r\n          style={!user.profilePictureURL&&avatarColor}\r\n        >\r\n          {user.firstName[0]}\r\n        </Avatar>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  BellOutlined,\r\n  LoadingOutlined,\r\n  UnorderedListOutlined,\r\n} from '@ant-design/icons';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Layout, Typography, Badge, Avatar } from 'antd';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext, NotificationContext } from '../../../context';\r\nimport { CheckError } from '../../../utils/ErrorHandling';\r\nimport { FETCH_UNCHECKED_NOTIFICATIONS_QUERY } from '../../../graphql/query';\r\nimport { LecturerDrawerMenu } from '../../lecturerComponent';\r\nimport { StudentDrawerMenu } from '../../studentComponent';\r\nimport ProfileNavbar from './ProfileNavbar';\r\nimport './Greeting.css';\r\n\r\nconst { Header } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [isCollapseMenuOpen, setIsCollapseMenuOpen] = useState(false);\r\n  const {\r\n    uncheckedNotificationCount,\r\n    setUncheckedNotificationCount,\r\n    pressedNotification,\r\n    setPressedNotification,\r\n  } = useContext(NotificationContext);\r\n  \r\n  useQuery(FETCH_UNCHECKED_NOTIFICATIONS_QUERY, {\r\n    onCompleted: (data) => {\r\n      if (!pressedNotification) {\r\n        setUncheckedNotificationCount(data.getUncheckedNotificationsCount);\r\n        setPressedNotification(true);\r\n      }\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n  });\r\n\r\n  const greetMode = () => {\r\n    let h = new Date().getHours();\r\n    if (h >= 0 && h < 12) return 'Morning';\r\n    else if (h >= 12 && h <= 18) return 'Afternoon';\r\n    else return 'Evening';\r\n  };\r\n\r\n  return (\r\n    <Header className='greeting__header'>\r\n      <Title className='greeting__title' level={4}>\r\n        <div className='siderNavbar__collapse'>\r\n          <Button\r\n            icon={<UnorderedListOutlined />}\r\n            onClick={() => {\r\n              setIsCollapseMenuOpen(true);\r\n            }}\r\n          ></Button>\r\n        </div>\r\n        {user ? (\r\n          user?.userLevel === 0 ? (\r\n            <StudentDrawerMenu\r\n              isCollapseMenuOpen={isCollapseMenuOpen}\r\n              setIsCollapseMenuOpen={setIsCollapseMenuOpen}\r\n            />\r\n          ) : (\r\n            <LecturerDrawerMenu\r\n              isCollapseMenuOpen={isCollapseMenuOpen}\r\n              setIsCollapseMenuOpen={setIsCollapseMenuOpen}\r\n            />\r\n          )\r\n        ) : (\r\n          'error'\r\n        )}\r\n\r\n        <span>\r\n          Good {greetMode()}, {user.firstName}\r\n        </span>\r\n        <div className='greeting__profileNavbar'>\r\n          <ProfileNavbar />\r\n        </div>\r\n        <Link\r\n          to='/notification'\r\n          title={`Notification (${uncheckedNotificationCount})`}\r\n        >\r\n          <div className='greeting__notification'>\r\n            <Badge count={uncheckedNotificationCount}>\r\n              <Avatar\r\n                icon={<BellOutlined />}\r\n                style={{ backgroundColor: 'orange' }}\r\n              />\r\n            </Badge>\r\n          </div>\r\n        </Link>\r\n      </Title>\r\n    </Header>\r\n  );\r\n};\r\n","import { Layout } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext, NavbarContext } from '../../../context';\r\nimport { LecturerSiderNavbar } from '../../lecturerComponent';\r\nimport { StudentSiderNavbar } from '../../studentComponent';\r\nimport './Navbar.css';\r\n\r\nconst { Sider } = Layout;\r\n\r\nexport default () => {\r\n  const { user } = useContext(AuthContext);\r\n  const { collapsed, toggleCollapsed } = useContext(NavbarContext);\r\n\r\n  return (\r\n    <>\r\n      <Sider\r\n        className='siderNavbar'\r\n        collapsible\r\n        collapsed={collapsed}\r\n        onCollapse={toggleCollapsed}\r\n      >\r\n        {user.userLevel == 0 ? <StudentSiderNavbar /> : <LecturerSiderNavbar />}\r\n      </Sider>\r\n    </>\r\n  );\r\n};\r\n","import { Breadcrumb } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ titleList }) => (\r\n  <Breadcrumb className='breadcrumb'>\r\n    {titleList.map((title) => (\r\n      <Breadcrumb.Item key={title.name} className='breadcrumb__item'>\r\n        <Link to={title.link}>{title.name}</Link>\r\n      </Breadcrumb.Item>\r\n    ))}\r\n  </Breadcrumb>\r\n);\r\n","import gql from 'graphql-tag';\r\n\r\nexport const CREATE_ATTENDANCE_MUTATION = gql`\r\n  mutation createAttendance(\r\n    $courseID: String!\r\n    $date: String!\r\n    $time: String!\r\n  ) {\r\n    createAttendance(\r\n      attendanceInput: {\r\n        courseID: $courseID\r\n        date: $date\r\n        time: $time\r\n      }\r\n    ) {\r\n      _id\r\n      course {\r\n        _id\r\n        shortID\r\n        name\r\n        code\r\n        session\r\n      }\r\n      date\r\n      time\r\n      mode\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const EDIT_ATTENDANCE_MODE_MUTATION = gql`\r\n  mutation editAttendanceMode($attendanceID: ID!, $mode: String!) {\r\n    editAttendanceMode(attendanceID: $attendanceID, mode: $mode) {\r\n      _id\r\n      course {\r\n        _id\r\n        shortID\r\n        name\r\n        code\r\n        session\r\n      }\r\n      date\r\n      time\r\n      mode\r\n    }\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const EDIT_ATTENDANCE_ON_OFF_MUTATION = gql`\r\n  mutation editAttendanceOnOff($attendanceID: ID!, $isOn: Boolean!) {\r\n    editAttendanceOnOff(attendanceID: $attendanceID, isOn: $isOn) {\r\n      _id\r\n      course {\r\n        _id\r\n        shortID\r\n        name\r\n        code\r\n        session\r\n      }\r\n      date\r\n      time\r\n      mode\r\n      isOn\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const DELETE_ATTENDANCE_MUTATION = gql`\r\n  mutation deleteAttendance($attendanceID: ID!) {\r\n    deleteAttendance(attendanceID: $attendanceID) {\r\n      _id\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const ADD_COURSE_MUTATION = gql`\r\n  mutation createCourse($code: String!, $name: String!, $session: String!) {\r\n    createCourse(courseInput: { code: $code, name: $name, session: $session }) {\r\n      _id\r\n      shortID\r\n      code\r\n      name\r\n      session\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const DELETE_COURSE_MUTATION = gql`\r\n  mutation deleteCourse($id: ID!) {\r\n    deleteCourse(courseID: $id) {\r\n      _id\r\n      name\r\n      code\r\n      session\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const ENROL_COURSE_MUTATION = gql`\r\n  mutation enrolCourse($id: ID!) {\r\n    enrolCourse(courseID: $id)\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const WITHDRAW_COURSE_MUTATION = gql`\r\n  mutation withdrawCourse($id: ID!) {\r\n    withdrawCourse(courseID: $id)\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const APPROVE_ENROLMENT_MUTATION = gql`\r\n  mutation approveEnrolment($id: ID!) {\r\n    approveEnrolment(enrolmentID: $id)\r\n  }\r\n`;\r\n\r\nexport const REJECT_ENROLMENT_MUTATION = gql`\r\n  mutation approveEnrolment($id: ID!) {\r\n    rejectEnrolment(enrolmentID: $id)\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const ADD_FACE_PHOTO_MUTATION = gql`\r\n  mutation addFacePhoto(\r\n    $photoData: String!\r\n    $faceDescriptor: String!\r\n  ) {\r\n    addFacePhoto(\r\n      photoData: $photoData\r\n      faceDescriptor: $faceDescriptor\r\n    ) {\r\n      faceDescriptor\r\n      photoURL\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const DELETE_FACE_PHOTO_MUTATION = gql`\r\n  mutation deleteFacePhoto($photoID: ID!) {\r\n    deleteFacePhoto(photoID: $photoID)\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation login($email: String!, $password: String!) {\r\n    login(email: $email, password: $password) {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n      userLevel\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOGIN_GOOGLE_USER = gql`\r\n  mutation googleSignIn(\r\n    $googleID: String!\r\n    $googleEmail: String!\r\n    $googleFirstName: String!\r\n    $googleLastName: String!\r\n    $googleProfilePicture: String!\r\n  ) {\r\n    googleSignIn(\r\n      googlePersonInput: {\r\n        googleID: $googleID\r\n        googleEmail: $googleEmail\r\n        googleFirstName: $googleFirstName\r\n        googleLastName: $googleLastName\r\n        googleProfilePicture: $googleProfilePicture\r\n      }\r\n    ) {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n      userLevel\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const REGISTER_USER = gql`\r\n  mutation register(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $email: String!\r\n    $cardID: String!\r\n    $password: String!\r\n    $confirmPassword: String!\r\n    $userLevel: Int!\r\n  ) {\r\n    register(\r\n      personInput: {\r\n        firstName: $firstName\r\n        lastName: $lastName\r\n        email: $email\r\n        cardID: $cardID\r\n        password: $password\r\n        confirmPassword: $confirmPassword\r\n        userLevel: $userLevel\r\n      }\r\n    ) {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n      userLevel\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const KICK_PARTICIPANT_MUTATION = gql`\r\n  mutation kickParticipant($participantID: ID!, $courseID: String!) {\r\n    kickParticipant(participantID: $participantID, courseID: $courseID)\r\n  }\r\n`;\r\n\r\nexport const WARN_PARTICIPANT_MUTATION = gql`\r\n  mutation warnParticipant($participantID: ID!, $courseID: String!) {\r\n    warnParticipant(participantID: $participantID, courseID: $courseID)\r\n  }\r\n`;\r\n\r\nexport const ADD_PARTICIPANT_MUTATION = gql`\r\n  mutation addParticipant($email: String!, $courseID: String!) {\r\n    addParticipant(email: $email, courseID: $courseID) {\r\n      _id\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const EDIT_PROFILE_MUTATION = gql`\r\n  mutation editProfile(\r\n    $firstName: String!\r\n    $lastName: String!\r\n    $cardID: String!\r\n    $profilePicture: String\r\n  ) {\r\n    editProfile(\r\n      firstName: $firstName\r\n      lastName: $lastName\r\n      cardID: $cardID\r\n      profilePicture: $profilePicture\r\n    ) {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n      userLevel\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const EDIT_CARDID_AND_ROLE_MUTATION = gql`\r\n  mutation editCardIDAndUserLevel($cardID: String!, $userLevel: Int!) {\r\n    editCardIDAndUserLevel(cardID: $cardID, userLevel: $userLevel) {\r\n      _id\r\n      email\r\n      firstName\r\n      lastName\r\n      cardID\r\n      profilePictureURL\r\n      userLevel\r\n      createdAt\r\n      token\r\n    }\r\n  }\r\n`;\r\n","import gql from 'graphql-tag';\r\n\r\nexport const OBTAIN_STUDENT_WARNING_MUTATION = gql`\r\n  mutation obtainStudentWarning($participantID: ID!, $courseID: String!) {\r\n    obtainStudentWarning(participantID: $participantID, courseID: $courseID)\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CREATE_TRX_MUTATION = gql`\r\n  mutation createTrx($attendanceID: ID!, $studentID: ID!) {\r\n    createTrx(\r\n      trxInput: { attendanceID: $attendanceID, studentID: $studentID }\r\n    )\r\n  }\r\n`;\r\n","import { Button, Card, Col, Row } from 'antd';\r\nimport React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthContext } from '../../../context';\r\n\r\nexport default ({ course }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Row className='courseDetails__row'>\r\n      <Col>\r\n        <Card className='courseDetails__info'>\r\n          <p className='courseDetails__shortID'>ID: {course.shortID}</p>\r\n          <p>\r\n            <strong>Code:</strong> {course.code}\r\n          </p>\r\n          <p>\r\n            <strong>Name:</strong> {course.name}\r\n          </p>\r\n          <p>\r\n            <strong>Session:</strong> {course.session}\r\n          </p>\r\n          {user.userLevel === 1 && (\r\n            <>\r\n              <Button type='primary' className='courseDetails__takeAttendance'>\r\n                <Link to={`/course/${course.shortID}/attendanceForm`}>\r\n                  Create Attendance\r\n                </Link>\r\n              </Button>\r\n\r\n              <br />\r\n              <br />\r\n            </>\r\n          )}\r\n          <br />\r\n          <Link to={`/course/${course.shortID}/attendanceList`}>\r\n            Attendance List\r\n          </Link>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import { RedoOutlined } from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Layout,\r\n  message,\r\n  Space,\r\n  Table,\r\n} from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"../../../components/common/customModal\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { AuthContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { modalItems } from \"../../../globalData\";\r\nimport {\r\n  KICK_PARTICIPANT_MUTATION,\r\n} from \"../../../graphql/mutation\";\r\nimport { FETCH_COURSE_QUERY, FETCH_PARTICIPANTS_QUERY } from \"../../../graphql/query\";\r\nimport CourseDetailCard from \"./CourseDetailCard\";\r\nimport \"./CourseDetails.css\";\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const columns = [\r\n    {\r\n      title: <strong>Avatar</strong>,\r\n      dataIndex: \"profilePictureURL\",\r\n      key: \"profilePictureURL\",\r\n      render: (imgURL, record) => (\r\n        <Avatar\r\n          src={imgURL}\r\n          size={50}\r\n          style={{\r\n            backgroundColor: `rgb(${Math.random() * 150 + 30}, ${\r\n              Math.random() * 150 + 30\r\n            }, ${Math.random() * 150 + 30})`,\r\n          }}\r\n        >\r\n          {record.displayedName[0]}\r\n        </Avatar>\r\n      ),\r\n      align: \"center\",\r\n    },\r\n    {\r\n      title: <strong>Matric Number</strong>,\r\n      dataIndex: \"cardID\",\r\n      key: \"cardID\",\r\n      align: \"center\",\r\n      sorter: (a, b) => a.cardID.localeCompare(b.cardID),\r\n    },\r\n    {\r\n      title: <strong>Name</strong>,\r\n      dataIndex: \"displayedName\",\r\n      key: \"displayedName\",\r\n      align: \"center\",\r\n      sorter: (a, b) => a.displayedName.localeCompare(b.displayedName),\r\n    },\r\n    {\r\n      title: <strong>Action</strong>,\r\n      key: \"action\",\r\n      render: (index) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            danger\r\n            className=\"courseDetails__kickBtn\"\r\n            onClick={() => {\r\n              setVisible(true);\r\n              setSelectedParticipant(index);\r\n            }}\r\n            loading={\r\n              index.key === selectedParticipant.key &&\r\n              kickParticipantStatus.loading\r\n            }\r\n          >\r\n            Kick\r\n          </Button>\r\n        </Space>\r\n      ),\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  const [selectedParticipant, setSelectedParticipant] = useState({});\r\n\r\n  const [visible, setVisible] = useState(false);\r\n  if (user.userLevel == 0) {\r\n    columns.splice(-1, 1);\r\n  }\r\n\r\n  const fetchCourseGQLQuery = useQuery(\r\n    FETCH_COURSE_QUERY,\r\n    {\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        id: props.match.params.id,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  const fetchParticipantGQLQuery = useQuery(\r\n    FETCH_PARTICIPANTS_QUERY,\r\n    {\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        id: props.match.params.id,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (fetchParticipantGQLQuery.data) {\r\n      setParticipants(fetchParticipantGQLQuery.data.getParticipants);\r\n    }\r\n  }, [fetchParticipantGQLQuery.data]);\r\n\r\n  const [kickParticipantCallback, kickParticipantStatus] = useMutation(\r\n    KICK_PARTICIPANT_MUTATION,\r\n    {\r\n      onCompleted: (data) => {\r\n        message.success(data.kickParticipant);\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleKickParticipant = (participantID, courseID) => {\r\n    kickParticipantCallback({\r\n      update() {\r\n        const updatedParticipant = participants.filter(\r\n          (participant) => participant.key !== participantID\r\n        );\r\n        setParticipants(updatedParticipant);\r\n        //refetch the participant after kicked\r\n        fetchParticipantGQLQuery.refetch();\r\n        setVisible(false);\r\n      },\r\n      variables: { participantID, courseID },\r\n    });\r\n  };\r\n\r\n  const titleList = [\r\n    { name: \"Home\", link: \"/dashboard\" },\r\n    {\r\n      name: `Course: ${props.match.params.id}`,\r\n      link: `/course/${props.match.params.id}`,\r\n    },\r\n  ];\r\n\r\n  const parsedParticipants = (participants) => {\r\n    const currUser = participants.find((par) => par._id === user._id);\r\n    if (currUser)\r\n      participants = [\r\n        currUser,\r\n        ...participants.filter((par) => par._id !== user._id),\r\n      ];\r\n    return participants.map((par) => {\r\n      return {\r\n        key: par._id,\r\n        profilePictureURL: par.profilePictureURL,\r\n        firstName: par.firstName,\r\n        lastName: par.lastName,\r\n        displayedName: par.firstName + \" \" + par.lastName,\r\n        cardID: par.cardID,\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout className=\"courseDetails layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting\r\n          firstName={user.firstName}\r\n          profilePicture={user.profilePicture}\r\n        />\r\n        <PageTitleBreadcrumb titleList={titleList} />\r\n        <Content>\r\n          <Card className=\"courseDetails__card\">\r\n            {fetchCourseGQLQuery.data && (\r\n              <CourseDetailCard\r\n                course={fetchCourseGQLQuery.data.getCourse}\r\n              />\r\n            )}\r\n          </Card>\r\n          <Divider\r\n            orientation=\"left\"\r\n            style={{ color: \"#333\", fontWeight: \"normal\" }}\r\n          >\r\n            Participants\r\n          </Divider>\r\n          <Table\r\n            scroll={{ x: \"max-content\" }}\r\n            columns={columns}\r\n            dataSource={parsedParticipants(participants)}\r\n            loading={fetchParticipantGQLQuery.loading}\r\n          />\r\n\r\n          <Button\r\n            style={{ float: \"right\" }}\r\n            icon={<RedoOutlined />}\r\n            disabled={fetchParticipantGQLQuery.loading}\r\n            loading={fetchParticipantGQLQuery.loading}\r\n            onClick={() => fetchParticipantGQLQuery.refetch()}\r\n          >\r\n            Refresh Table\r\n          </Button>\r\n          <Modal\r\n            title=\"Delete Course\"\r\n            action={modalItems.participant.action.kick}\r\n            itemType={modalItems.participant.name}\r\n            visible={visible}\r\n            loading={kickParticipantStatus.loading}\r\n            handleOk={() =>\r\n              handleKickParticipant(\r\n                selectedParticipant.key,\r\n                props.match.params.id\r\n              )\r\n            }\r\n            handleCancel={() => setVisible(false)}\r\n            payload={selectedParticipant}\r\n          />\r\n        </Content>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (callback, initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const onChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    //event.preventDefault();\r\n    callback();\r\n  };\r\n\r\n  return {\r\n    onChange,\r\n    onSubmit,\r\n    values,\r\n  };\r\n};\r\n","import { useMutation } from \"@apollo/react-hooks\";\r\nimport { Button, Card, Form, Input, Layout, message } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { Footer, Greeting, Navbar, PageTitleBreadcrumb } from \"../sharedLayout\";\r\nimport { AuthContext, CourseContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { ADD_COURSE_MUTATION } from \"../../../graphql/mutation\";\r\nimport { useForm } from \"../../../utils/hooks\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default ({ refetchTableTotal, refetchTable }) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { addCourse } = useContext(CourseContext);\r\n  const { onSubmit, onChange, values } = useForm(submitCallback);\r\n\r\n  const [addCourseCallback, { loading }] = useMutation(ADD_COURSE_MUTATION, {\r\n    update() {\r\n      message.success(\"Create course successfully.\");\r\n      refetchTableTotal();\r\n      refetchTable();\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    variables: {\r\n      name: values.courseName,\r\n      code: values.courseCode,\r\n      session: values.courseSession,\r\n    },\r\n  });\r\n\r\n  function submitCallback() {\r\n    addCourseCallback();\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      <Card title=\"Add Course Form\" className=\"addCourse__card\">\r\n        <br />\r\n        <Form className=\"addCourse__form\" name=\"basic\" onFinish={onSubmit}>\r\n          <Form.Item\r\n            label=\"Course Code\"\r\n            name=\"courseCode\"\r\n            rules={[{ required: true, message: \"Please input course code!\" }]}\r\n          >\r\n            <Input\r\n              name=\"courseCode\"\r\n              placeholder=\"Enter course code\"\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Course Name\"\r\n            name=\"courseName\"\r\n            rules={[{ required: true, message: \"Please input course name!\" }]}\r\n          >\r\n            <Input\r\n              name=\"courseName\"\r\n              placeholder=\"Enter course name\"\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Course Session\"\r\n            name=\"courseSession\"\r\n            rules={[\r\n              { required: true, message: \"Please input course session!\" },\r\n            ]}\r\n          >\r\n            <Input\r\n              name=\"courseSession\"\r\n              placeholder=\"Enter course session\"\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n","import { Layout, Form, Card, Button, Input, message } from 'antd';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { ENROL_COURSE_MUTATION } from '../../../graphql/mutation';\r\nimport React, { useState } from 'react';\r\n\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\n\r\nexport default () => {\r\n  const [courseID, setCourseID] = useState('');\r\n  const [enrolCourseCallback, enrolCourseStatus] = useMutation(\r\n    ENROL_COURSE_MUTATION,\r\n    {\r\n      onCompleted(data) {\r\n        message.success(\r\n          'Enrol success'\r\n        );\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: { id: courseID },\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <p className='alert'>🢃 Enter Course ID for new enrolment</p>\r\n\r\n      <Form style={{ display: 'flex' }} onFinish={() => enrolCourseCallback()}>\r\n        <Form.Item\r\n          label='Course ID'\r\n          name='courseID'\r\n          rules={[{ required: true, message: 'Please input course ID!' }]}\r\n        >\r\n          <Input\r\n            name='courseCode'\r\n            placeholder='Enter course ID to enrol'\r\n            onChange={(e) => setCourseID(e.target.value)}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            loading={enrolCourseStatus.loading}\r\n            style={{ marginLeft: '10px' }}\r\n            htmlType='submit'\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ArrowRightOutlined,\r\n  EditFilled,\r\n  DeleteFilled,\r\n  RedoOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Card, Button, Layout, message, Skeleton, Space, Table } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport AddCourseForm from \"../../../components/common/course/AddCourseForm\";\r\nimport EnrolCourseInput from \"../../../components/common/course/EnrolCourseInput\";\r\nimport Modal from \"../../../components/common/customModal\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { AuthContext, CourseContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { FETCH_COURSE_LIMIT, modalItems } from \"../../../globalData\";\r\nimport {\r\n  WITHDRAW_COURSE_MUTATION,\r\n  DELETE_COURSE_MUTATION,\r\n} from \"../../../graphql/mutation\";\r\nimport {\r\n  FETCH_COURSES_COUNT_QUERY,\r\n  FETCH_COURSES_QUERY,\r\n} from \"../../../graphql/query\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const titleList = [{ name: \"Home\", link: \"/dashboard\" }];\r\n\r\n  const columns = [\r\n    {\r\n      title: <strong>Bil</strong>,\r\n      dataIndex: \"bil\",\r\n      key: \"bil\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: {\r\n        compare: (a, b) => a.bil - b.bil,\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      title: <strong>ID</strong>,\r\n      dataIndex: \"shortID\",\r\n      key: \"shortID\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.code.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: <strong>Code</strong>,\r\n      dataIndex: \"code\",\r\n      key: \"code\",\r\n      align: \"center\",\r\n\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.code.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: <strong>Name</strong>,\r\n      key: \"name\",\r\n      dataIndex: \"name\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      align: \"center\",\r\n      sorter: (a, b) => a.name.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: <strong>Session</strong>,\r\n      key: \"session\",\r\n      dataIndex: \"session\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      align: \"center\",\r\n      sorter: (a, b) => a.name.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: <strong>Owner</strong>,\r\n      key: \"owner\",\r\n      dataIndex: \"owner\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      align: \"center\",\r\n      sorter: (a, b) => a.name.localeCompare(b.date),\r\n    },\r\n    {\r\n      title: <strong>Action</strong>,\r\n      dataIndex: \"action\",\r\n      render: (_, record) => (\r\n        <Skeleton active loading={loading}>\r\n          <Button\r\n            onClick={() => handleAccess(record)}\r\n            style={{ margin: \"10px\" }}\r\n            icon={<ArrowRightOutlined />}\r\n          ></Button>\r\n          <Button\r\n            onClick={() => handleDelete(record)}\r\n            loading={\r\n              selectedCourse.key == record.key && withdrawCourseStatus.loading\r\n            }\r\n            disabled={\r\n              selectedCourse.key == record.key && withdrawCourseStatus.loading\r\n            }\r\n            style={{ margin: \"10px\" }}\r\n            type=\"danger\"\r\n            icon={<DeleteFilled />}\r\n          ></Button>\r\n        </Skeleton>\r\n      ),\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  const parseCourseData = (courses) => {\r\n    let parsedData = [];\r\n    courses.map((c, index) => {\r\n      const tmp = {\r\n        _id: c._id,\r\n        key: c._id,\r\n        bil:\r\n          !loading &&\r\n          tablePagination.pageSize * (tablePagination.current - 1) + index + 1,\r\n        shortID: c.shortID,\r\n        code: c.code,\r\n        name: c.name,\r\n        session: c.session,\r\n        owner: c.creator.firstName+\" \"+c.creator.lastName+\" (\"+c.creator.cardID+\")\"\r\n      };\r\n      parsedData.push(tmp);\r\n    });\r\n\r\n    return parsedData;\r\n  };\r\n\r\n  const { courses, loadCourses } = useContext(CourseContext);\r\n\r\n  const [tablePagination, setTablePagination] = useState({\r\n    pageSize: FETCH_COURSE_LIMIT,\r\n    current: 1,\r\n    total: 0,\r\n  });\r\n\r\n  const [selectedCourse, SetSelectedCourse] = useState({});\r\n\r\n  //modal visible boolean\r\n  const [visible, SetVisible] = useState(false);\r\n\r\n  //get total courses count query\r\n  const totalCoursesQuery = useQuery(FETCH_COURSES_COUNT_QUERY, {\r\n    onCompleted(data) {\r\n      // totalAttendancesCount.refetch();\r\n      setTablePagination({\r\n        ...tablePagination,\r\n        total: data.getCoursesCount,\r\n      });\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  //get list of couse query\r\n  const { data, loading, refetch, fetchMore } = useQuery(FETCH_COURSES_QUERY, {\r\n    onCompleted(data) {\r\n      setTablePagination({\r\n        ...tablePagination,\r\n        total: totalCoursesQuery.data?.getCoursesCount,\r\n      });\r\n\r\n      if (\r\n        totalCoursesQuery.data?.getEnrolledCoursesCount -\r\n          (tablePagination.current - 1) * tablePagination.pageSize <=\r\n          0 &&\r\n        tablePagination.current !== 1\r\n      ) {\r\n        setTablePagination((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            current: prevState.current - 1,\r\n          };\r\n        });\r\n      }\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    variables: {\r\n      currPage: tablePagination.current,\r\n      pageSize: tablePagination.pageSize,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  //withdrawCourse mutation\r\n  const [withdrawCourseCallback, withdrawCourseStatus] = useMutation(\r\n    WITHDRAW_COURSE_MUTATION,\r\n    {\r\n      onCompleted(data) {\r\n        message.success(data.withdrawCourse);\r\n      },\r\n      update() {\r\n        SetVisible(false);\r\n        refetch();\r\n        totalCoursesQuery.refetch();\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        id: selectedCourse._id,\r\n      },\r\n    }\r\n  );\r\n\r\n  const [deleteCourseCallback, deleteCourseStatus] = useMutation(\r\n    DELETE_COURSE_MUTATION,\r\n    {\r\n      update() {\r\n        SetVisible(false);\r\n        refetch();\r\n        totalCoursesQuery.refetch();\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        id: selectedCourse._id,\r\n      },\r\n    }\r\n  );\r\n\r\n  //load courses as long as data is fetched\r\n  useEffect(() => {\r\n    if (data) {\r\n      console.log(data);\r\n      loadCourses(data.getCourses.courses);\r\n    }\r\n  }, [data]);\r\n\r\n  //-> icon is pressed, navigate to course detail page\r\n  const handleAccess = (course) => {\r\n    props.history.push(`/course/${course.shortID}`);\r\n  };\r\n\r\n  //delete icon pressed, show modal\r\n  const handleDelete = (course) => {\r\n    SetSelectedCourse(course);\r\n    SetVisible(true);\r\n  };\r\n\r\n  //modal open\r\n  const handleOk = (e) => {\r\n    if (user.userLevel == 0) withdrawCourseCallback();\r\n    else deleteCourseCallback();\r\n  };\r\n\r\n  //modal close\r\n  const handleCancel = (e) => {\r\n    SetVisible(false);\r\n  };\r\n\r\n  const handleTableChange = (value) => {\r\n    setTablePagination(value);\r\n  };\r\n\r\n  return (\r\n    <Layout className=\"dashboard layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb titleList={titleList} />\r\n        <Card>\r\n          {user.userLevel == 0 && <EnrolCourseInput />}\r\n          {user.userLevel == 1 && (\r\n            <AddCourseForm\r\n              refetchTableTotal={totalCoursesQuery.refetch}\r\n              refetchTable={refetch}\r\n            />\r\n          )}\r\n\r\n          <Space direction=\"vertical\" className=\"width100\">\r\n            <h1>\r\n              Total {user.userLevel == 0 ? \"Enrolled\" : \"Created\"} Course:\r\n              {totalCoursesQuery.data?.getCoursesCount || 0}\r\n            </h1>\r\n            <Button\r\n              style={{ float: \"right\" }}\r\n              icon={<RedoOutlined />}\r\n              disabled={loading}\r\n              loading={loading}\r\n              onClick={() => refetch()}\r\n            >\r\n              Refresh Table\r\n            </Button>\r\n            <Table\r\n              scroll={{ x: \"max-content\" }}\r\n              loading={loading}\r\n              pagination={tablePagination}\r\n              onChange={handleTableChange}\r\n              dataSource={parseCourseData(courses)}\r\n              columns={columns}\r\n            />\r\n            {console.log(courses)}\r\n\r\n            {/*modal backdrop*/}\r\n            <Modal\r\n              title={user.userLevel == 0 ? \"Withdraw Course\" : \"Delete Course\"}\r\n              action={\r\n                user.userLevel == 0\r\n                  ? modalItems.course.action.withdraw\r\n                  : modalItems.course.action.delete\r\n              }\r\n              itemType={modalItems.course.name}\r\n              visible={visible}\r\n              loading={\r\n                user.userLevel == 0\r\n                  ? withdrawCourseStatus.loading\r\n                  : deleteCourseStatus.loading\r\n              }\r\n              handleOk={handleOk}\r\n              handleCancel={handleCancel}\r\n              payload={selectedCourse}\r\n            />\r\n          </Space>\r\n        </Card>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","export const FETCH_ATTENDANCE_LIMIT = 5;\r\nexport const FETCH_COURSE_LIMIT = 5;\r\nexport const FETCH_ENROLMENT_LIMIT = 10;\r\nexport const FETCH_FACE_PHOTOS_LIMIT = 10;\r\nexport const FETCH_NOTIFICATION_LIMIT = 10;","import { Avatar, Layout, Menu } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { APP_LOGO_URL } from '../../../assets';\r\nimport './HeaderNavbar.css';\r\n\r\nconst { Header } = Layout;\r\n\r\nexport default () => {\r\n  const pathname =\r\n    window.location.pathname; /* e.g: pathname=\"/signin\" or \"/\" or \"/signup\" */\r\n  const path = pathname.substr(1); //skip '/' character\r\n  return (\r\n    <div className='headerNavbar'>\r\n      <Header>\r\n        <Link to='/'>\r\n          <div className='headerNavbar__logo'>\r\n            <Avatar\r\n              shape=\"square\"\r\n              className='avatar'\r\n              size='large'\r\n              alt='Attendlytics'\r\n              src={APP_LOGO_URL.link}\r\n              onError={(err) => {\r\n                console.log(err);\r\n              }}\r\n            />\r\n            <div className='headerNavbar__text'>\r\n              <span className='headerNavbar__text__item'>SmartMark</span>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n        <div className='headerNavbar__menu'>\r\n          <Menu theme='dark' mode='horizontal' defaultSelectedKeys={[path]}>\r\n            <Menu.Item key='signin'>\r\n              <Link to='/signin'>Sign in</Link>\r\n            </Menu.Item>\r\n            <Menu.Item key='signup'>\r\n              <Link to='/signup'>Sign up</Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\n","import { Button, Col, Divider, Layout, Row, Typography } from 'antd';\r\nimport Texty from 'rc-texty';\r\nimport 'rc-texty/assets/index.css';\r\nimport '../../../css/main.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\r\nimport { Footer } from '../../../components/common/sharedLayout';\r\nimport teamimg from '../../../assets/images/team.svg';\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n  return (\r\n    <Layout className='home layout'>\r\n      <HeaderNavbar />\r\n      <Content>\r\n      <section class=\"wrapper\">\r\n      <div class=\"container landing\">\r\n        <div class=\"grid-cols-2\">\r\n          <div class=\"grid-item-1\">\r\n            <h1 class=\"main-heading\">\r\n              Welcome to <span>SmartMark</span>\r\n              <br />\r\n            </h1>\r\n            <p class=\"info-text\">\r\n              An AI based, foolproof attendance management system to monitor the\r\n              Student's attendance using Face Recognition\r\n            </p>\r\n\r\n            <div class=\"btn_wrapper\">\r\n              <button class=\"btn view_more_btn\">\r\n              <Link to='/signup' style={{color: \"white\"}}>Get Started...</Link><i class=\"ri-arrow-right-line\"></i>\r\n              </button>\r\n\r\n              <button class=\"btn documentation_btn\"><Link to='/userguidelines'> User Guidelines</Link></button>\r\n            </div>\r\n          </div>\r\n          <div class=\"grid-item-2\">\r\n            <div class=\"team_img_wrapper\">\r\n              <img\r\n                src={teamimg}\r\n                alt=\"team-img\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n      </Content>\r\n      <Footer />\r\n    </Layout>\r\n  );\r\n};\r\n","export const GOOGLE_CLIENT_ID=\"405467209701-eouj6ehmlle59vl4im2jr4fot0ceg5g1.apps.googleusercontent.com\"\r\n","import { LoadingOutlined, LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Space\r\n} from 'antd';\r\nimport React, { useContext, useState } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport HeaderNavbar from '../../../components/common/mainMenu/HeaderNavbar';\r\nimport Footer from '../../../components/common/sharedLayout/Footer';\r\nimport { GOOGLE_CLIENT_ID } from \"../../../config\";\r\nimport { AuthContext } from '../../../context';\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { LOGIN_GOOGLE_USER, LOGIN_USER } from '../../../graphql/mutation';\r\nimport { useForm } from '../../../utils/hooks';\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const context = useContext(AuthContext);\r\n  const { onChange, onSubmit, values } = useForm(loginUserCallback, {\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [pressedGoogleLogin, setPressedGoogleLogin] = useState(false);\r\n\r\n  const [loginUser, { loading }] = useMutation(LOGIN_USER, {\r\n    update(_, { data: { login: userData } }) {\r\n      context.login(userData);\r\n      props.history.push('/dashboard');\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const [loginGoogleUser, loginGoogleUserStatus] = useMutation(\r\n    LOGIN_GOOGLE_USER,\r\n    {\r\n      update(_, { data: { googleSignIn: userData } }) {\r\n        context.login(userData);\r\n        props.history.push('/dashboard');\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  function loginUserCallback() {\r\n    loginUser();\r\n  }\r\n\r\n  const handleGoogleResponse = (res) => {\r\n    setPressedGoogleLogin(false);\r\n    loginGoogleUser({\r\n      variables: {\r\n        googleID: res.profileObj.googleId,\r\n        googleEmail: res.profileObj.email,\r\n        googleFirstName: res.profileObj.givenName,\r\n        googleLastName: res.profileObj.familyName,\r\n        googleProfilePicture: res.profileObj.imageUrl,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Layout className='signin layout'>\r\n      <HeaderNavbar />\r\n\r\n      <Content\r\n        style={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Form\r\n            name='basic'\r\n            initialValues={{ remember: true }}\r\n            onFinish={onSubmit}\r\n          >\r\n            <br />\r\n            <Form.Item\r\n              label='Email'\r\n              name='email'\r\n              rules={[{ required: true, message: 'Please input your email!' }]}\r\n            >\r\n              <Input\r\n                name='email'\r\n                placeholder='Enter your email'\r\n                prefix={<MailOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Password'\r\n              name='password'\r\n              rules={[\r\n                { required: true, message: 'Please input your password!' },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name='password'\r\n                placeholder='Enter your password'\r\n                prefix={<LockOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button\r\n                type='primary'\r\n                htmlType='submit'\r\n                loading={loading}\r\n                disabled={pressedGoogleLogin || loginGoogleUserStatus.loading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n        <Divider />\r\n        <Space>\r\n          <GoogleLogin\r\n            clientId={GOOGLE_CLIENT_ID}\r\n            buttonText='Continue With Google'\r\n            onSuccess={handleGoogleResponse}\r\n            onFailure={(error) => {\r\n              setPressedGoogleLogin(false);\r\n              console.error(error);\r\n            }}\r\n            cookiePolicy={'single_host_origin'}\r\n            onRequest={() => setPressedGoogleLogin(true)}\r\n            disabled={pressedGoogleLogin}\r\n          />\r\n        </Space>\r\n        {loginGoogleUserStatus.loading && (\r\n          <Space>\r\n            <Divider />\r\n              Redirecting, please wait...\r\n            <LoadingOutlined />\r\n          </Space>\r\n        )}\r\n      </Content>\r\n      <Footer />\r\n    </Layout>\r\n  );\r\n};\r\n","import { LockOutlined, MailOutlined, UserOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Button, Card, Form, Input, Layout, message, Radio, Checkbox, Divider, Space } from 'antd';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\r\nimport { Footer } from '../../../components/common/sharedLayout';\r\nimport { AuthContext } from '../../../context';\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { REGISTER_USER } from '../../../graphql/mutation';\r\nimport { useForm } from '../../../utils/hooks';\r\n\r\nimport { LOGIN_GOOGLE_USER } from '../../../graphql/mutation';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { GOOGLE_CLIENT_ID } from \"../../../config\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const context = useContext(AuthContext);\r\n\r\n  const { onChange, onSubmit, values } = useForm(registerUser, {\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    userLevel: 0,\r\n  });\r\n\r\n  const [addUser, { loading }] = useMutation(REGISTER_USER, {\r\n    update(_, { data: { register: userData } }) {\r\n      context.login(userData);\r\n      props.history.push('/dashboard');\r\n      message.info('Welcome To Face In!');\r\n    },\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    variables: values,\r\n  });\r\n\r\n  const [loginGoogleUser, loginGoogleUserStatus] = useMutation(\r\n    LOGIN_GOOGLE_USER,\r\n    {\r\n      update(_, { data: { googleSignIn: userData } }) {\r\n        context.login(userData);\r\n        props.history.push('/dashboard');\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n  const handleGoogleResponse = (res) => {\r\n    setPressedGoogleLogin(false);\r\n    loginGoogleUser({\r\n      variables: {\r\n        googleID: res.profileObj.googleId,\r\n        googleEmail: res.profileObj.email,\r\n        googleFirstName: res.profileObj.givenName,\r\n        googleLastName: res.profileObj.familyName,\r\n        googleProfilePicture: res.profileObj.imageUrl,\r\n      },\r\n    });\r\n  };\r\n\r\n  const [isAgreementChecked, setIsAgreementChecked] = useState(false);\r\n  const [pressedGoogleLogin, setPressedGoogleLogin] = useState(false);\r\n\r\n  function registerUser() {\r\n    addUser();\r\n  }\r\n\r\n  return (\r\n    <Layout className='signin layout'>\r\n      <HeaderNavbar />\r\n      <Content style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n        <Card style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <Form\r\n            name='basic'\r\n            initialValues={{ remember: true }}\r\n            onFinish={onSubmit}\r\n          >\r\n            <br />\r\n            <Form.Item\r\n              label='Email'\r\n              name='email'\r\n              rules={[\r\n                { required: true, message: 'Please input your email!' },\r\n                {\r\n                  pattern: /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/,\r\n                  message: 'Please enter valid email!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                name='email'\r\n                placeholder='Enter your email'\r\n                prefix={<MailOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='First Name'\r\n              name='firstName'\r\n              rules={[\r\n                { required: true, message: 'Please input your first name!' },\r\n                { min: 1, message: 'Please enter more than 3 character' },\r\n                {\r\n                  whitespace: true,\r\n                  message: 'Please do not insert whitespace only!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                name='firstName'\r\n                placeholder='Enter your first name'\r\n                prefix={<UserOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Last Name'\r\n              name='lastName'\r\n              rules={[\r\n                { required: true, message: 'Please input your last name!' },\r\n\r\n                { min: 1, message: 'Please enter more than 3 character' },\r\n                {\r\n                  whitespace: true,\r\n                  message: 'Please do not insert whitespace only!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                name='lastName'\r\n                placeholder='Enter your last name'\r\n                prefix={<UserOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Staff ID/Matrix No'\r\n              name='cardID'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your staff ID/Matrix No!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                name='cardID'\r\n                placeholder='Enter your staff ID/Matrix No'\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Password'\r\n              name='password'\r\n              rules={[\r\n                { required: true, message: 'Please input your password!' },\r\n                { min: 6, message: 'Please enter more than 6 character' },\r\n                {\r\n                  whitespace: true,\r\n                  message: 'Please do not insert whitespace only!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name='password'\r\n                placeholder='Enter your password'\r\n                prefix={<LockOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label='Confirm Password'\r\n              name='confirmPassword'\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input your confirm password!',\r\n                },\r\n                ({ getFieldValue }) => ({\r\n                  validator(rule, value) {\r\n                    if (!value || getFieldValue('password') === value) {\r\n                      return Promise.resolve();\r\n                    }\r\n                    return Promise.reject(\r\n                      'The two passwords that you entered do not match!'\r\n                    );\r\n                  },\r\n                }),\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                name='confirmPassword'\r\n                placeholder='Enter your confirm password'\r\n                prefix={<LockOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label='Role' name='userLevel' valuePropName='checked'>\r\n              <Radio.Group\r\n                name='userLevel'\r\n                value={values.userLevel}\r\n                onChange={onChange}\r\n              >\r\n                <Radio value={0}>Student</Radio>\r\n                <Radio value={1}>Lecturer</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Divider />\r\n\r\n            <Form.Item>\r\n              <Button type='primary' htmlType='submit' loading={loading} disabled={pressedGoogleLogin || loginGoogleUserStatus.loading}>\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n\r\n        <Divider />\r\n        <Space>\r\n          <GoogleLogin\r\n            clientId={GOOGLE_CLIENT_ID}\r\n            buttonText='Continue With Google'\r\n            onSuccess={handleGoogleResponse}\r\n            onFailure={(error) => {\r\n              setPressedGoogleLogin(false);\r\n              console.error(error);\r\n            }}\r\n            cookiePolicy={'single_host_origin'}\r\n            onRequest={() => setPressedGoogleLogin(true)}\r\n            disabled={pressedGoogleLogin}\r\n          />\r\n        </Space>\r\n        {loginGoogleUserStatus.loading && (\r\n\r\n          <Space>\r\n            <Divider />\r\n\r\n            Redirecting, please wait...\r\n            <LoadingOutlined />\r\n          </Space>\r\n        )}\r\n      </Content>\r\n\r\n      <Footer />\r\n    </Layout>\r\n  );\r\n};\r\n","import { Button, Col, Layout, Row } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar\r\n} from '../../../components/common/sharedLayout';\r\nimport './NoFound.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default () => {\r\n  return (\r\n    <Layout className='nofound layout'>\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <Content className='nofound__content'>\r\n          <Row className='nofound__panel'>\r\n            <Col span={24} style={{ marginBottom: '20px' }}>\r\n              Page Not Found: \"{window.location.pathname}\"\r\n            </Col>\r\n\r\n            <Col span={24}>\r\n              <Button type='primary'>\r\n                <Link to='/dashboard'>Home Page</Link>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Content>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","/*\r\n  Single notification\r\n*/\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { Card } from 'antd';\r\nimport moment from 'moment';\r\nimport React from 'react';\r\nimport './Notification.css';\r\n\r\nexport default ({ notification }) => {\r\n  return (\r\n    <Card\r\n      className={\r\n        notification.checked ? 'notification' : 'unchecked_notification'\r\n      }\r\n    >\r\n      <h1 className='notification__title'>{notification.title}</h1>\r\n      <hr />\r\n      <p className='notification__content'>{notification.content}</p>\r\n      <div className='notification__seen'>\r\n        {notification.checked ? (\r\n          <>\r\n            <CheckOutlined /> seen\r\n          </>\r\n        ) : (\r\n          <>new</>\r\n        )}\r\n      </div>\r\n      <div className='notification__createdAt'>\r\n        {moment(notification.updatedAt).fromNow(true)}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","//This is a helper function to conditionally determine the fetch status\r\n\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { Button } from 'antd';\r\nimport React from 'react';\r\n\r\nexport const FetchChecker = ({\r\n  loading,\r\n  payload,\r\n  fetchedDone,\r\n  allLoadedMessage,\r\n  noItemMessage,\r\n  handleFetchMore,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {payload.length > 0 && !fetchedDone && (\r\n        <Button onClick={handleFetchMore} disabled={loading}>\r\n          Load More\r\n          {loading ? <LoadingOutlined /> : null}\r\n        </Button>\r\n      )}\r\n\r\n      {!loading && payload?.length !== 0 && fetchedDone && (\r\n        <div className='allLoadedCard'>\r\n          <h3>{allLoadedMessage}</h3>\r\n        </div>\r\n      )}\r\n\r\n      {!loading && payload?.length === 0 && <p>{noItemMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import { Spin } from 'antd';\r\nimport React from 'react';\r\n\r\nexport const LoadingSpin = ({ loading }) => {\r\n  return (\r\n    loading && (\r\n      <div style={{ textAlign: 'center' }}>\r\n        <Spin tip='Loading...' />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n","import { useQuery } from '@apollo/react-hooks';\r\nimport { Button, Card, Layout, Spin } from 'antd';\r\nimport React, { useContext, useState, useEffect } from 'react';\r\nimport Notification from '../../../components/common/notification/Notification';\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from '../../../components/common/sharedLayout';\r\nimport { NotificationContext } from '../../../context';\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { FETCH_NOTIFICATION_LIMIT } from '../../../globalData';\r\nimport { FETCH_NOTIFICATIONS_QUERY } from '../../../graphql/query';\r\nimport './Notifications.css';\r\nimport { FetchChecker } from '../../../utils/FetchChecker';\r\nimport { LoadingSpin } from '../../../utils/LoadingSpin';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default () => {\r\n  const {\r\n    notifications,\r\n    fetchedDone,\r\n    setFetchedDone,\r\n    loadNotifications,\r\n    uncheckedNotificationCount,\r\n    setUncheckedNotificationCount,\r\n  } = useContext(NotificationContext);\r\n\r\n  const { data, loading, error, fetchMore, networkStatus } = useQuery(\r\n    FETCH_NOTIFICATIONS_QUERY,\r\n    {\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        limit: FETCH_NOTIFICATION_LIMIT,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      loadNotifications(data.getNotifications.notifications);\r\n\r\n      let count = 0;\r\n      data.getNotifications.notifications.map((n) => {\r\n        if (!n.checked) count++;\r\n        setTimeout(() => (n.checked = true), 2000);\r\n      });\r\n\r\n      if (uncheckedNotificationCount >= count)\r\n        setUncheckedNotificationCount(uncheckedNotificationCount - count);\r\n\r\n      if (!data.getNotifications.hasNextPage) setFetchedDone(true);\r\n      else setFetchedDone(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleFetchMore = () => {\r\n    fetchMore({\r\n      variables: {\r\n        limit: FETCH_NOTIFICATION_LIMIT,\r\n        cursor: notifications[notifications.length - 1]._id,\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      updateQuery: (pv, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult.getNotifications.hasNextPage) {\r\n          setFetchedDone(true);\r\n        }\r\n        let count = 0;\r\n\r\n        fetchMoreResult.getNotifications.notifications.map((n) => {\r\n          if (!n.checked) count++;\r\n          return null;\r\n        });\r\n        if (uncheckedNotificationCount >= count)\r\n          setUncheckedNotificationCount(uncheckedNotificationCount - count);\r\n        return {\r\n          getNotifications: {\r\n            __typename: 'Notifications',\r\n            notifications: [\r\n              ...pv.getNotifications.notifications,\r\n              ...fetchMoreResult.getNotifications.notifications,\r\n            ],\r\n            hasNextPage: fetchMoreResult.getNotifications.hasNextPage,\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <div className='notifications'>\r\n      <Layout className='notifications layout'>\r\n        <Navbar />\r\n\r\n        <Layout>\r\n          <Greeting />\r\n          <PageTitleBreadcrumb\r\n            titleList={[{ name: 'Notification', link: '/notification' }]}\r\n          />\r\n          <Content className='notifications__content'>\r\n\r\n            <Card>\r\n              {notifications &&\r\n                notifications.map((notification) => (\r\n                  <Notification\r\n                    key={notification._id}\r\n                    notification={notification}\r\n                  />\r\n                ))}\r\n\r\n              <LoadingSpin loading={loading} />\r\n              <FetchChecker\r\n                loading={loading}\r\n                payload={notifications}\r\n                fetchedDone={fetchedDone}\r\n                allLoadedMessage='All Notification Loaded'\r\n                noItemMessage='No Notification...'\r\n                handleFetchMore={handleFetchMore}\r\n              />\r\n            </Card>\r\n\r\n          </Content>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n","import { LoadingOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { useMutation } from '@apollo/react-hooks';\r\nimport { Avatar, Button, Card, Form, Input, Layout, message } from 'antd';\r\nimport React, { useContext, useState } from 'react';\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from '../../../components/common/sharedLayout';\r\nimport { AuthContext } from '../../../context';\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { EDIT_PROFILE_MUTATION } from '../../../graphql/mutation';\r\nimport './Profile.css';\r\n\r\nconst { Content } = Layout;\r\n\r\nexport default () => {\r\n  const { user, avatarColor, editProfile } = useContext(AuthContext);\r\n\r\n  const [previewSource, setPreviewSource] = useState(null);\r\n  const [editProfileMutation, { loading }] = useMutation(\r\n    EDIT_PROFILE_MUTATION,\r\n    {\r\n      update(_, { data }) {\r\n        editProfile(data.editProfile);\r\n        message.success('Edit Success!');\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  function submitCallback(values) {\r\n    editProfileMutation({\r\n      variables: { ...values, profilePicture: previewSource },\r\n    });\r\n  }\r\n\r\n  const previewFile = (file) => {\r\n    if (!file) return;\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = () => {\r\n      setPreviewSource(reader.result);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className='addCourse'>\r\n      <Layout className=' layout'>\r\n        <Navbar />\r\n        <Layout>\r\n          <Greeting />\r\n          <PageTitleBreadcrumb\r\n            titleList={[{ name: 'Profile', link: '/profile' }]}\r\n          />\r\n          <Content className='profile__content'>\r\n            <Card className='profile__card'>\r\n              <div className='profile__picture__container'>\r\n                <Avatar\r\n                  src={previewSource ? previewSource : user.profilePictureURL}\r\n                  size={200}\r\n                  className='profile__picture'\r\n                  style={!user.profilePictureURL&&{...avatarColor, fontSize: \"100px\"}}\r\n                >\r\n                  {user.firstName[0]}\r\n                </Avatar>\r\n                <label className='profile__picture__label' htmlFor='files'>\r\n                  Change Profile Picture\r\n                </label>\r\n                <input\r\n                  className='profile__picture__input'\r\n                  type='file'\r\n                  id='files'\r\n                  onChange={(e) => {\r\n                    const file = e.target.files[0];\r\n                    previewFile(file);\r\n                  }}\r\n                  accept='image/x-png,image/gif,image/jpeg'\r\n                />\r\n              </div>\r\n\r\n              <Form\r\n                className='profile__form'\r\n                name='basic'\r\n                onFinish={submitCallback}\r\n                initialValues={{\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  cardID: user.cardID,\r\n                }}\r\n              >\r\n                <Form.Item label='Email' name='email'>\r\n                  <Input name='email' defaultValue={user.email} disabled />\r\n                </Form.Item>\r\n\r\n                <Form.Item label='Role' name='Role'>\r\n                  <Input\r\n                    name='role'\r\n                    defaultValue={`${\r\n                      user.userLevel === 0 ? 'Student' : 'Lecturer'\r\n                    }`}\r\n                    disabled\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='First Name'\r\n                  name='firstName'\r\n                  rules={[\r\n                    { required: true, message: 'Please input first name!' },\r\n                  ]}\r\n                >\r\n                  <Input name='firstName' placeholder='Enter your first name' />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label='Last Name'\r\n                  name='lastName'\r\n                  rules={[\r\n                    { required: true, message: 'Please enter your last name!' },\r\n                  ]}\r\n                >\r\n                  <Input name='lastName' placeholder='Enter your last name' />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  label={user.userLevel === 0 ? 'Matric Number' : 'Staff ID'}\r\n                  name='cardID'\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: `Please your ${\r\n                        user.userLevel === 0 ? 'Matric Number' : 'Staff ID'\r\n                      }!`,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    name='cardID'\r\n                    placeholder={`Enter your ${\r\n                      user.userLevel === 0 ? 'Matric Number' : 'Staff ID'\r\n                    }`}\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button type='primary' htmlType='submit' disabled={loading}>\r\n                    Submit {loading ? <LoadingOutlined /> : null}\r\n                  </Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          </Content>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  DeleteFilled,\r\n  ProfileOutlined,\r\n  RedoOutlined,\r\n  RightCircleFilled,\r\n  ClockCircleFilled,\r\n  StopOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Divider,\r\n  Layout,\r\n  message,\r\n  Skeleton,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Tooltip,\r\n  Typography,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../../../components/common/customModal\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { AuthContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { FETCH_ATTENDANCE_LIMIT, modalItems } from \"../../../globalData\";\r\nimport { DELETE_ATTENDANCE_MUTATION } from \"../../../graphql/mutation\";\r\nimport {\r\n  FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY,\r\n  FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY,\r\n} from \"../../../graphql/query\";\r\n\r\nconst { Title } = Typography;\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [attendanceList, setAttendanceList] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: <strong>Bil</strong>,\r\n      dataIndex: \"bil\",\r\n      key: \"bil\",\r\n      render: (text) => <Skeleton loading={loading}>{text}</Skeleton>,\r\n      sorter: {\r\n        compare: (a, b) => a.bil - b.bil,\r\n        multiple: 2,\r\n      },\r\n    },\r\n    {\r\n      key: \"room\",\r\n      title: <strong>Attendance Room ID</strong>,\r\n      dataIndex: \"room\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.mode.localeCompare(b.mode),\r\n    },\r\n    {\r\n      key: \"date\",\r\n      title: <strong>Date</strong>,\r\n      dataIndex: \"date\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.date.localeCompare(b.date),\r\n    },\r\n    {\r\n      key: \"time\",\r\n      title: <strong>Time</strong>,\r\n      dataIndex: \"time\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.time.localeCompare(b.time),\r\n    },\r\n    {\r\n      key: \"mode\",\r\n      title: <strong>Mode</strong>,\r\n      dataIndex: \"mode\",\r\n      align: \"center\",\r\n      render: (text) => (\r\n        <Skeleton active loading={loading}>\r\n          {text}\r\n        </Skeleton>\r\n      ),\r\n      sorter: (a, b) => a.mode.localeCompare(b.mode),\r\n    },\r\n    {\r\n      title: <strong>Open</strong>,\r\n      dataIndex: \"open\",\r\n      key: \"open\",\r\n      render: (text) => (\r\n        <Tag color={text == \"On\" ? \"#0c8\" : \"#f00\"}>\r\n          {text} {text == \"On\" ? <ClockCircleFilled /> : <StopOutlined />}\r\n        </Tag>\r\n      ),\r\n      align: \"center\",\r\n      sorter: (a, b) => a.open.localeCompare(b.open),\r\n    },\r\n    {\r\n      title: <strong>{\"Action\"}</strong>,\r\n      dataIndex: user.userLevel === 1 ? \"action\" : \"status\",\r\n      render: (_, record) => (\r\n        <Skeleton loading={loading} active>\r\n          <Tooltip placement=\"topLeft\" title=\"Go to Room\">\r\n            <Button\r\n              onClick={() => handleAccessRoom(record)}\r\n              style={{ margin: \"10px\" }}\r\n              icon={<RightCircleFilled />}\r\n            ></Button>\r\n          </Tooltip>\r\n\r\n          <Tooltip placement=\"topLeft\" title=\"History Record\">\r\n            <Button\r\n              onClick={() => handleAccessHistory(record)}\r\n              style={{ margin: \"10px\" }}\r\n              icon={<ProfileOutlined />}\r\n            ></Button>\r\n          </Tooltip>\r\n\r\n          {user.userLevel == 1 && (\r\n            <Tooltip placement=\"topLeft\" title=\"Delete Record\">\r\n              <Button\r\n                onClick={() => handleDelete(record)}\r\n                loading={\r\n                  selectedAttendance.key == record.key &&\r\n                  deleteAttendanceListtatus.loading\r\n                }\r\n                disabled={\r\n                  selectedAttendance.key == record.key &&\r\n                  deleteAttendanceListtatus.loading\r\n                }\r\n                style={{ margin: \"10px\" }}\r\n                type=\"danger\"\r\n                icon={<DeleteFilled />}\r\n              ></Button>\r\n            </Tooltip>\r\n          )}\r\n        </Skeleton>\r\n      ),\r\n      align: \"center\",\r\n    },\r\n  ];\r\n\r\n  //modal visible boolean\r\n  const [visible, SetVisible] = useState(false);\r\n\r\n  const [tablePagination, setTablePagination] = useState({\r\n    pageSize: FETCH_ATTENDANCE_LIMIT,\r\n    current: 1,\r\n    total: 0,\r\n  });\r\n\r\n  //get total attendanceList count query\r\n  const [selectedAttendance, setSelectedAttendance] = useState({});\r\n  const totalAttendanceListCountInCourse = useQuery(\r\n    FETCH_ATTENDANCE_LIST_COUNT_IN_COURSE_QUERY,\r\n    {\r\n      onCompleted(data) {\r\n        totalAttendanceListCountInCourse.refetch();\r\n        setTablePagination({\r\n          ...tablePagination,\r\n          total: data.getAttendanceListCountInCourse,\r\n        });\r\n      },\r\n      variables: {\r\n        courseID: props.match.params.id,\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n  const { data, loading, error, refetch } = useQuery(\r\n    FETCH_ATTENDANCE_LIST_IN_COURSE_QUERY,\r\n    {\r\n      onCompleted(data) {\r\n        setTablePagination({\r\n          ...tablePagination,\r\n          total:\r\n            totalAttendanceListCountInCourse.data\r\n              ?.getAttendanceListCountInCourse,\r\n        });\r\n        if (\r\n          totalAttendanceListCountInCourse.data\r\n            ?.getAttendanceListCountInCourse -\r\n            (tablePagination.current - 1) * tablePagination.pageSize <=\r\n            0 &&\r\n          tablePagination.current !== 1\r\n        ) {\r\n          setTablePagination((prevState) => {\r\n            return {\r\n              ...prevState,\r\n              current: prevState.current - 1,\r\n            };\r\n          });\r\n        }\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        courseID: props.match.params.id,\r\n        currPage: tablePagination.current,\r\n        pageSize: tablePagination.pageSize,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  const [deleteAttendanceCallback, deleteAttendanceListtatus] = useMutation(\r\n    DELETE_ATTENDANCE_MUTATION,\r\n    {\r\n      onCompleted(data) {\r\n        SetVisible(false);\r\n        message.success(\"Delete Success\");\r\n        totalAttendanceListCountInCourse.refetch();\r\n        refetch();\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        attendanceID: selectedAttendance.key,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    setAttendanceList(data?.getAttendanceListInCourse.attendanceList || []);\r\n  }, [data]);\r\n\r\n  const handleAccessHistory = (attendance) => {\r\n    props.history.push(\r\n      `/course/${props.match.params.id}/attendanceList/${attendance.key}`\r\n    );\r\n  };\r\n\r\n  const handleAccessRoom = (attendance) => {\r\n    props.history.push(\r\n      `/course/${props.match.params.id}/attendanceRoom/${attendance.key}`\r\n    );\r\n  };\r\n\r\n  const handleDelete = (attendance) => {\r\n    setSelectedAttendance(attendance);\r\n    SetVisible(true);\r\n  };\r\n  const handleOk = (e) => {\r\n    deleteAttendanceCallback();\r\n  };\r\n\r\n  const handleCancel = (e) => {\r\n    SetVisible(false);\r\n  };\r\n\r\n  const parseAttendanceData = (attendanceList) => {\r\n    let parsedData = [];\r\n    attendanceList.map((att, index) => {\r\n      console.log(att);\r\n      const tmp = {\r\n        key: att._id,\r\n        bil:\r\n          !loading &&\r\n          tablePagination.pageSize * (tablePagination.current - 1) + index + 1,\r\n        date: moment(att.date).format(\"DD/MM/YYYY\"),\r\n        time: moment(att.time).format(\"HH:mm\"),\r\n        room: att._id,\r\n        mode: att.mode,\r\n        open: att.isOn ? \"On\" : \"Off\",\r\n      };\r\n      parsedData.push(tmp);\r\n    });\r\n\r\n    return parsedData;\r\n  };\r\n\r\n  const handleTableChange = (value) => {\r\n    setTablePagination(value);\r\n  };\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb\r\n          titleList={[\r\n            { name: \"Home\", link: \"/dashboard\" },\r\n            {\r\n              name: `Course: ${props.match.params.id}`,\r\n              link: `/course/${props.match.params.id}`,\r\n            },\r\n            {\r\n              name: \"Attendance List\",\r\n              link: `/course/${props.match.params.id}/attendanceList`,\r\n            },\r\n          ]}\r\n        />\r\n        <Content>\r\n          <Card>\r\n            <Space direction=\"vertical\" className=\"width100\">\r\n              {data && (\r\n                <Title level={4}>\r\n                  Course:{\" \"}\r\n                  {`${data.getAttendanceListInCourse.course.code} ${data.getAttendanceListInCourse.course.name} (${data.getAttendanceListInCourse.course.session})`}\r\n                </Title>\r\n              )}\r\n              <Divider />\r\n              <h1>\r\n                Total Attendance:{\" \"}\r\n                {totalAttendanceListCountInCourse.data\r\n                  ?.getAttendanceListCountInCourse || 0}\r\n              </h1>\r\n              {user.userLevel === 1 && (\r\n                <Button style={{ float: \"right\" }} type=\"primary\">\r\n                  <Link\r\n                    to={`/course/${props.match.params.id}/attendanceForm`}\r\n                  >\r\n                    Create Attendance\r\n                  </Link>\r\n                </Button>\r\n              )}\r\n              <Button\r\n                style={{ float: \"right\" }}\r\n                icon={<RedoOutlined />}\r\n                disabled={loading}\r\n                loading={loading}\r\n                onClick={() => refetch()}\r\n              >\r\n                Refresh Table\r\n              </Button>\r\n              <Table\r\n                scroll={{ x: \"max-content\" }}\r\n                loading={loading}\r\n                pagination={tablePagination}\r\n                dataSource={parseAttendanceData(attendanceList)}\r\n                onChange={handleTableChange}\r\n                columns={columns}\r\n              />\r\n\r\n              {/*modal backdrop*/}\r\n              <Modal\r\n                title=\"Delete Attendance\"\r\n                action={modalItems.attendance.action.delete}\r\n                itemType={modalItems.attendance.name}\r\n                visible={visible}\r\n                loading={deleteAttendanceListtatus.loading}\r\n                handleOk={handleOk}\r\n                handleCancel={handleCancel}\r\n                payload={selectedAttendance}\r\n              />\r\n            </Space>\r\n          </Card>\r\n        </Content>\r\n\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\r\n\r\nexport default ({ attendeesLength, absenteesLength }) => {\r\n  const [data, setData] = useState([\r\n    { name: \"Attendees\", value: attendeesLength },\r\n    { name: \"Absentees\", value: absenteesLength },\r\n  ]);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const [pieSize, setPieSize] = useState({\r\n    width: window.innerWidth,\r\n    height: window.innerHeight,\r\n  });\r\n  const PIECOLORS = [\"#00C49F\", \"#ee8888\"];\r\n\r\n  const onPieEnter = (data, index) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setPieSize({ width: window.innerWidth, height: window.innerHeight });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setData([\r\n      { name: \"Attendees\", value: attendeesLength },\r\n      { name: \"Absentees\", value: absenteesLength },\r\n    ]);\r\n  }, [attendeesLength, absenteesLength]);\r\n\r\n  const renderActiveShape = (props) => {\r\n    const RADIAN = Math.PI / 180;\r\n    const {\r\n      cx,\r\n      cy,\r\n      midAngle,\r\n      innerRadius,\r\n      outerRadius,\r\n      startAngle,\r\n      endAngle,\r\n      fill,\r\n      payload,\r\n      percent,\r\n      value,\r\n    } = props;\r\n    const sin = Math.sin(-RADIAN * midAngle);\r\n    const cos = Math.cos(-RADIAN * midAngle);\r\n    const sx = cx + (outerRadius + 10) * cos;\r\n    const sy = cy + (outerRadius + 10) * sin;\r\n    const mx = cx + (outerRadius + 30) * cos;\r\n    const my = cy + (outerRadius + 30) * sin;\r\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n    const ey = my;\r\n    const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n\r\n    return (\r\n      <g>\r\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n          {payload.name}\r\n        </text>\r\n        <Sector\r\n          cx={cx}\r\n          cy={cy}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          startAngle={startAngle}\r\n          endAngle={endAngle}\r\n          fill={fill}\r\n        />\r\n        <Sector\r\n          cx={cx}\r\n          cy={cy}\r\n          startAngle={startAngle}\r\n          endAngle={endAngle}\r\n          innerRadius={outerRadius + 6}\r\n          outerRadius={outerRadius + 10}\r\n          fill={fill}\r\n        />\r\n        <path\r\n          d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n          stroke={fill}\r\n          fill=\"none\"\r\n        />\r\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n        <text\r\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n          y={ey}\r\n          textAnchor={textAnchor}\r\n          fill=\"#333\"\r\n        >{`${value}`}</text>\r\n        <text\r\n          x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n          y={ey}\r\n          dy={18}\r\n          textAnchor={textAnchor}\r\n          fill=\"#999\"\r\n        >\r\n          {`(${(percent * 100).toFixed(2)}%)`}\r\n        </text>\r\n      </g>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <PieChart width={pieSize.width} height={pieSize.height / 2}>\r\n      <Pie\r\n        activeIndex={activeIndex}\r\n        activeShape={renderActiveShape}\r\n        data={data}\r\n        dataKey=\"value\"\r\n        cx={(pieSize.width * 3) / 7}\r\n        cy={200}\r\n        innerRadius={70}\r\n        outerRadius={100}\r\n        fill=\"#8884d8\"\r\n        onMouseEnter={onPieEnter}\r\n      >\r\n        {data.map((entry, index) => (\r\n          <Cell\r\n            key={`cell-${index}`}\r\n            fill={PIECOLORS[index % PIECOLORS.length]}\r\n          />\r\n        ))}\r\n      </Pie>\r\n    </PieChart>\r\n  );\r\n};\r\n\r\n\r\n","import { UserOutlined, RedoOutlined } from \"@ant-design/icons\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  Divider,\r\n  Layout,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Button,\r\n  Typography,\r\n} from \"antd\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport {\r\n  FETCH_ATTENDANCE_QUERY,\r\n  FETCH_PARTICIPANTS_QUERY,\r\n  FETCH_TRX_LIST_IN_ATTENDANCE,\r\n} from \"../../../graphql/query\";\r\nimport HistoryViz from \"./HistoryViz\";\r\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title } = Typography;\r\nconst { Content } = Layout;\r\n\r\nexport default (props) => {\r\n  const columns = [\r\n    {\r\n      title: <strong>Avatar</strong>,\r\n      dataIndex: \"avatar\",\r\n      key: \"avatar\",\r\n      align: \"center\",\r\n      width: \"5%\",\r\n    },\r\n    {\r\n      key: \"cardID\",\r\n      title: <strong>Matric Number</strong>,\r\n      dataIndex: \"cardID\",\r\n      align: \"center\",\r\n      sorter: (a, b) => a.cardID.localeCompare(b.cardID),\r\n    },\r\n    {\r\n      key: \"name\",\r\n      title: <strong>Name</strong>,\r\n      dataIndex: \"name\",\r\n      align: \"center\",\r\n      sorter: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n    {\r\n      title: <strong>Status</strong>,\r\n      dataIndex: \"status\",\r\n      render: (_, record) => (\r\n        <Tag color={record.status === \"Absent\" ? \"volcano\" : \"green\"}>\r\n          {record.status}\r\n        </Tag>\r\n      ),\r\n      align: \"center\",\r\n      sorter: (a, b) => a.status.localeCompare(b.status),\r\n    },\r\n    {\r\n      title: <strong>Check In Date</strong>,\r\n      dataIndex: \"checkin_date\",\r\n      render: (_, record) => record.checkin_date,\r\n      align: \"center\",\r\n      sorter: (a, b) => a.checkin_date.localeCompare(b.checkin_date),\r\n    },\r\n    {\r\n      title: <strong>Check In Time</strong>,\r\n      dataIndex: \"checkin_time\",\r\n      render: (_, record) => record.checkin_time,\r\n      align: \"center\",\r\n      sorter: (a, b) => a.checkin_time.localeCompare(b.checkin_time),\r\n    },\r\n  ];\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  const [attendees, setAttendees] = useState([]);\r\n  const [absentees, setAbsentees] = useState([]);\r\n  const [trx, setTrx] = useState([]);\r\n\r\n  const [stats, setStats] = useState(\"\");\r\n\r\n  const attendanceGQLQuery = useQuery(FETCH_ATTENDANCE_QUERY, {\r\n    onError(err) {\r\n      props.history.push(\r\n        `/course/${props.match.params.courseID}/attendanceList`\r\n      );\r\n\r\n      CheckError(err);\r\n    },\r\n    variables: {\r\n      attendanceID: props.match.params.attendanceID,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const courseAndParticipantsGQLQuery = useQuery(\r\n    FETCH_PARTICIPANTS_QUERY,\r\n    {\r\n      onError(err) {\r\n        props.history.push(`/dashboard`);\r\n\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        id: props.match.params.courseID,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  const trxListInAttendanceGQLQuery = useQuery(FETCH_TRX_LIST_IN_ATTENDANCE, {\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    variables: {\r\n      attendanceID: props.match.params.attendanceID,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n  \r\n  useEffect(() => {\r\n    if (courseAndParticipantsGQLQuery.data) {\r\n      setParticipants(\r\n        courseAndParticipantsGQLQuery.data.getParticipants\r\n      );\r\n    }\r\n  }, [courseAndParticipantsGQLQuery.data]);\r\n\r\n  useEffect(() => {\r\n    if (trxListInAttendanceGQLQuery.data) {\r\n      const currAbsentees = participants.filter((participant) => {\r\n        delete participant.attend_at;\r\n\r\n        const result = trxListInAttendanceGQLQuery.data.getTrxListInAttendance.filter(\r\n          (attendee) => participant._id == attendee.studentID\r\n        );\r\n\r\n        return result.length == 0; //count as absentee if no found\r\n      });\r\n\r\n\r\n      const currAttendees = participants.filter((participant) => {\r\n        const result = trxListInAttendanceGQLQuery.data.getTrxListInAttendance.filter(\r\n          (attendee) => participant._id == attendee.studentID\r\n        );\r\n          console.log(\"result\", result);\r\n        if (result.length >= 1) {\r\n          Object.assign(participant, { attend_at: result[0].createdAt });\r\n        }\r\n        return result.length >= 1; //count as attendee if found\r\n      });\r\n\r\n      setAbsentees(currAbsentees);\r\n      setAttendees(currAttendees);\r\n    }\r\n    return ()=>{\r\n      \r\n      setAbsentees([]);\r\n      setAttendees([]);\r\n    }\r\n  }, [participants, trxListInAttendanceGQLQuery.data]);\r\n\r\n  useEffect(() => {\r\n    setStats(`${attendees.length}/${participants.length}`);\r\n    return ()=>{\r\n      setStats(\"\");\r\n    }\r\n  }, [attendees, absentees, participants]);\r\n\r\n  const parseParticipantData = (participants, absentees) => {\r\n    let parsedData = [];\r\n    console.log(absentees)\r\n    participants.map((participant, index) => {\r\n      const tmp = {\r\n        key: participant._id,\r\n        avatar: (\r\n          <Avatar\r\n            src={participant.profilePictureURL}\r\n            style={{\r\n              backgroundColor: `rgb(${Math.random() * 150 + 30}, ${\r\n                Math.random() * 150 + 30\r\n              }, ${Math.random() * 150 + 30})`,\r\n            }}\r\n          >\r\n            {/* Set the avatar to participant's first name */}\r\n            {participant.firstName[0]}\r\n          </Avatar>\r\n        ),\r\n        cardID: participant.cardID,\r\n        name: participant.firstName + \" \" + participant.lastName,\r\n\r\n        status: absentees.find((abs) => abs._id == participant._id)\r\n          ? \"Absent\"\r\n          : \"Attend\",\r\n        checkin_date: participant.attend_at\r\n          ? moment(participant.attend_at).format(\"DD/MM/YYYY\")\r\n          : \"-\",\r\n        checkin_time: participant.attend_at\r\n          ? moment(participant.attend_at).format(\"h:mm:ss a\")\r\n          : \"-\",\r\n      };\r\n      parsedData.push(tmp);\r\n    });\r\n\r\n    return parsedData;\r\n  };\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb\r\n          titleList={[\r\n            { name: \"Home\", link: \"/dashboard\" },\r\n            {\r\n              name: `Course: ${props.match.params.courseID}`,\r\n              link: `/course/${props.match.params.courseID}`,\r\n            },\r\n            {\r\n              name: `Attendance List`,\r\n              link: `/course/${props.match.params.courseID}/attendanceList`,\r\n            },\r\n            {\r\n              name: `Attendance Record: ${props.match.params.attendanceID}`,\r\n              link: `/course/${props.match.params.courseID}/attendanceList/${props.match.params.attendanceID}`,\r\n            },\r\n          ]}\r\n        />\r\n        <Content>\r\n          <Card>\r\n            <Space direction=\"vertical\" className=\"width100\">\r\n              {attendanceGQLQuery.data && (\r\n                <Card>\r\n                  <Title\r\n                    level={4}\r\n                  >{`Course: ${attendanceGQLQuery.data.getAttendance.course.shortID} - ${attendanceGQLQuery.data.getAttendance.course.code} - ${attendanceGQLQuery.data.getAttendance.course.name} - ${attendanceGQLQuery.data.getAttendance.course.session}`}</Title>\r\n\r\n                  <p>\r\n                    Date:{\" \"}\r\n                    <strong>\r\n                      {moment(\r\n                        attendanceGQLQuery.data.getAttendance.date\r\n                      ).format(\"DD/MM/YYYY\")}\r\n                    </strong>\r\n                  </p>\r\n                  <p>\r\n                    Time:{\" \"}\r\n                    <strong>\r\n                      {moment(\r\n                        attendanceGQLQuery.data.getAttendance.time\r\n                      ).format(\"h:mm a\")}\r\n                    </strong>\r\n                  </p>\r\n                </Card>\r\n              )}\r\n              <Divider />\r\n\r\n              <Card style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                {\" \"}\r\n                <p>\r\n                  <strong>Attendance Transaction:</strong> {stats || \"-\"}\r\n                </p>\r\n                <br />\r\n              </Card>\r\n              {courseAndParticipantsGQLQuery.data ? (\r\n                <HistoryViz\r\n                  attendeesLength={attendees.length}\r\n                  absenteesLength={absentees.length}\r\n                />\r\n              ) : (\r\n                <LoadingSpin loading={courseAndParticipantsGQLQuery.loading} />\r\n              )}\r\n              <Button\r\n                style={{ float: \"right\" }}\r\n                icon={<RedoOutlined />}\r\n                disabled={attendanceGQLQuery.loading}\r\n                loading={attendanceGQLQuery.loading}\r\n                onClick={() => attendanceGQLQuery.refetch()}\r\n              >\r\n                Refresh Table\r\n              </Button>\r\n              <Table\r\n                scroll={{ x: \"max-content\" }}\r\n                loading={courseAndParticipantsGQLQuery.loading}\r\n                pagination={{ pageSize: 5 }}\r\n                dataSource={\r\n                  courseAndParticipantsGQLQuery.data\r\n                    ? parseParticipantData(participants, absentees)\r\n                    : []\r\n                }\r\n                columns={columns}\r\n              />\r\n            </Space>\r\n          </Card>\r\n        </Content>\r\n\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import * as faceapi from 'face-api.js';\r\n\r\nexport async function loadModels(\r\n  setLoadingMessage,\r\n  setLoadingMessageError\r\n) {\r\n  const MODEL_URL = process.env.PUBLIC_URL + '/models';\r\n\r\n  try {\r\n    setLoadingMessage('Loading Face Detector');\r\n    await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\r\n\r\n    setLoadingMessage('Loading 68 Facial Landmark Detector');\r\n    await faceapi.loadFaceLandmarkTinyModel(MODEL_URL);\r\n\r\n    setLoadingMessage('Loading Feature Extractor');\r\n    await faceapi.loadFaceRecognitionModel(MODEL_URL);\r\n  } catch (err) {\r\n    setLoadingMessageError(\r\n      'Model loading failed. Please contact me about the bug:SmartMark@gmail.com'\r\n    );\r\n  }\r\n}\r\n\r\nexport async function getFullFaceDescription(blob, inputSize = 512) {\r\n  // tiny_face_detector options\r\n  let scoreThreshold = 0.8;\r\n  const OPTION = new faceapi.SsdMobilenetv1Options({\r\n    inputSize,\r\n    scoreThreshold,\r\n  });\r\n  const useTinyModel = true;\r\n\r\n  // fetch image to api\r\n  let img = await faceapi.fetchImage(blob);\r\n\r\n  // detect all faces and generate full description from image\r\n  // including landmark and descriptor of each face\r\n  let fullDesc = await faceapi\r\n    .detectAllFaces(img, OPTION)\r\n    .withFaceLandmarks(useTinyModel)\r\n    .withFaceDescriptors();\r\n  return fullDesc;\r\n}\r\n\r\nexport async function createMatcher(faceProfile, maxDescriptorDistance) {\r\n  // Create labeled descriptors of member from profile\r\n  let labeledDescriptors = faceProfile.map(\r\n    (profile) =>\r\n      new faceapi.LabeledFaceDescriptors(\r\n        profile.student._id,\r\n        profile.facePhotos.map(\r\n          (photo) => new Float32Array(photo.faceDescriptor.match(/-?\\d+(?:\\.\\d+)?/g).map(Number))\r\n        )\r\n      )\r\n  );\r\n\r\n  // Create face matcher (maximum descriptor distance is 0.5)\r\n  let faceMatcher = new faceapi.FaceMatcher(\r\n    labeledDescriptors,\r\n    maxDescriptorDistance\r\n  );\r\n\r\n  return faceMatcher;\r\n}\r\n\r\nexport function isFaceDetectionModelLoaded() {\r\n  return !!faceapi.nets.ssdMobilenetv1.params;\r\n}\r\n\r\nexport function isFeatureExtractionModelLoaded() {\r\n  return !!faceapi.nets.faceRecognitionNet.params;\r\n}\r\n\r\nexport function isFacialLandmarkDetectionModelLoaded() {\r\n  return !!faceapi.nets.faceLandmark68TinyNet.params;\r\n}","import { LoadingOutlined } from '@ant-design/icons';\r\nimport { Spin } from 'antd';\r\nimport React from 'react';\r\n\r\nexport default ({loadingMessage}) => (\r\n  <Spin\r\n    tip={loadingMessage}\r\n    style={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      minHeight: '150px',\r\n    }}\r\n    indicator={\r\n      <div style={{ marginRight: '50px' }}>\r\n        <LoadingOutlined style={{ fontSize: '32px' }} />\r\n      </div>\r\n    }\r\n  />\r\n);\r\n","import { Card } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport React from 'react';\r\nimport {\r\n  isFaceDetectionModelLoaded,\r\n  isFeatureExtractionModelLoaded,\r\n  isFacialLandmarkDetectionModelLoaded,\r\n} from '../faceUtil';\r\nexport default ({ errorMessage }) => (\r\n  <Card style={{ opacity: 0.8 }}>\r\n    <p>\r\n      Face Detector:{' '}\r\n      {isFaceDetectionModelLoaded() ? (\r\n        <strong>Loaded</strong>\r\n      ) :\r\n        errorMessage && errorMessage.length > 0 ?\r\n          (\r\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\r\n              ERROR\r\n            </span>\r\n          ) :\r\n          (\r\n            <>\r\n              <strong>Loading</strong> <LoadingOutlined />\r\n            </>)}\r\n    </p>\r\n    <p>\r\n      Facial Landmark Detector:{' '}\r\n      {isFacialLandmarkDetectionModelLoaded() ? (\r\n        <strong>Loaded</strong>\r\n      ) :\r\n        errorMessage && errorMessage.length > 0 ?\r\n          (\r\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\r\n              ERROR\r\n            </span>\r\n          ) : (\r\n            <>\r\n              <strong>Loading</strong> <LoadingOutlined />\r\n            </>)}\r\n    </p>\r\n    <p>\r\n      Feature Extractor:{' '}\r\n      {isFeatureExtractionModelLoaded() ? (\r\n        <strong>Loaded</strong>\r\n      ) :\r\n        errorMessage && errorMessage.length > 0 ?\r\n          (\r\n            <span style={{ color: 'red', fontWeight: 'bold' }}>\r\n              ERROR\r\n            </span>\r\n          ) : (\r\n            <>\r\n              <strong>Loading</strong> <LoadingOutlined />\r\n            </>)}\r\n    </p>\r\n  </Card>\r\n);\r\n","import { useMutation } from \"@apollo/react-hooks\";\r\nimport { Card, Form, Layout, message, Row, Select, Typography } from \"antd\";\r\nimport React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { FaceThresholdDistanceContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport {\r\n  getFullFaceDescription,\r\n  isFaceDetectionModelLoaded,\r\n  isFacialLandmarkDetectionModelLoaded,\r\n  isFeatureExtractionModelLoaded,\r\n  loadModels,\r\n} from \"../../../faceUtil\";\r\nimport {\r\n  DEFAULT_WEBCAM_RESOLUTION,\r\n  inputSize,\r\n  webcamResolutionType,\r\n} from \"../../../globalData\";\r\nimport { CREATE_TRX_MUTATION } from \"../../../graphql/mutation\";\r\nimport { drawRectAndLabelFace } from \"../../../utils/drawRectAndLabelFace\";\r\nimport ModelLoading from \"../../../utils/ModelLoading\";\r\nimport ModelLoadStatus from \"../../../utils/ModelLoadStatus\";\r\n\r\nconst { Title } = Typography;\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nexport default (props) => {\r\n  const { participants, faceMatcher, facePhotos } = props;\r\n\r\n  const { threshold } = useContext(FaceThresholdDistanceContext);\r\n\r\n  const webcamRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  const [selectedWebcam, setSelectedWebcam] = useState();\r\n\r\n  const [inputDevices, setInputDevices] = useState([]);\r\n  const [camWidth, setCamWidth] = useState(DEFAULT_WEBCAM_RESOLUTION.width);\r\n  const [camHeight, setCamHeight] = useState(DEFAULT_WEBCAM_RESOLUTION.height);\r\n\r\n  const [isAllModelLoaded, setIsAllModelLoaded] = useState(false);\r\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\r\n  const [loadingMessageError, setLoadingMessageError] = useState(\"\");\r\n  const [fullDesc, setFullDesc] = useState(null);\r\n  const [waitText, setWaitText] = useState(\"\");\r\n\r\n  const [ createTrxCallback ] = useMutation(\r\n    CREATE_TRX_MUTATION,\r\n    {\r\n      update(_, { data }) {\r\n        if (data.createTrx != \"\") message.success(data.createTrx);\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function loadingtheModel() {\r\n      await loadModels(setLoadingMessage, setLoadingMessageError);\r\n      setIsAllModelLoaded(true);\r\n    }\r\n    if (\r\n      !!isFaceDetectionModelLoaded() &&\r\n      !!isFacialLandmarkDetectionModelLoaded() &&\r\n      !!isFeatureExtractionModelLoaded()\r\n    ) {\r\n      setIsAllModelLoaded(true);\r\n      return;\r\n    }\r\n    loadingtheModel();\r\n  }, [isAllModelLoaded]);\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\r\n      let inputDevice = await devices.filter(\r\n        (device) => device.kind === \"videoinput\"\r\n      );\r\n      setInputDevices({ ...inputDevices, inputDevice });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function capture() {\r\n      if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n      ) {\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        // Set canvas height and width\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        // 4. TODO - Make Detections\r\n        // e.g. const obj = await net.detect(video);\r\n\r\n        // Draw mesh\r\n        getFullFaceDescription(webcamRef.current.getScreenshot(), inputSize)\r\n          .then((data) => {\r\n            setFullDesc(data);\r\n            setWaitText(\"\");\r\n          })\r\n          .catch((err) => {\r\n            setWaitText(\r\n              \"Preparing face matcher and device setup, please wait...\"\r\n            );\r\n          });\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        drawRectAndLabelFace(fullDesc, faceMatcher, participants, ctx);\r\n\r\n        if (!!fullDesc) {\r\n          console.log(\"Now got full desc\");\r\n          fullDesc.map((desc) => {\r\n            const bestMatch = faceMatcher.findBestMatch(desc.descriptor);\r\n            console.log(bestMatch);\r\n            if (bestMatch._label != \"unknown\") {\r\n              createTrxCallback({\r\n                variables: {\r\n                  attendanceID: props.match.params.attendanceID,\r\n                  studentID: bestMatch._label,\r\n                },\r\n              });\r\n              console.log(\"Saving in db now\");\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    let interval = setInterval(() => {\r\n      capture();\r\n    }, 700);\r\n\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  const handleSelectWebcam = (value) => {\r\n    setSelectedWebcam(value);\r\n  };\r\n\r\n  const handleWebcamResolution = (value) => {\r\n    webcamResolutionType.map((type) => {\r\n      if (value === type.label) {\r\n        setCamWidth(type.width);\r\n        setCamHeight(type.height);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Content>\r\n      <Card>\r\n        <Form>\r\n          <Form.Item label=\"Webcam\">\r\n            <Select\r\n              defaultValue=\"Select Webcam\"\r\n              style={{ width: 500 }}\r\n              onChange={handleSelectWebcam}\r\n            >\r\n              {inputDevices?.inputDevice?.map((device) => (\r\n                <Option key={device.deviceId} value={device.deviceId}>\r\n                  {device.label}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n          <Form.Item label=\"Webcam Size\">\r\n            <Select\r\n              defaultValue={DEFAULT_WEBCAM_RESOLUTION.label}\r\n              style={{ width: 200 }}\r\n              onChange={handleWebcamResolution}\r\n            >\r\n              {webcamResolutionType.map((type) => (\r\n                <Option key={type.label} value={type.label}>\r\n                  {type.label}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        </Form>\r\n\r\n        <Card>\r\n          <Row>Face Descriptor Matcher: {facePhotos.length}</Row>\r\n          <Row>Threshold Distance: {threshold}</Row>\r\n        </Card>\r\n\r\n        {facePhotos.length === 0 && (\r\n          <p className=\"alert\">No have any face matcher.</p>\r\n        )}\r\n        <ModelLoadStatus errorMessage={loadingMessageError} />\r\n\r\n        {!isAllModelLoaded ? (\r\n          <ModelLoading loadingMessage={loadingMessage} />\r\n        ) : loadingMessageError ? (\r\n          <div className=\"error\">{loadingMessageError}</div>\r\n        ) : (\r\n          <div></div>\r\n        )}\r\n\r\n        {isAllModelLoaded && loadingMessageError.length == 0 && (\r\n          <Card className=\"takeAttendance__card__webcam\">\r\n            <>\r\n              <p>{waitText}</p>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <Webcam\r\n                  muted={true}\r\n                  ref={webcamRef}\r\n                  audio={false}\r\n                  width={camWidth}\r\n                  height={camHeight}\r\n                  screenshotFormat=\"image/jpeg\"\r\n                  videoConstraints={{\r\n                    deviceId: selectedWebcam,\r\n                  }}\r\n                  mirrored\r\n                />\r\n                <canvas\r\n                  ref={canvasRef}\r\n                  style={{\r\n                    position: \"absolute\",\r\n                    textAlign: \"center\",\r\n                    zindex: 8,\r\n                    width: camWidth,\r\n                    height: camHeight,\r\n                  }}\r\n                />\r\n              </div>\r\n            </>\r\n          </Card>\r\n        )}\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n","export const drawRectAndLabelFace = (descriptions, faceDB, participants, ctx) => {\r\n  // Loop through each desc\r\n  descriptions &&\r\n    descriptions.forEach((desc) => {\r\n      // Extract boxes and classes\r\n      const { x, y, width, height } = desc.detection.box;\r\n      const landmarksPoint=desc.landmarks._positions;\r\n\r\nconsole.log(landmarksPoint)\r\n      // const text = desc['class'];\r\n      const bestMatch = faceDB.findBestMatch(desc.descriptor);\r\n      // Set styling\r\n      if (bestMatch._label != \"unknown\") {\r\n        let filterParticipants = participants.filter(\r\n          (participant) => participant.student._id == bestMatch._label\r\n        );\r\n        console.log(filterParticipants);\r\n        bestMatch._label = filterParticipants[0].student.firstName +\" \"+ filterParticipants[0].student.lastName + \" (\" + filterParticipants[0].student.cardID + \")\";\r\n      }\r\n\r\n      ctx.font = \"normal 18px Gotham, Helvetica Neue, sans-serif\";\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\r\n\r\n      //draw 68 points\r\n      landmarksPoint.map(point=>{\r\n        ctx.beginPath();\r\n        ctx.fillText(bestMatch._label, x, y + height + 20);\r\n        ctx.fillStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\r\n        ctx.arc(point._x, point._y, 3, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n      })\r\n    \r\n\r\n      // Draw rectangles and text\r\n      ctx.beginPath();\r\n      ctx.fillStyle = bestMatch._label == \"unknown\" ? \"#E00\" : \"#0E0\";\r\n      ctx.rect(x, y, width, height);\r\n\r\n      ctx.fillText(bestMatch._label, x, y + height + 20);\r\n      ctx.fillText(`L2: ${bestMatch.distance.toFixed(2)}`, x, y);\r\n\r\n      ctx.stroke();\r\n    });\r\n};\r\n","import { UserOutlined } from \"@ant-design/icons\";\r\nimport { Avatar, Button, List } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nexport default ({ studentList }) => {\r\n  const [isPhotoVisible, setIsPhotoVisible] = useState({});\r\n\r\n  /*const handleDoubleClick = (item) => {\r\n    if (studentList.some(absentee=>absentee.student._id!=item.student._id)){\r\n    setstudentList((prevState) =>\r\n      prevState.filter((absentee) => absentee !== item)\r\n    );\r\n    }\r\n    else\r\n    setstudentList(prevState=>[item, ...prevState])\r\n\r\n    console.log(\"target\", item)\r\n    console.log(\"studentList\",studentList)\r\n  };*/\r\n\r\n  useEffect(() => {\r\n    studentList.map((studentList) => {\r\n      setIsPhotoVisible({\r\n        ...isPhotoVisible,\r\n        [studentList.student._id]: false,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleShowPhoto = (id) => {\r\n    setIsPhotoVisible({ ...isPhotoVisible, [id]: !isPhotoVisible[id] });\r\n  };\r\n\r\n  return (\r\n    <List\r\n      pagination={{\r\n        pageSize: 10,\r\n      }}\r\n      itemLayout=\"horizontal\"\r\n      dataSource={studentList}\r\n      renderItem={(item) => (\r\n        <List.Item\r\n          key={item.student._id}\r\n          style={{ display: \"flex\", justifyContent: \"center\" }}\r\n        >\r\n          <List.Item.Meta\r\n            avatar={\r\n              <Avatar\r\n                src={item.student.profilePictureURL}\r\n                icon={<UserOutlined />}\r\n              />\r\n            }\r\n            title={\r\n              <span style={{ cursor: \"pointer\" }}>\r\n                {item.student.firstName} {item.student.lastName} (\r\n                {item.student.cardID}){\"  \"}\r\n              </span>\r\n            }\r\n            description={\r\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n                <div>\r\n                  <p>Check in: {item.attend_at? moment(item.attend_at).format(\"DD/MM/YYYY h:mm:ss a\"): \"-\"}</p>\r\n                </div>\r\n                <div>\r\n                  Number of sample photo:{\" \"}\r\n                  {item.facePhotos?.length === 0 ? (\r\n                    <span\r\n                      style={{\r\n                        color: \"red\",\r\n                        fontWeight: 900,\r\n                        fontSize: \"20px\",\r\n                      }}\r\n                    >\r\n                      0\r\n                    </span>\r\n                  ) : (\r\n                    item.facePhotos?.length || (\r\n                      <span\r\n                        style={{\r\n                          color: \"red\",\r\n                          fontWeight: 900,\r\n                          fontSize: \"20px\",\r\n                        }}\r\n                      >\r\n                        0\r\n                      </span>\r\n                    )\r\n                  )}\r\n                </div>\r\n\r\n                {item.facePhotos?.length > 0 && (\r\n                  <>\r\n                    <div>\r\n                      <Button onClick={() => handleShowPhoto(item.student._id)}>\r\n                        {!isPhotoVisible[item.student._id]\r\n                          ? \"Show Photo\"\r\n                          : \"Hide Photo\"}\r\n                      </Button>\r\n                    </div>\r\n                    {isPhotoVisible[item.student._id] && (\r\n                      <div\r\n                        style={{\r\n                          display: \"flex\",\r\n                          justifyContent: \"flex-start\",\r\n                          alignItems: \"space-between\",\r\n                          flexWrap: \"wrap\",\r\n                        }}\r\n                      >\r\n                        {item.facePhotos?.map((photo) => (\r\n                          <div key={photo._id}>\r\n                            <img\r\n                              style={{\r\n                                width: \"100px\",\r\n                                height: \"100px\",\r\n                                margin: \"10px\",\r\n                              }}\r\n                              data-src={photo.photoURL}\r\n                              className=\"lazyload\"\r\n                              src={`${process.env.PUBLIC_URL}/img/loader.gif`}\r\n                              alt={item.firstName}\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n            }\r\n          />\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/react-hooks\";\r\nimport { Card, Col, Row, Spin } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { FETCH_TRX_LIST_IN_ATTENDANCE } from \"../../../graphql/query\";\r\nimport ListView from \"./ListView\";\r\n\r\nexport default (props) => {\r\n  const { participants } = props;\r\n  const trxGQLQuery = useQuery(FETCH_TRX_LIST_IN_ATTENDANCE, {\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n    pollInterval: 2000,\r\n\r\n    variables: {\r\n      attendanceID: props.match.params.attendanceID,\r\n    },\r\n  });\r\n\r\n  const [attendees, setAttendees] = useState([]);\r\n  const [absentees, setAbsentees] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    console.log(participants);\r\n    if (trxGQLQuery.data) {\r\n      const currAbsentees = participants.filter((participant) => {\r\n        const result = trxGQLQuery.data.getTrxListInAttendance.filter(\r\n          (attendee) => participant.student._id == attendee.studentID\r\n        );\r\n\r\n        return result.length == 0; //count as absentee if no found\r\n      });\r\n\r\n      console.log(currAbsentees);\r\n\r\n      const currAttendees = participants.filter((participant) => {\r\n        const result = trxGQLQuery.data.getTrxListInAttendance.filter(\r\n          (attendee) => participant.student._id == attendee.studentID\r\n        );\r\n\r\n        if (result.length >= 1) {\r\n          Object.assign(participant, { attend_at: result[0].createdAt });\r\n        }\r\n        return result.length >= 1; //count as attendee if found\r\n      });\r\n\r\n      currAttendees.sort(\r\n        (a, b) => new Date(b.attend_at) - new Date(a.attend_at)\r\n      );\r\n\r\n      setAbsentees(currAbsentees);\r\n      setAttendees(currAttendees);\r\n    }\r\n  }, [participants, trxGQLQuery.data]);\r\n  return (\r\n    <Card>\r\n      \r\n      <p\r\n          style={{\r\n            textAlign: \"center\",\r\n            fontWeight: 900,\r\n            fontSize: \"20px\",\r\n          }}\r\n        >\r\n          Attendance Transaction: {attendees.length}/{participants.length}\r\n        </p>\r\n    <Row>\r\n     \r\n      <Col span={12}>\r\n        <Card>\r\n          <>\r\n            <p\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              Absentee: {absentees.length}\r\n            </p>\r\n            {trxGQLQuery.loading ? (\r\n              <Spin tip=\"Fetching Absentees...\" />\r\n            ) : (\r\n              <ListView studentList={absentees} />\r\n            )}\r\n          </>\r\n        </Card>\r\n      </Col>\r\n      <Col span={12}>\r\n        <Card>\r\n          <>\r\n            <p\r\n              style={{\r\n                fontWeight: 900,\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              Attendee: {attendees.length}\r\n            </p>\r\n            {trxGQLQuery.loading ? (\r\n              <Spin tip=\"Fetching Attendees...\" />\r\n            ) :\r\n            <ListView studentList={attendees} />\r\n            }</>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </Card>\r\n  );\r\n};\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Card, Form, Layout, message, Select, Switch, Typography } from \"antd\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { AuthContext, FaceThresholdDistanceContext } from \"../../../context\";\r\nimport { createMatcher } from \"../../../faceUtil\";\r\nimport { attendanceMode, DEFAULT_ATTENDANCE_MODE } from \"../../../globalData\";\r\nimport {\r\n  EDIT_ATTENDANCE_MODE_MUTATION,\r\n  EDIT_ATTENDANCE_ON_OFF_MUTATION,\r\n} from \"../../../graphql/mutation\";\r\nimport {\r\n  FETCH_ATTENDANCE_QUERY,\r\n  FETCH_FACE_MATCHER_IN_COURSE_QUERY,\r\n} from \"../../../graphql/query\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\r\nimport ProcessFaceRecognition from \"./ProcessFaceRecognition\";\r\nimport TrxDashboard from \"./TrxDashboard\";\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nexport default (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const { threshold, setFaceThresholdDistance } = useContext(\r\n    FaceThresholdDistanceContext\r\n  );\r\n  const [mode, setMode] = useState(DEFAULT_ATTENDANCE_MODE);\r\n  const [isOn, setIsOn] = useState(true);\r\n\r\n  const [participants, setParticipants] = useState([]);\r\n  const [facePhotos, setFacePhotos] = useState([]);\r\n  const [faceMatcher, setFaceMatcher] = useState(null);\r\n\r\n  const [absentees, setAbsentees] = useState([]);\r\n  const [course, setCourse] = useState({});\r\n\r\n  const { data, loading, error } = useQuery(\r\n    FETCH_FACE_MATCHER_IN_COURSE_QUERY,\r\n    {\r\n      onError(err) {\r\n        console.log(err);\r\n        // props.history.push(\"/dashboard\");\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        courseID: props.match.params.courseID,\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setCourse(data.getFaceMatcherInCourse.course);\r\n      setParticipants(data.getFaceMatcherInCourse.matcher);\r\n      setAbsentees(data.getFaceMatcherInCourse.matcher);\r\n      data.getFaceMatcherInCourse.matcher.map((item) => {\r\n        item.facePhotos.map((photo) =>\r\n          setFacePhotos((prevState) => [...prevState, photo])\r\n        );\r\n      });\r\n\r\n      if (data.getFaceMatcherInCourse.matcher.length === 0) {\r\n        message.info(\"Course do not have any participant yet!\");\r\n      }\r\n    }\r\n  }, [data, participants]);\r\n  const attendanceGQLQuery = useQuery(FETCH_ATTENDANCE_QUERY, {\r\n    onError(err) {\r\n      props.history.push(\r\n        `/course/${props.match.params.courseID}/attendanceList`\r\n      );\r\n      CheckError(err);\r\n    },\r\n    pollInterval: 2000,\r\n\r\n    variables: {\r\n      attendanceID: props.match.params.attendanceID,\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (attendanceGQLQuery.data) {\r\n      setMode(attendanceGQLQuery.data.getAttendance.mode);\r\n      message.info(\r\n        \"Attendance Mode: \" + attendanceGQLQuery.data.getAttendance.mode\r\n      );\r\n      setIsOn(attendanceGQLQuery.data.getAttendance.isOn);\r\n      if (attendanceGQLQuery.data.getAttendance.isOn)\r\n        message.info(\"Attendance is currently opened\");\r\n      else {\r\n        if (user.userLevel == 0)\r\n          message.info(\"Attendance had been closed by the host.\");\r\n        else {\r\n          message.info(\r\n            \"You closed the attendance, no transaction will be recorded\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [attendanceGQLQuery.data]);\r\n\r\n  useEffect(() => {\r\n    async function matcher() {\r\n      //check there should be at least one matcher\r\n      if (\r\n        data.getFaceMatcherInCourse.matcher.length > 0 &&\r\n        facePhotos.length > 0\r\n      ) {\r\n        const validMatcher = data.getFaceMatcherInCourse.matcher.filter(\r\n          (m) => m.facePhotos.length > 0\r\n        );\r\n        const profileList = await createMatcher(validMatcher, threshold);\r\n        setFaceMatcher(profileList);\r\n      }\r\n    }\r\n    if (!!data) {\r\n      matcher();\r\n    }\r\n  }, [data, facePhotos, threshold]);\r\n\r\n  const [editAttendanceModeCallback, editAttendanceModeStatus] = useMutation(\r\n    EDIT_ATTENDANCE_MODE_MUTATION,\r\n    {\r\n      onCompleted: async (data) => {\r\n        setMode(data.editAttendanceMode.mode);\r\n        message.success(`Set Mode To ${data.editAttendanceMode.mode}`);\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  const [editAttendanceOnOffCallback, editAttendanceOnOffStatus] = useMutation(\r\n    EDIT_ATTENDANCE_ON_OFF_MUTATION,\r\n    {\r\n      onCompleted: async (data) => {\r\n        setIsOn(data.editAttendanceOnOff.isOn);\r\n        message.success(\r\n          `Attendance is ${data.editAttendanceOnOff.isOn == 1 ? \" on\" : \" off\"}`\r\n        );\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleModeChange = (value) => {\r\n    editAttendanceModeCallback({\r\n      variables: {\r\n        attendanceID: props.match.params.attendanceID,\r\n        mode: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleIsOnChange = (value) => {\r\n    editAttendanceOnOffCallback({\r\n      variables: {\r\n        attendanceID: props.match.params.attendanceID,\r\n        isOn: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const titleList = [\r\n    { name: \"Home\", link: \"/dashboard\" },\r\n    {\r\n      name: `Course: ${props.match.params.courseID}`,\r\n      link: `/course/${props.match.params.courseID}`,\r\n    },\r\n    {\r\n      name: `Attendance List`,\r\n      link: `/course/${props.match.params.courseID}/attendanceList`,\r\n    },\r\n    {\r\n      name: `Attendance Room: ${props.match.params.attendanceID}`,\r\n      link: `/course/${props.match.params.courseID}/attendanceRoom/${props.match.params.attendanceID}`,\r\n    },\r\n  ];\r\n  const { Content } = Layout;\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb titleList={titleList} />\r\n        <Content>\r\n          <Card\r\n            title={\r\n              mode == \"F2F\" ? (\r\n                <Title level={4}>F2F Attendance</Title>\r\n              ) : (\r\n                <Title level={4}>Remote Attendance</Title>\r\n              )\r\n            }\r\n          >\r\n            {data && (\r\n              <Title level={4}>\r\n                Course:{\" \"}\r\n                {course.code + \"-\" + course.name + \"(\" + course.session + \")\"}\r\n              </Title>\r\n            )}\r\n          </Card>\r\n\r\n          {user.userLevel == 1 && (\r\n            <Card title={<Title level={4}>Attendance Setting</Title>}>\r\n              <Form>\r\n                <Form.Item label=\"Mode\">\r\n                  {editAttendanceModeStatus.loading ? (\r\n                    <LoadingOutlined\r\n                      style={{ fontSize: \"25px\", color: \"blue\" }}\r\n                    />\r\n                  ) : (\r\n                    <Select value={mode} onChange={handleModeChange}>\r\n                      {attendanceMode.map((mode) => (\r\n                        <Option key={mode} value={mode}>\r\n                          {mode}\r\n                        </Option>\r\n                      ))}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Open\">\r\n                  {editAttendanceOnOffStatus.loading ? (\r\n                    <LoadingOutlined\r\n                      style={{ fontSize: \"25px\", color: \"blue\" }}\r\n                    />\r\n                  ) : (\r\n                    <>\r\n                      <Switch onChange={handleIsOnChange} checked={isOn} />\r\n                      {isOn\r\n                        ? \" (Attendance transaction activate)\"\r\n                        : \" (Attendance transaction deactivate)\"}\r\n                    </>\r\n                  )}\r\n                </Form.Item>\r\n              </Form>\r\n            </Card>\r\n          )}\r\n\r\n          {/* For F2F, use Lecturer PC For FR */}\r\n          {attendanceGQLQuery.data &&\r\n            isOn &&\r\n            mode == \"F2F\" &&\r\n            user.userLevel == 1 && (\r\n              <ProcessFaceRecognition\r\n                {...props}\r\n                faceMatcher={faceMatcher}\r\n                facePhotos={facePhotos}\r\n                participants={participants}\r\n              />\r\n            )}\r\n          {/* For Remote, use Student PC For FR */}\r\n\r\n          {attendanceGQLQuery.data &&\r\n            isOn &&\r\n            mode == \"Remote\" &&\r\n            user.userLevel == 0 && (\r\n              <ProcessFaceRecognition\r\n                {...props}\r\n                faceMatcher={faceMatcher}\r\n                facePhotos={facePhotos}\r\n                participants={participants}\r\n              />\r\n            )}\r\n\r\n          {!isOn && user.userLevel == 0 && (\r\n            <Card>\r\n              <p>The host has closed the attendance</p>\r\n            </Card>\r\n          )}\r\n\r\n          <LoadingSpin loading={attendanceGQLQuery.loading} />\r\n          <TrxDashboard {...props} participants={participants} />\r\n        </Content>\r\n\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { useMutation } from \"@apollo/react-hooks\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Divider,\r\n  Form,\r\n  Input,\r\n  Layout,\r\n  Radio,\r\n  Space,\r\n  Typography,\r\n} from \"antd\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { APP_LOGO_URL } from \"../../../assets\";\r\nimport Footer from \"../../../components/common/sharedLayout/Footer\";\r\nimport { AuthContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { EDIT_CARDID_AND_ROLE_MUTATION } from \"../../../graphql/mutation\";\r\nimport { useForm } from \"../../../utils/hooks\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst { Title } = Typography;\r\n\r\nexport default (props) => {\r\n  const { user, login, logout } = useContext(AuthContext);\r\n  const { onChange, onSubmit, values } = useForm(editCardIDAndRole, {\r\n    userLevel: 0,\r\n    cardID: \"\",\r\n  });\r\n\r\n  const [editCardIDAndRoleCallback, editCardIDAndRoleStatus] = useMutation(\r\n    EDIT_CARDID_AND_ROLE_MUTATION,\r\n    {\r\n      update(_, { data: { editCardIDAndUserLevel: userData } }) {\r\n        //reset login stuff\r\n        login(userData);\r\n        props.history.push(\"/dashboard\");\r\n      },\r\n      variables: values,\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n  const [isAgreementChecked, setIsAgreementChecked] = useState(false);\r\n\r\n  function editCardIDAndRole() {\r\n    editCardIDAndRoleCallback();\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Content\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <Card\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            className=\"avatar\"\r\n            size=\"large\"\r\n            alt=\"Face In\"\r\n            src={APP_LOGO_URL.link}\r\n            onError={(err) => {\r\n              console.log(err);\r\n            }}\r\n          />\r\n          &nbsp; &nbsp;\r\n          <Space>\r\n            <Title level={3}>Just a few seconds...</Title>\r\n          </Space>\r\n          <Divider />\r\n          <Title level={4}>\r\n            Dear {user.firstName} {user.lastName}, tell us more about you!\r\n          </Title>\r\n          <Form\r\n            name=\"basic\"\r\n            initialValues={{ userLevel: values.role, cardID: values.cardID }}\r\n            onFinish={onSubmit}\r\n          >\r\n            <Form.Item\r\n              label=\"Staff ID/Matrix No\"\r\n              name=\"cardID\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Please input your staff ID/Matrix No!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input\r\n                placeholder=\"Enter your staff ID/Matrix No\"\r\n                name=\"cardID\"\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item label=\"Role\" name=\"userLevel\" valuePropName=\"checked\">\r\n              <Radio.Group\r\n                name=\"userLevel\"\r\n                value={values.userLevel}\r\n                onChange={onChange}\r\n              >\r\n                <Radio value={0}>Student</Radio>\r\n                <Radio value={1}>Lecturer</Radio>\r\n              </Radio.Group>\r\n            </Form.Item>\r\n            <Divider />\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                loading={editCardIDAndRoleStatus.loading}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n          <Button\r\n            type=\"danger\"\r\n            htmlType=\"submit\"\r\n            disabled={editCardIDAndRoleStatus.loading}\r\n            onClick={() => logout()}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </Card>\r\n      </Content>\r\n      <Footer />\r\n    </Layout>\r\n  );\r\n};\r\n","import { Card, Layout, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\r\nimport { Footer } from '../../../components/common/sharedLayout';\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n    return (\r\n        <Layout className='home layout'>\r\n            <HeaderNavbar />\r\n            <Content>\r\n                <Card>\r\n                    <Title level={2}>Privacy Policy for SmartMark</Title>\r\n\r\n                    <p>At SmartMark, accessible from https://SmartMark.netlify.app, one of our main priorities is the privacy of our visitors. This Privacy Policy document contains types of information that is collected and recorded by SmartMark and how we use it.</p>\r\n\r\n                    <p>If you have additional questions or require more information about our Privacy Policy, do not hesitate to contact us.</p>\r\n\r\n                    <p>This Privacy Policy applies only to our online activities and is valid for visitors to our website with regards to the information that they shared and/or collect in SmartMark. This policy is not applicable to any information collected offline or via channels other than this website. Our Privacy Policy was created with the help of the <a href=\"https://www.privacypolicygenerator.info/#wizard\">Free Privacy Policy Generator</a>.</p>\r\n\r\n                    <Title level={4}>Consent</Title>\r\n\r\n                    <p>By using our website, you hereby consent to our Privacy Policy and agree to its terms.</p>\r\n\r\n                    <Title level={4}>Information we collect</Title>\r\n\r\n                    <p>The personal information that you are asked to provide, and the reasons why you are asked to provide it, will be made clear to you at the point we ask you to provide your personal information.</p>\r\n                    <p>If you contact us directly, we may receive additional information about you such as your name, email address, phone number, the contents of the message and/or attachments you may send us, and any other information you may choose to provide.</p>\r\n                    <p>When you register for an Account, we may ask for your contact information, including items such as name, company name, address, email address, and telephone number.</p>\r\n\r\n                    <Title level={4}>How we use your information</Title>\r\n\r\n                    <p>We use the information we collect in various ways, including to:</p>\r\n\r\n                    <ul>\r\n                        <li>Provide, operate, and maintain our webste</li>\r\n                        <li>Improve, personalize, and expand our webste</li>\r\n                        <li>Understand and analyze how you use our webste</li>\r\n                        <li>Develop new products, services, features, and functionality</li>\r\n                        <li>Communicate with you, either directly or through one of our partners, including for customer service, to provide you with updates and other information relating to the webste, and for marketing and promotional purposes</li>\r\n                        <li>Send you emails</li>\r\n                        <li>Find and prevent fraud</li>\r\n                    </ul>\r\n\r\n                    <Title level={4}>Facial Data Privacy Policy</Title>\r\n                    <p>We will use your facial data to extract the features in order to perform facial analytics.</p>\r\n                    <p>We will use Cloudinary online image storage to save facial data and retrieve the CDN url for display purpose.</p>\r\n                    <p>We do not sell, advertise or publish your facial data to third-party.</p>\r\n                    <p>Your facial data is protected and will not be used for any illegal misconduct.</p>\r\n                    <p>When you upload your face photo in our website, you agree to let us to use your facial data and save into Cloudinary.</p>\r\n                    <Title level={4}>Log Files</Title>\r\n\r\n                    <p>SmartMark follows a standard procedure of using log files. These files log visitors when they visit websites. All hosting companies do this and a part of hosting services' analytics. The information collected by log files include internet protocol (IP) addresses, browser type, Internet Service Provider (ISP), date and time stamp, referring/exit pages, and possibly the number of clicks. These are not linked to any information that is personally identifiable. The purpose of the information is for analyzing trends, administering the site, tracking users' movement on the website, and gathering demographic information.</p>\r\n\r\n\r\n\r\n\r\n                    <Title level={4}>Advertising Partners Privacy Policies</Title>\r\n\r\n                    <p>You may consult this list to find the Privacy Policy for each of the advertising partners of SmartMark.</p>\r\n\r\n                    <p>Third-party ad servers or ad networks uses technologies like cookies, JavaScript, or Web Beacons that are used in their respective advertisements and links that appear on SmartMark, which are sent directly to users' browser. They automatically receive your IP address when this occurs. These technologies are used to measure the effectiveness of their advertising campaigns and/or to personalize the advertising content that you see on websites that you visit.</p>\r\n\r\n                    <p>Note that SmartMark has no access to or control over these cookies that are used by third-party advertisers.</p>\r\n\r\n                    <Title level={4}>Third Party Privacy Policies</Title>\r\n\r\n                    <p>SmartMark's Privacy Policy does not apply to other advertisers or websites. Thus, we are advising you to consult the respective Privacy Policies of these third-party ad servers for more detailed information. It may include their practices and instructions about how to opt-out of certain options. </p>\r\n\r\n                    <p>You can choose to disable cookies through your individual browser options. To know more detailed information about cookie management with specific web browsers, it can be found at the browsers' respective websites.</p>\r\n\r\n                    <Title level={4}>CCPA Privacy Rights (Do Not Sell My Personal Information)</Title>\r\n\r\n                    <p>Under the CCPA, among other rights, California consumers have the right to:</p>\r\n                    <p>Request that a business that collects a consumer's personal data disclose the categories and specific pieces of personal data that a business has collected about consumers.</p>\r\n                    <p>Request that a business delete any personal data about the consumer that a business has collected.</p>\r\n                    <p>Request that a business that sells a consumer's personal data, not sell the consumer's personal data.</p>\r\n                    <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\r\n\r\n                    <Title level={4}>GDPR Data Protection Rights</Title>\r\n\r\n                    <p>We would like to make sure you are fully aware of all of your data protection rights. Every user is entitled to the following:</p>\r\n                    <p>The right to access – You have the right to request copies of your personal data. We may charge you a small fee for this service.</p>\r\n                    <p>The right to rectification – You have the right to request that we correct any information you believe is inaccurate. You also have the right to request that we complete the information you believe is incomplete.</p>\r\n                    <p>The right to erasure – You have the right to request that we erase your personal data, under certain conditions.</p>\r\n                    <p>The right to restrict processing – You have the right to request that we restrict the processing of your personal data, under certain conditions.</p>\r\n                    <p>The right to object to processing – You have the right to object to our processing of your personal data, under certain conditions.</p>\r\n                    <p>The right to data portability – You have the right to request that we transfer the data that we have collected to another organization, or directly to you, under certain conditions.</p>\r\n                    <p>If you make a request, we have one month to respond to you. If you would like to exercise any of these rights, please contact us.</p>\r\n\r\n                    <Title level={4}>Children's Information</Title>\r\n\r\n                    <p>Another part of our priority is adding protection for children while using the internet. We encourage parents and guardians to observe, participate in, and/or monitor and guide their online activity.</p>\r\n\r\n                    <p>SmartMark does not knowingly collect any Personal Identifiable Information from children under the age of 13. If you think that your child provided this kind of information on our website, we strongly encourage you to contact us immediately and we will do our best efforts to promptly remove such information from our records.</p>\r\n                </Card>\r\n            </Content>\r\n            <Footer />\r\n        </Layout>\r\n    );\r\n}\r\n","import { Card, Layout, Typography } from \"antd\";\r\nimport { HeaderNavbar } from \"../../../components/common/mainMenu\";\r\nimport { Footer } from \"../../../components/common/sharedLayout\";\r\nimport React from \"react\";\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nexport default () => {\r\n  return (\r\n    <Layout className=\"home layout\">\r\n      <HeaderNavbar />\r\n      <Content>\r\n        <Card>\r\n          <Title level={2}>Terms and Conditions</Title>\r\n\r\n          <p>Welcome to SmartMark!</p>\r\n\r\n          <p>\r\n            These terms and conditions outline the rules and regulations for the\r\n            use of SmartMark's Website, located at\r\n            https://SmartMark.netlify.app.\r\n          </p>\r\n\r\n          <p>\r\n            By accessing this website we assume you accept these terms and\r\n            conditions. Do not continue to use SmartMark if you do not agree\r\n            to take all of the terms and conditions stated on this page.\r\n          </p>\r\n\r\n          <p>\r\n            The following terminology applies to these Terms and Conditions,\r\n            Privacy Statement and Disclaimer Notice and all Agreements:\r\n            \"Client\", \"You\" and \"Your\" refers to you, the person log on this\r\n            website and compliant to the Company’s terms and conditions. \"The\r\n            Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company.\r\n            \"Party\", \"Parties\", or \"Us\", refers to both the Client and\r\n            ourselves. All terms refer to the offer, acceptance and\r\n            consideration of payment necessary to undertake the process of our\r\n            assistance to the Client in the most appropriate manner for the\r\n            express purpose of meeting the Client’s needs in respect of\r\n            provision of the Company’s stated services, in accordance with and\r\n            subject to, prevailing law of Netherlands. Any use of the above\r\n            terminology or other words in the singular, plural, capitalization\r\n            and/or he/she or they, are taken as interchangeable and therefore as\r\n            referring to same.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Cookies</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            We employ the use of cookies. By accessing SmartMark, you agreed\r\n            to use cookies in agreement with the SmartMark's Privacy Policy.{\" \"}\r\n          </p>\r\n\r\n          <p>\r\n            Most interactive websites use cookies to let us retrieve the user’s\r\n            details for each visit. Cookies are used by our website to enable\r\n            the functionality of certain areas to make it easier for people\r\n            visiting our website. Some of our affiliate/advertising partners may\r\n            also use cookies.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>License</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            Unless otherwise stated, SmartMark and/or its licensors own the\r\n            intellectual property rights for all material on SmartMark. All\r\n            intellectual property rights are reserved. You may access this from\r\n            SmartMark for your own personal use subjected to restrictions\r\n            set in these terms and conditions.\r\n          </p>\r\n\r\n          <p>You must not:</p>\r\n          <ul>\r\n            <li>Republish material from SmartMark</li>\r\n            <li>Sell, rent or sub-license material from SmartMark</li>\r\n            <li>Reproduce, duplicate or copy material from SmartMark</li>\r\n            <li>Redistribute content from SmartMark</li>\r\n          </ul>\r\n\r\n          <p>\r\n            This Agreement shall begin on the date hereof. Our Terms and\r\n            Conditions were created with the help of the{\" \"}\r\n            <a href=\"https://www.termsandconditionsgenerator.com\">\r\n              Terms And Conditions Generator\r\n            </a>{\" \"}\r\n            and the{\" \"}\r\n            <a href=\"https://www.generateprivacypolicy.com\">\r\n              Privacy Policy Generator\r\n            </a>\r\n            .\r\n          </p>\r\n          \r\n\r\n          <p>\r\n            Parts of this website offer an opportunity for users to post and\r\n            exchange opinions and information in certain areas of the website.\r\n            SmartMark does not filter, edit, publish or review Comments\r\n            prior to their presence on the website. Comments do not reflect the\r\n            views and opinions of SmartMark,its agents and/or affiliates.\r\n            Comments reflect the views and opinions of the person who post their\r\n            views and opinions. To the extent permitted by applicable laws,\r\n            SmartMark shall not be liable for the Comments or for any\r\n            liability, damages or expenses caused and/or suffered as a result of\r\n            any use of and/or posting of and/or appearance of the Comments on\r\n            this website.\r\n          </p>\r\n\r\n          <p>\r\n            SmartMark reserves the right to monitor all Comments and to\r\n            remove any Comments which can be considered inappropriate, offensive\r\n            or causes breach of these Terms and Conditions.\r\n          </p>\r\n\r\n          <p>You warrant and represent that:</p>\r\n\r\n          <ul>\r\n            <li>\r\n              You are entitled to post the Comments on our website and have all\r\n              necessary licenses and consents to do so;\r\n            </li>\r\n            <li>\r\n              The Comments do not invade any intellectual property right,\r\n              including without limitation copyright, patent or trademark of any\r\n              third party;\r\n            </li>\r\n            <li>\r\n              The Comments do not contain any defamatory, libelous, offensive,\r\n              indecent or otherwise unlawful material which is an invasion of\r\n              privacy\r\n            </li>\r\n            <li>\r\n              The Comments will not be used to solicit or promote business or\r\n              custom or present commercial activities or unlawful activity.\r\n            </li>\r\n          </ul>\r\n\r\n          <p>\r\n            You hereby grant SmartMark a non-exclusive license to use,\r\n            reproduce, edit and authorize others to use, reproduce and edit any\r\n            of your Comments in any and all forms, formats or media.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Hyperlinking to our Content</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            The following organizations may link to our Website without prior\r\n            written approval:\r\n          </p>\r\n\r\n          <ul>\r\n            <li>Government agencies;</li>\r\n            <li>Search engines;</li>\r\n            <li>News organizations;</li>\r\n            <li>\r\n              Online directory distributors may link to our Website in the same\r\n              manner as they hyperlink to the Websites of other listed\r\n              businesses; and\r\n            </li>\r\n            <li>\r\n              System wide Accredited Businesses except soliciting non-profit\r\n              organizations, charity shopping malls, and charity fundraising\r\n              groups which may not hyperlink to our Web site.\r\n            </li>\r\n          </ul>\r\n\r\n          <p>\r\n            These organizations may link to our home page, to publications or to\r\n            other Website information so long as the link: (a) is not in any way\r\n            deceptive; (b) does not falsely imply sponsorship, endorsement or\r\n            approval of the linking party and its products and/or services; and\r\n            (c) fits within the context of the linking party’s site.\r\n          </p>\r\n\r\n          <p>\r\n            We may consider and approve other link requests from the following\r\n            types of organizations:\r\n          </p>\r\n\r\n          <ul>\r\n            <li>\r\n              commonly-known consumer and/or business information sources;\r\n            </li>\r\n            <li>dot.com community sites;</li>\r\n            <li>associations or other groups representing charities;</li>\r\n            <li>online directory distributors;</li>\r\n            <li>internet portals;</li>\r\n            <li>accounting, law and consulting firms; and</li>\r\n            <li>educational institutions and trade associations.</li>\r\n          </ul>\r\n\r\n          <p>\r\n            We will approve link requests from these organizations if we decide\r\n            that: (a) the link would not make us look unfavorably to ourselves\r\n            or to our accredited businesses; (b) the organization does not have\r\n            any negative records with us; (c) the benefit to us from the\r\n            visibility of the hyperlink compensates the absence of\r\n            SmartMark; and (d) the link is in the context of general\r\n            resource information.\r\n          </p>\r\n\r\n          <p>\r\n            These organizations may link to our home page so long as the link:\r\n            (a) is not in any way deceptive; (b) does not falsely imply\r\n            sponsorship, endorsement or approval of the linking party and its\r\n            products or services; and (c) fits within the context of the linking\r\n            party’s site.\r\n          </p>\r\n\r\n          <p>\r\n            If you are one of the organizations listed in paragraph 2 above and\r\n            are interested in linking to our website, you must inform us by\r\n            sending an e-mail to SmartMark. Please include your name, your\r\n            organization name, contact information as well as the URL of your\r\n            site, a list of any URLs from which you intend to link to our\r\n            Website, and a list of the URLs on our site to which you would like\r\n            to link. Wait 2-3 weeks for a response.\r\n          </p>\r\n\r\n          <p>Approved organizations may hyperlink to our Website as follows:</p>\r\n\r\n          <ul>\r\n            <li>By use of our corporate name; or</li>\r\n            <li>By use of the uniform resource locator being linked to; or</li>\r\n            <li>\r\n              By use of any other description of our Website being linked to\r\n              that makes sense within the context and format of content on the\r\n              linking party’s site.\r\n            </li>\r\n          </ul>\r\n\r\n          <p>\r\n            No use of SmartMark's logo or other artwork will be allowed for\r\n            linking absent a trademark license agreement.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>iFrames</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            Without prior approval and written permission, you may not create\r\n            frames around our Webpages that alter in any way the visual\r\n            presentation or appearance of our Website.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Content Liability</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            We shall not be hold responsible for any content that appears on\r\n            your Website. You agree to protect and defend us against all claims\r\n            that is rising on your Website. No link(s) should appear on any\r\n            Website that may be interpreted as libelous, obscene or criminal, or\r\n            which infringes, otherwise violates, or advocates the infringement\r\n            or other violation of, any third party rights.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Your Privacy</strong>\r\n          </h3>\r\n\r\n          <p>Please read Privacy Policy</p>\r\n\r\n          <h3>\r\n            <strong>Reservation of Rights</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            We reserve the right to request that you remove all links or any\r\n            particular link to our Website. You approve to immediately remove\r\n            all links to our Website upon request. We also reserve the right to\r\n            amen these terms and conditions and it’s linking policy at any time.\r\n            By continuously linking to our Website, you agree to be bound to and\r\n            follow these linking terms and conditions.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Removal of links from our website</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            If you find any link on our Website that is offensive for any\r\n            reason, you are free to contact and inform us any moment. We will\r\n            consider requests to remove links but we are not obligated to or so\r\n            or to respond to you directly.\r\n          </p>\r\n\r\n          <p>\r\n            We do not ensure that the information on this website is correct, we\r\n            do not warrant its completeness or accuracy; nor do we promise to\r\n            ensure that the website remains available or that the material on\r\n            the website is kept up to date.\r\n          </p>\r\n\r\n          <h3>\r\n            <strong>Disclaimer</strong>\r\n          </h3>\r\n\r\n          <p>\r\n            To the maximum extent permitted by applicable law, we exclude all\r\n            representations, warranties and conditions relating to our website\r\n            and the use of this website. Nothing in this disclaimer will:\r\n          </p>\r\n\r\n          <ul>\r\n            <li>\r\n              limit or exclude our or your liability for death or personal\r\n              injury;\r\n            </li>\r\n            <li>\r\n              limit or exclude our or your liability for fraud or fraudulent\r\n              misrepresentation;\r\n            </li>\r\n            <li>\r\n              limit any of our or your liabilities in any way that is not\r\n              permitted under applicable law; or\r\n            </li>\r\n            <li>\r\n              exclude any of our or your liabilities that may not be excluded\r\n              under applicable law.\r\n            </li>\r\n          </ul>\r\n\r\n          <p>\r\n            The limitations and prohibitions of liability set in this Section\r\n            and elsewhere in this disclaimer: (a) are subject to the preceding\r\n            paragraph; and (b) govern all liabilities arising under the\r\n            disclaimer, including liabilities arising in contract, in tort and\r\n            for breach of statutory duty.\r\n          </p>\r\n\r\n          <p>\r\n            As long as the website and the information and services on the\r\n            website are provided free of charge, we will not be liable for any\r\n            loss or damage of any nature.\r\n          </p>\r\n        </Card>\r\n      </Content>\r\n      <Footer />\r\n    </Layout>\r\n  );\r\n};\r\n","import { Button, Card, Col, Layout, Row, Avatar, Divider, Typography } from 'antd';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { HeaderNavbar } from '../../../components/common/mainMenu';\r\nimport { Footer } from '../../../components/common/sharedLayout';\r\nimport 'rc-texty/assets/index.css';\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nexport default () => {\r\n    return (\r\n        <Layout className='home layout'>\r\n            <HeaderNavbar />\r\n            <Content>\r\n                <Card>\r\n                    <Row>\r\n                    <Title level={2}>User Guidelines</Title>\r\n                    </Row>\r\n                    <Row>\r\n                        There are 2 user roles which are \"Student\" and \"Lecturer\"\r\n                    </Row>\r\n\r\n                </Card>\r\n                <Divider />\r\n                <Card>\r\n                    <Row>\r\n                        Instructions For Lecturer:\r\n                    </Row>\r\n                    <Row>\r\n                        1. Register an account.\r\n                    </Row>\r\n                    <Row>\r\n                        2. Create a course.\r\n          </Row>\r\n                    <Row>\r\n                        3. Give the course unique ID to your students.\r\n          </Row>\r\n                    <Row>\r\n                        4. Students need to send the request to enrol, approve the enrolment.\r\n          </Row>\r\n                    <Row>\r\n                        5. You do not need upload student's face photo, which will be done by students.\r\n          </Row>\r\n                    <Row>\r\n                        6. After all student enrolled, select a course and take the attendance.\r\n          </Row>\r\n                    <Row>\r\n                        7. You can see how many face photo of all the enrolled students have uploaded.\r\n          </Row>\r\n                    <Row>\r\n                        8. Ensure that the students upload their face photo, otherwise there is no facial data of that student for reference.\r\n          </Row>\r\n                    <Row>\r\n                        9. Only those enrol in the particular course will be counted into dataset for facial classification.\r\n          </Row>\r\n                    <Row>\r\n                        10. Inside attendance taking form, select the time, date and camera.\r\n          </Row>\r\n                    <Row>\r\n                        11. Wait for all the models being loaded.\r\n          </Row>\r\n                    <Row>\r\n                        12. Set the approriate threshold distance as you wish.\r\n          </Row>\r\n                    <Row>\r\n                        13. Submit the attendance form if finished.\r\n          </Row>\r\n                    <Row>\r\n                        14. Visualize the attendance data in \"Attendance History\", or you can enter a particular course and click \"View Attendance History\".\r\n          </Row>\r\n                    <Row>\r\n                        15. You can \"Warn\" or \"Kick\" the student out of a course.\r\n          </Row>\r\n                    <Row>\r\n                        16. The face photo of the student who is kicked out will not be counted next time taking the attendance.\r\n          </Row>\r\n                </Card>\r\n                <Divider />\r\n                <Card>\r\n                    <Row>\r\n                        Instructions For Student:\r\n          </Row>\r\n                    <Row>\r\n                        1. Register an account.\r\n          </Row>\r\n                    <Row>\r\n                        2. Enrol a course.\r\n          </Row>\r\n                    <Row>\r\n                        3. Wait for approval from the lecturer.\r\n          </Row>\r\n                    <Row>\r\n                        4. Upload your face photo in \"Face Gallery\", best to have at least 2 face photo.\r\n          </Row>\r\n                    <Row>\r\n                        5. Wait for all models being loaded.\r\n          </Row>\r\n                    <Row>\r\n                        6. The system will perform face detection, ensuring only a single face exist and rejecting photo with empty face or multiple faces.\r\n          </Row>\r\n                    <Row>\r\n                        7. The photo will be uploaded to the image storage.\r\n          </Row>\r\n                    <Row>\r\n                        8. When your lecturer take the attendance of a particular course, all your uploaded facial data will be counted into the dataset for facial comparison.\r\n          </Row>\r\n                    <Row>\r\n                        9. Visualize the attendance data in \"Attendance History\", or you can enter a particular course and click \"View Attendance History\".\r\n          </Row>\r\n\r\n                </Card>\r\n                <Divider />\r\n                <Card>\r\n                    <Row style={{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                        The website use API provided by: <a href=\"https://github.com/justadudewhohacks/face-api.js\" target=\"_blank\">face-api.js</a>\r\n                    </Row>\r\n                    <Row style={{ display: 'flex', justifyContent: 'flex-end'}}>\r\n                        Credit to author: <a href=\"https://github.com/justadudewhohacks\" target=\"_blank\">justadudewhohacks</a>\r\n                    </Row>\r\n                </Card>\r\n            </Content>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  DatePicker,\r\n  Form,\r\n  Layout,\r\n  message,\r\n  Select,\r\n  TimePicker,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { AttendanceContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { CREATE_ATTENDANCE_MUTATION } from \"../../../graphql/mutation\";\r\nimport { FETCH_COURSE_QUERY } from \"../../../graphql/query\";\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\nexport default (props) => {\r\n  const titleList = [\r\n    { name: \"Home\", link: \"/dashboard\" },\r\n    {\r\n      name: `Course: ${props.match.params.id}`,\r\n      link: `/course/${props.match.params.id}`,\r\n    },\r\n    { name: \"Take Attendance\", link: \"takeAttendance\" },\r\n  ];\r\n\r\n  const [selectedDate, setSelectedDate] = useState(moment().toISOString());\r\n  const [selectedTime, setSelectedTime] = useState(moment().toISOString());\r\n\r\n  const courseGQLQuery = useQuery(FETCH_COURSE_QUERY, {\r\n    onError(err) {\r\n      props.history.push(\"/dashboard\");\r\n      CheckError(err);\r\n    },\r\n    variables: {\r\n      id: props.match.params.id,\r\n    },\r\n    notifyOnNetworkStatusChange: true,\r\n  });\r\n\r\n  const [submitAttendanceCallback, submitAttendanceStatus] = useMutation(\r\n    CREATE_ATTENDANCE_MUTATION,\r\n    {\r\n      update(_, {data}) {\r\n        message.success(\"Success Submit.\");\r\n        props.history.push(`/course/${props.match.params.id}/attendanceRoom/${data.createAttendance._id}`);\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  //form\r\n  const handleDateChange = (value) => {\r\n    setSelectedDate(value?._d.toISOString());\r\n  };\r\n\r\n  const handleTimeChange = (value) => {\r\n    setSelectedTime(value?._d.toISOString());\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (courseGQLQuery.data)\r\n      submitAttendanceCallback({\r\n        variables: {\r\n          date: selectedDate,\r\n          time: selectedTime,\r\n          courseID: props.match.params.id,\r\n        },\r\n      });\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb titleList={titleList} />\r\n        <Content>\r\n          <Card title=\"Attendance Form\" className=\"addCourse__card\">\r\n            <Form onFinish={handleSubmit}>\r\n              <Form.Item label=\"Course\">\r\n                {courseGQLQuery.data && (\r\n                  <span>\r\n                    {courseGQLQuery.data.getCourse.code} -\r\n                    {courseGQLQuery.data.getCourse.name} (\r\n                    {courseGQLQuery.data.getCourse.session})\r\n                  </span>\r\n                )}\r\n                {courseGQLQuery.loading && (\r\n                  <>\r\n                    Fetching Course Detail... <LoadingOutlined />\r\n                  </>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Date\">\r\n                <DatePicker\r\n                  defaultValue={moment()}\r\n                  format=\"YYYY/MM/DD\"\r\n                  onChange={handleDateChange}\r\n                />\r\n              </Form.Item>\r\n              <Form.Item label=\"Time\">\r\n                {\" \"}\r\n                <TimePicker\r\n                  defaultValue={moment()}\r\n                  format=\"HH:mm\"\r\n                  onChange={handleTimeChange}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item>\r\n                <Button\r\n                  disabled={courseGQLQuery.loading}\r\n                  type=\"primary\"\r\n                  htmlType=\"submit\"\r\n                  loading={submitAttendanceStatus.loading}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Content>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { Button, Card, Col, message, Modal, Row, Upload } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { getFullFaceDescription } from \"../../../faceUtil\";\r\nimport { inputSize } from \"../../../globalData\";\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nexport const UploadFromDisk = ({\r\n  addFacePhotoCallback,\r\n  galleryRefetch,\r\n  countRefetch,\r\n  loading,\r\n}) => {\r\n  const [previewVisible, setPreviewVisible] = useState(false);\r\n  const [fullDesc, setFullDesc] = useState([]);\r\n  const [faceDescriptor, setFaceDescriptor] = useState([]);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n  const [previewTitle, setPreviewTitle] = useState(\"\");\r\n  const [isRunningFaceDetector, setIsRunningFaceDetector] = useState(false);\r\n  const [detectionCount, setDetectionCount] = useState(0);\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const handleCancel = () => setPreviewVisible(false);\r\n\r\n  const handlePreview = async (file) => {\r\n    setPreviewVisible(true);\r\n    setPreviewTitle(\r\n      file.name || file.url.substring(file.url.lastIndexOf(\"/\") + 1)\r\n    );\r\n  };\r\n\r\n  const handleChange = async ({ fileList }) => {\r\n    if (fileList.length === 0) {\r\n      setFaceDescriptor([]);\r\n      setDetectionCount(0);\r\n      setFileList([]);\r\n      return;\r\n    }\r\n\r\n    if (!fileList[0].url && !fileList[0].preview) {\r\n      if (/\\.(jpe?g|png)$/i.test(fileList[0].name) === false) {\r\n        alert(\"Not an image file (only JPG/JEPG/PNG accepted)!\");\r\n        return;\r\n      }\r\n      fileList[0].preview = await getBase64(fileList[0].originFileObj);\r\n    }\r\n    setPreviewImage(fileList[0].url || fileList[0].preview);\r\n    setFileList(fileList);\r\n\r\n    if (fileList[0].preview.length > 0) {\r\n      setIsRunningFaceDetector(true);\r\n      await getFullFaceDescription(fileList[0].preview, inputSize).then(\r\n        (data) => {\r\n          setFullDesc(data);\r\n          setDetectionCount(data.length);\r\n          setFaceDescriptor(data[0]?.descriptor);\r\n          setIsRunningFaceDetector(false);\r\n        }\r\n      );\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = () => {\r\n    if (previewImage.length > 0 && faceDescriptor.length === 128)\r\n      addFacePhotoCallback({\r\n        update(_, data) {\r\n          galleryRefetch();\r\n          countRefetch();\r\n          message.success(\"Add Face Photo Success!\");\r\n        },\r\n        onError(err) {\r\n          CheckError(err);\r\n        },\r\n        variables: {\r\n          photoData: previewImage,\r\n          faceDescriptor: faceDescriptor.toString(),\r\n        },\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      <Row style={{ display: \"flex\", alignItems: \"center\" }}>\r\n        <Col>\r\n          <Upload\r\n            beforeUpload={() => false}\r\n            multiple={false}\r\n            listType=\"picture-card\"\r\n            onPreview={handlePreview}\r\n            onChange={handleChange}\r\n            accept=\"image/x-png,image/jpeg\"\r\n            progress\r\n            fileList={fileList}\r\n          >\r\n            {fileList.length >= 1 ? null : (\r\n              <div>\r\n                <PlusOutlined />\r\n                <div style={{ marginTop: 8 }}>Upload</div>\r\n              </div>\r\n            )}\r\n          </Upload>\r\n        </Col>\r\n        <Col>\r\n          {\" \"}\r\n          <Button\r\n            type=\"primary\"\r\n            loading={loading}\r\n            disabled={\r\n              previewImage.length === 0 ||\r\n              loading ||\r\n              detectionCount !== 1 ||\r\n              faceDescriptor.length !== 128\r\n            }\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div>\r\n          {detectionCount > 1 && (\r\n            <span className=\"alert\">Only single face allowed</span>\r\n          )}\r\n          {detectionCount === 0 && (\r\n            <span className=\"alert\">No face detected</span>\r\n          )}\r\n          <p>\r\n            Number of detection:{\" \"}\r\n            {isRunningFaceDetector ? (\r\n              <>\r\n                Detecting face... <LoadingOutlined />\r\n              </>\r\n            ) : (\r\n              detectionCount\r\n            )}\r\n          </p>\r\n          Face Descriptor:{\" \"}\r\n          {detectionCount === 0 && !isRunningFaceDetector && <span>Empty</span>}\r\n          {isRunningFaceDetector && (\r\n            <>\r\n              Generating 128 measurements... <LoadingOutlined />\r\n            </>\r\n          )}\r\n          <br />\r\n          {fullDesc.map((desc, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                wordBreak: \"break-all\",\r\n                marginBottom: \"10px\",\r\n                backgroundColor: \"lightblue\",\r\n              }}\r\n            >\r\n              <p style={{ color: \"red\", fontSize: \"20px\", fontWeight: 900 }}>\r\n                Face #{index + 1}:{\" \"}\r\n              </p>{\" \"}\r\n              {desc.descriptor.toString()}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Row>\r\n\r\n      <Modal\r\n        visible={previewVisible}\r\n        title={previewTitle}\r\n        footer={null}\r\n        onCancel={handleCancel}\r\n      >\r\n        <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n","import { Button, Card, Form, Col, message, Select } from \"antd\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport { getFullFaceDescription } from \"../../../faceUtil\";\r\nimport {\r\n  DEFAULT_WEBCAM_RESOLUTION,\r\n  inputSize,\r\n  webcamResolutionType,\r\n} from \"../../../globalData\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { drawFaceRect } from \"../../../utils/drawFaceRect\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport const UploadFromWebcam = ({\r\n  addFacePhotoCallback,\r\n  galleryRefetch,\r\n  countRefetch,\r\n  loading,\r\n}) => {\r\n  const [camWidth, setCamWidth] = useState(DEFAULT_WEBCAM_RESOLUTION.width);\r\n  const [camHeight, setCamHeight] = useState(DEFAULT_WEBCAM_RESOLUTION.height);\r\n  const [inputDevices, setInputDevices] = useState([]);\r\n  const [selectedWebcam, setSelectedWebcam] = useState();\r\n\r\n  const [fullDesc, setFullDesc] = useState(null);\r\n\r\n  const [faceDescriptor, setFaceDescriptor] = useState([]);\r\n\r\n  const [detectionCount, setDetectionCount] = useState(0);\r\n  const [previewImage, setPreviewImage] = useState(\"\");\r\n\r\n  const [waitText, setWaitText] = useState(\"\");\r\n\r\n  const webcamRef = useRef();\r\n  const canvasRef = useRef();\r\n\r\n  const handleSelectWebcam = (value) => {\r\n    setSelectedWebcam(value);\r\n  };\r\n  const handleWebcamResolution = (value) => {\r\n    webcamResolutionType.map((type) => {\r\n      if (value === type.label) {\r\n        setCamWidth(type.width);\r\n        setCamHeight(type.height);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigator.mediaDevices.enumerateDevices().then(async (devices) => {\r\n      let inputDevice = await devices.filter(\r\n        (device) => device.kind === \"videoinput\"\r\n      );\r\n      setInputDevices({ ...inputDevices, inputDevice });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    function capture() {\r\n      if (\r\n        typeof webcamRef.current !== \"undefined\" &&\r\n        webcamRef.current !== null &&\r\n        webcamRef.current.video.readyState === 4\r\n      ) {\r\n        setPreviewImage(webcamRef.current.getScreenshot());\r\n\r\n        const videoWidth = webcamRef.current.video.videoWidth;\r\n        const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n        // Set canvas height and width\r\n        canvasRef.current.width = videoWidth;\r\n        canvasRef.current.height = videoHeight;\r\n\r\n        // 4. TODO - Make Detections\r\n        // e.g. const obj = await net.detect(video);\r\n\r\n        // Draw mesh\r\n        getFullFaceDescription(webcamRef.current.getScreenshot(), inputSize)\r\n          .then((data) => {\r\n            setFullDesc(data);\r\n            setFaceDescriptor(data[0]?.descriptor);\r\n            setWaitText(\"\");\r\n          })\r\n          .catch((err) => {\r\n            setWaitText(\r\n              \"Preparing face matcher and device setup, please wait...\"\r\n            );\r\n          });\r\n        const ctx = canvasRef.current.getContext(\"2d\");\r\n\r\n        drawFaceRect(fullDesc, ctx);\r\n      }\r\n    }\r\n\r\n    let interval = setInterval(() => {\r\n      capture();\r\n    }, 700);\r\n\r\n    return () => clearInterval(interval);\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    addFacePhotoCallback({\r\n      update() {\r\n        galleryRefetch();\r\n        countRefetch();\r\n        message.success(\"Add Face Photo Success!\");\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        photoData: previewImage,\r\n        faceDescriptor: faceDescriptor.toString(),\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Form>\r\n        <Form.Item label=\"Webcam\">\r\n          <Select\r\n            defaultValue=\"Select Webcam\"\r\n            style={{ width: 500 }}\r\n            onChange={handleSelectWebcam}\r\n          >\r\n            {inputDevices?.inputDevice?.map((device) => (\r\n              <Option key={device.deviceId} value={device.deviceId}>\r\n                {device.label}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item label=\"Webcam Size\">\r\n          <Select\r\n            defaultValue={DEFAULT_WEBCAM_RESOLUTION.label}\r\n            style={{ width: 200 }}\r\n            onChange={handleWebcamResolution}\r\n          >\r\n            {webcamResolutionType.map((type) => (\r\n              <Option key={type.label} value={type.label}>\r\n                {type.label}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n      <p style={{ fontSize: \"18px\" }}>{waitText}</p>\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Webcam\r\n          muted={true}\r\n          ref={webcamRef}\r\n          audio={false}\r\n          width={camWidth}\r\n          height={camHeight}\r\n          screenshotFormat=\"image/jpeg\"\r\n          videoConstraints={{\r\n            deviceId: selectedWebcam,\r\n          }}\r\n          mirrored\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          style={{\r\n            position: \"absolute\",\r\n            textAlign: \"center\",\r\n            zindex: 8,\r\n            width: camWidth,\r\n            height: camHeight,\r\n          }}\r\n        />\r\n      </div>\r\n{previewImage && (\r\n          <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n          }}\r\n          >\r\n            <h3>Previous Capture: </h3>\r\n            <img\r\n              src={previewImage}\r\n              alt=\"Capture\"\r\n              style={{ width: \"200px\", height: \"200px\" }}\r\n            />\r\n            <div style={{ marginTop: \"10px\" }}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={handleSubmit}\r\n                disabled={\r\n                  loading ||\r\n                  (fullDesc && fullDesc.length !== 1) ||\r\n                  (faceDescriptor && faceDescriptor.length !== 128)\r\n                }\r\n                loading={loading}\r\n              >\r\n                Save\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n      <div>\r\n        <p>\r\n          Number of detection: {fullDesc ? fullDesc.length : 0}{\" \"}\r\n          {fullDesc && fullDesc.length > 1 && (\r\n            <span className=\"alert\">Cannot more than 2</span>\r\n          )}\r\n        </p>\r\n        Face Descriptors:{\" \"}\r\n        {fullDesc &&\r\n          fullDesc.map((desc, index) => (\r\n            <div\r\n              key={index}\r\n              style={{\r\n                wordBreak: \"break-all\",\r\n                marginBottom: \"10px\",\r\n                backgroundColor: \"lightblue\",\r\n              }}\r\n            >\r\n              <strong style={{ fontSize: \"20px\", color: \"red\" }}>\r\n                Face #{index}:{\" \"}\r\n              </strong>\r\n              {desc.descriptor.toString()}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n","export const drawFaceRect = (descriptions, ctx) => {\r\n  // Loop through each desc\r\n  descriptions &&\r\n    descriptions.forEach((desc) => {\r\n      // Extract boxes and classes\r\n      const { x, y, width, height } = desc.detection.box;\r\n      const landmarksPoint=desc.landmarks._positions;\r\n\r\n      ctx.font = \"normal 18px Gotham, Helvetica Neue, sans-serif\";\r\n      ctx.lineWidth = 2;\r\n      ctx.strokeStyle = \"#08E\";\r\n\r\n      //draw 68 points\r\n      landmarksPoint.map(point=>{\r\n        ctx.beginPath();\r\n        ctx.fillStyle = \"#08E\";\r\n        ctx.arc(point._x, point._y, 3, 0, 2 * Math.PI);\r\n        ctx.closePath();\r\n\r\n        ctx.fill();\r\n      })\r\n    \r\n      // Draw rectangles and text\r\n      ctx.beginPath();\r\n      ctx.rect(x, y, width, height);\r\n      ctx.stroke();\r\n    });\r\n};\r\n","import { useMutation } from \"@apollo/react-hooks\";\r\nimport { Card, Col, Form, Row, Select } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport {\r\n  isFaceDetectionModelLoaded,\r\n  isFacialLandmarkDetectionModelLoaded,\r\n  isFeatureExtractionModelLoaded,\r\n  loadModels,\r\n} from \"../../../faceUtil\";\r\nimport { DEFAULT_UPLOAD_OPTION, UPLOAD_OPTION } from \"../../../globalData\";\r\nimport { ADD_FACE_PHOTO_MUTATION } from \"../../../graphql/mutation\";\r\nimport ModelLoadStatus from \"../../../utils/ModelLoadStatus\";\r\nimport ModelLoading from \"../../../utils/ModelLoading\";\r\nimport { UploadFromDisk } from \"./UploadFromDisk\";\r\nimport { UploadFromWebcam } from \"./UploadFromWebcam\";\r\n\r\nconst { Option } = Select;\r\n\r\nexport default ({ galleryRefetch, countRefetch }) => {\r\n  const [selectedUploadOption, setSelectedUploadOption] = useState(\r\n    DEFAULT_UPLOAD_OPTION\r\n  );\r\n\r\n  const [isAllModelLoaded, setIsAllModelLoaded] = useState(false);\r\n  const [loadingMessage, setLoadingMessage] = useState(\"\");\r\n  const [loadingMessageError, setLoadingMessageError] = useState(\"\");\r\n\r\n  const [addFacePhotoCallback, { loading }] = useMutation(\r\n    ADD_FACE_PHOTO_MUTATION,\r\n    {\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleSelectUploadOption = (value) => {\r\n    setSelectedUploadOption(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function loadingtheModel() {\r\n      await loadModels(setLoadingMessage, setLoadingMessageError);\r\n      setIsAllModelLoaded(true);\r\n    }\r\n    if (\r\n      !!isFaceDetectionModelLoaded() &&\r\n      !!isFacialLandmarkDetectionModelLoaded() &&\r\n      !!isFeatureExtractionModelLoaded()) {\r\n      setIsAllModelLoaded(true);\r\n      return;\r\n    }\r\n\r\n    loadingtheModel();\r\n  }, [isAllModelLoaded]);\r\n\r\n  return (\r\n    <Card>\r\n      <Card title=\"Model Load\">\r\n        <ModelLoadStatus errorMessage={loadingMessageError} />\r\n      </Card>\r\n      <br />\r\n      {!isAllModelLoaded ? (\r\n        <ModelLoading loadingMessage={loadingMessage} />\r\n      ) : loadingMessageError ? (\r\n        <div className=\"error\">{loadingMessageError}</div>\r\n      ) : (\r\n        isAllModelLoaded &&\r\n        loadingMessageError.length === 0 && (\r\n          <div>\r\n              <Form>\r\n                <Form.Item label=\"Upload Option\">\r\n                  <Select\r\n                    defaultValue={DEFAULT_UPLOAD_OPTION}\r\n                    style={{ width: 200 }}\r\n                    onChange={handleSelectUploadOption}\r\n                  >\r\n                    {UPLOAD_OPTION.map((op) => (\r\n                      <Option key={op} value={op}>\r\n                        {op}\r\n                      </Option>\r\n                    ))}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Form>\r\n\r\n                {selectedUploadOption === \"From Disk\" ? (\r\n                  <UploadFromDisk\r\n                    addFacePhotoCallback={addFacePhotoCallback}\r\n                    galleryRefetch={galleryRefetch}\r\n                    countRefetch={countRefetch}\r\n                    loading={loading}\r\n                  />\r\n                ) : (\r\n                  <UploadFromWebcam\r\n                    addFacePhotoCallback={addFacePhotoCallback}\r\n                    galleryRefetch={galleryRefetch}\r\n                    countRefetch={countRefetch}\r\n                    loading={loading}\r\n                  />\r\n                )}\r\n\r\n        \r\n        </div>))}\r\n    </Card>\r\n  );\r\n};\r\n","import { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { Button, Card, Layout, message, Switch } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport Modal from \"../../../components/common/customModal\";\r\nimport {\r\n  Footer,\r\n  Greeting,\r\n  Navbar,\r\n  PageTitleBreadcrumb,\r\n} from \"../../../components/common/sharedLayout\";\r\nimport { FacePhotoContext } from \"../../../context\";\r\nimport { CheckError } from \"../../../utils/ErrorHandling\";\r\nimport { FETCH_FACE_PHOTOS_LIMIT, modalItems } from \"../../../globalData\";\r\nimport {\r\n  DELETE_FACE_PHOTO_MUTATION,\r\n  TOGGLE_PHOTO_PRIVACY_MUTATION,\r\n} from \"../../../graphql/mutation\";\r\nimport {\r\n  FETCH_FACE_PHOTOS_COUNT_QUERY,\r\n  FETCH_FACE_PHOTOS_QUERY,\r\n} from \"../../../graphql/query\";\r\nimport { FetchChecker } from \"../../../utils/FetchChecker\";\r\nimport { LoadingSpin } from \"../../../utils/LoadingSpin\";\r\nimport AddFacePhoto from \"./addFacePhoto\";\r\n\r\nconst { Content } = Layout;\r\nexport default () => {\r\n  const {\r\n    facePhotos,\r\n    fetchedDone,\r\n    loadFacePhotos,\r\n    setFetchedDone,\r\n  } = useContext(FacePhotoContext);\r\n\r\n  const [isDescriptorVisible, setIsDescriptorVisible] = useState({});\r\n\r\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\r\n  const [selectedPhoto, setSelectedPhoto] = useState();\r\n\r\n  const { data, loading, refetch, fetchMore } = useQuery(\r\n    FETCH_FACE_PHOTOS_QUERY,\r\n    {\r\n      onCompleted(data) {\r\n        data.getFacePhotos.facePhotos.map((photo) => {\r\n          setIsDescriptorVisible({\r\n            ...isDescriptorVisible,\r\n            [photo._id]: false,\r\n          });\r\n        });\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      variables: {\r\n        limit: FETCH_FACE_PHOTOS_LIMIT,\r\n      },\r\n      notifyOnNetworkStatusChange: true,\r\n    }\r\n  );\r\n\r\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n  });\r\n\r\n\r\n  const [deleteFacePhotoCallback, deleteFacePhotoStatus] = useMutation(\r\n    DELETE_FACE_PHOTO_MUTATION,\r\n    {\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    loadFacePhotos(data?.getFacePhotos.facePhotos || []);\r\n    if (data) {\r\n      if (!data.getFacePhotos.hasNextPage) setFetchedDone(true);\r\n      else setFetchedDone(false);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleDescriptorVisible = (id) => {\r\n    setIsDescriptorVisible({\r\n      ...isDescriptorVisible,\r\n      [id]: !isDescriptorVisible[id],\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteFacePhotoCallback({\r\n      update(_, { data }) {\r\n        message.success(data.deleteFacePhoto);\r\n        setSelectedPhoto(null);\r\n        setIsDeleteModalVisible(false);\r\n        refetch();\r\n        facePhotosCountQuery.refetch();\r\n      },\r\n      variables: {\r\n        photoID: selectedPhoto._id,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsDeleteModalVisible(false);\r\n  };\r\n\r\n  const handleFetchMore = () => {\r\n    fetchMore({\r\n      variables: {\r\n        limit: FETCH_FACE_PHOTOS_LIMIT,\r\n        cursor: facePhotos[facePhotos.length - 1]._id,\r\n      },\r\n      onError(err) {\r\n        CheckError(err);\r\n      },\r\n      updateQuery: (pv, { fetchMoreResult }) => {\r\n        return {\r\n          getFacePhotos: {\r\n            __typename: \"FacePhotos\",\r\n            facePhotos: [\r\n              ...pv.getFacePhotos.facePhotos,\r\n              ...fetchMoreResult.getFacePhotos.facePhotos,\r\n            ],\r\n            hasNextPage: fetchMoreResult.getFacePhotos.hasNextPage,\r\n          },\r\n        };\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <Navbar />\r\n      <Layout>\r\n        <Greeting />\r\n        <PageTitleBreadcrumb\r\n          titleList={[{ name: \"Face Gallery\", link: \"/facegallery\" }]}\r\n        />\r\n\r\n        <Content>\r\n          <Card>\r\n            <AddFacePhoto\r\n              galleryRefetch={refetch}\r\n              countRefetch={facePhotosCountQuery.refetch}\r\n            />\r\n            <Card\r\n              title={\r\n                <strong>\r\n                  Your Gallery:{\" \"}\r\n                  {facePhotosCountQuery.data?.getFacePhotosCount || 0}\r\n                </strong>\r\n              }\r\n            >\r\n              {facePhotos.map((photo, index) => (\r\n                <Card key={photo._id}>\r\n                  <Card>\r\n                    <img\r\n                      height={150}\r\n                      width={120}\r\n                      data-src={photo.photoURL}\r\n                      src={`${process.env.PUBLIC_URL}/img/loader.gif`}\r\n                      className=\"lazyload\"\r\n                      alt={\"Face Photo: \" + index}\r\n                    />\r\n                    <br /> <br />\r\n                  </Card>\r\n                  &nbsp;\r\n                  <strong>Face Descriptor: </strong>\r\n                  <Button onClick={() => handleDescriptorVisible(photo._id)}>\r\n                    {!isDescriptorVisible[photo._id] ? \"Show\" : \"Hide\"}\r\n                  </Button>\r\n                  {isDescriptorVisible[photo._id] && (\r\n                    <p\r\n                      style={{\r\n                        wordBreak: \"break-all\",\r\n                        marginBottom: \"10px\",\r\n                        backgroundColor: \"lightblue\",\r\n                      }}\r\n                    >\r\n                      {photo.faceDescriptor}\r\n                    </p>\r\n                  )}\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                      alignItems: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <p>Uploaded at: {moment(photo.createdAt).format(\"LLL\")}</p>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"flex-end\",\r\n                      alignItems: \"flex-end\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={() => {\r\n                        setIsDeleteModalVisible(true);\r\n                        setSelectedPhoto(photo);\r\n                      }}\r\n                    >\r\n                      Delete Photo\r\n                    </Button>\r\n                  </div>\r\n                </Card>\r\n              ))}\r\n              <LoadingSpin loading={loading} />\r\n              {/*give text of fetch result*/}\r\n              <FetchChecker\r\n                loading={loading}\r\n                payload={facePhotos}\r\n                fetchedDone={fetchedDone}\r\n                allLoadedMessage=\"All Face Photo Loaded\"\r\n                noItemMessage=\"No Face Photo Added...\"\r\n                handleFetchMore={handleFetchMore}\r\n              />\r\n\r\n              {/*modal backdrop*/}\r\n              <Modal\r\n                title=\"Delete Photo\"\r\n                action={modalItems.facePhoto.action.delete}\r\n                itemType={modalItems.facePhoto.name}\r\n                visible={isDeleteModalVisible}\r\n                loading={deleteFacePhotoStatus.loading}\r\n                handleOk={handleDelete}\r\n                handleCancel={handleCancel}\r\n                payload={selectedPhoto}\r\n              />\r\n            </Card>\r\n          </Card>\r\n        </Content>\r\n        <Footer />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n","import { useQuery } from \"@apollo/react-hooks\";\r\nimport { notification } from \"antd\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { CheckError } from \"../utils/ErrorHandling\";\r\nimport { FETCH_FACE_PHOTOS_COUNT_QUERY } from \"../graphql/query\";\r\n\r\nfunction AuthRoute({ component: Component, ...rest }) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  //get uploaded photos query\r\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n  });\r\n\r\n  //check amount of uploaded photo to notify student\r\n  useEffect(() => {\r\n    if (user && user.userLevel === 0)\r\n      if (facePhotosCountQuery.data)\r\n        if (facePhotosCountQuery.data.getFacePhotosCount < 2) {\r\n          notification[\"info\"]({\r\n            message: (\r\n              <strong>\r\n                Please add your face photograph for at least 2<br />\r\n                <br />\r\n              </strong>\r\n            ),\r\n            description: `Number of face photograph uploaded: ${facePhotosCountQuery.data.getFacePhotosCount}`,\r\n          });\r\n          if (\r\n            window.location.pathname != \"/notification\" &&\r\n            window.location.pathname != \"/facegallery\"\r\n          )\r\n            window.location.href = \"/facegallery\";\r\n        }\r\n  }, [facePhotosCountQuery]);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user && (user.userLevel === 0 || user.userLevel === 1) ? (\r\n          <Component {...props} />\r\n        ) : user && user.userLevel === -1 ? (\r\n          <Redirect to=\"/aboutYourself\" />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default AuthRoute;\r\n","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../context/auth\";\r\n\r\nfunction LecturerRoute({ component: Component, ...rest }) {\r\n  const { user } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user && user.userLevel === 1 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default LecturerRoute;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../context/auth';\r\n\r\nfunction ProtectedRoute({ component: Component, ...rest }) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user ? <Redirect to='/dashboard' /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default ProtectedRoute;\r\n","import { useQuery } from \"@apollo/react-hooks\";\r\nimport { notification } from \"antd\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/auth\";\r\nimport { CheckError } from \"../utils/ErrorHandling\";\r\nimport { FETCH_FACE_PHOTOS_COUNT_QUERY } from \"../graphql/query\";\r\n\r\nfunction StudentRoute({ component: Component, ...rest }) {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  //get uploaded photos query\r\n  const facePhotosCountQuery = useQuery(FETCH_FACE_PHOTOS_COUNT_QUERY, {\r\n    onError(err) {\r\n      CheckError(err);\r\n    },\r\n  });\r\n\r\n  //check amount of uploaded photo to notify student\r\n  useEffect(() => {\r\n    if (user && user.userLevel === 0)\r\n      if (facePhotosCountQuery.data)\r\n        if (facePhotosCountQuery.data.getFacePhotosCount < 2) {\r\n          notification[\"info\"]({\r\n            message: (\r\n              <strong>\r\n                Please add your face photograph for at least 2<br />\r\n                <br />\r\n              </strong>\r\n            ),\r\n            description: `Number of face photograph uploaded: ${facePhotosCountQuery.data.getFacePhotosCount}`,\r\n          });\r\n          if (window.location.pathname != \"/notification\" && window.location.pathname != \"/facegallery\")\r\n            window.location.href = \"/facegallery\";\r\n        }\r\n  }, [facePhotosCountQuery]);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        user && user.userLevel === 0 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default StudentRoute;\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../context/auth';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n  const { user } = useContext(AuthContext);\r\n  console.log(rest)\r\n  return (    \r\n    <Route\r\n      render={(props) =>\r\n        user && user.userLevel==-1 ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to='/' />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Input, message } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { useQuery, useMutation } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nexport default () => {\r\n  const [courseID, SetCourseID] = useState('');\r\n  const [createNotificationCallback, createNotificationStatus] = useMutation(\r\n    CREATE_NOTIFICATION_MUTATION,\r\n    {\r\n      onError: (err) => {\r\n        message.error(err.message);\r\n      },\r\n    }\r\n  );\r\n  const [\r\n    deleteAllNotificationCallback,\r\n    deleteAllNotificationStatus,\r\n  ] = useMutation(DELETE_ALL_NOTIFICATION_MUTATION, {\r\n    onError: (err) => {\r\n      message.error(err.message);\r\n    },\r\n  });\r\n  const [createCourseCallback, createCourseStatus] = useMutation(\r\n    CREATE_COURSE_MUTATION,\r\n    {\r\n      onError: (err) => {\r\n        message.error(err.message);\r\n      },\r\n    }\r\n  );\r\n  const [deleteAllCourseCallback, deleteAllCourseStatus] = useMutation(\r\n    DELETE_ALL_COURSE_MUTATION,\r\n    {\r\n      onError: (err) => {\r\n        message.error(err.message);\r\n      },\r\n    }\r\n  );\r\n  const [registerStudentCallback, registerStudentStatus] = useMutation(\r\n    REGISTER_STUDENT_MUTATION,\r\n    {\r\n      onError: (err) => {\r\n        message.error(err.message);\r\n      },\r\n      variables: {\r\n        courseID: courseID,\r\n      },\r\n    }\r\n  );\r\n  return (\r\n    <div>\r\n      <h1>Testing</h1>\r\n      <Button\r\n        onClick={() => createNotificationCallback()}\r\n        disabled={createNotificationStatus.loading}\r\n      >\r\n        Create 50 notification{' '}\r\n        {createNotificationStatus.loading && <LoadingOutlined />}\r\n      </Button>\r\n      <Button\r\n        onClick={() => deleteAllNotificationCallback()}\r\n        disabled={deleteAllNotificationStatus.loading}\r\n      >\r\n        Delete All notification{' '}\r\n        {deleteAllNotificationStatus.loading && <LoadingOutlined />}\r\n      </Button>\r\n      <Button\r\n        onClick={() => createCourseCallback()}\r\n        disabled={createCourseStatus.loading}\r\n      >\r\n        Create 50 courses {createCourseStatus.loading && <LoadingOutlined />}\r\n      </Button>\r\n      <Button\r\n        onClick={() => deleteAllCourseCallback()}\r\n        disabled={deleteAllCourseStatus.loading}\r\n      >\r\n        Delete All courses{' '}\r\n        {deleteAllCourseStatus.loading && <LoadingOutlined />}\r\n      </Button>\r\n      <Button\r\n        onClick={() => registerStudentCallback()}\r\n        disabled={registerStudentStatus.loading}\r\n      >\r\n        Register 10 student and enrol to course{' '}\r\n        {registerStudentStatus.loading && <LoadingOutlined />}\r\n      </Button>\r\n      <input\r\n        type='text'\r\n        name='courseID'\r\n        onChange={(e) => SetCourseID(e.target.value)}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CREATE_NOTIFICATION_MUTATION = gql`\r\n  mutation createNotification {\r\n    createNotification\r\n  }\r\n`;\r\n\r\nconst DELETE_ALL_NOTIFICATION_MUTATION = gql`\r\n  mutation deleteAllNotification {\r\n    deleteAllNotification\r\n  }\r\n`;\r\n\r\nconst CREATE_COURSE_MUTATION = gql`\r\n  mutation testingCreateCourse {\r\n    testingCreateCourse\r\n  }\r\n`;\r\n\r\nconst DELETE_ALL_COURSE_MUTATION = gql`\r\n  mutation testingDeleteAllCourse {\r\n    testingDeleteAllCourse\r\n  }\r\n`;\r\n\r\nconst REGISTER_STUDENT_MUTATION = gql`\r\n  mutation testingRegisterStudent($courseID: String!) {\r\n    testingRegisterStudent(courseID: $courseID)\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport {\r\n  AttendanceProvider,\r\n  AuthProvider,\r\n  CourseProvider,\r\n  EnrolmentProvider,\r\n  FacePhotoProvider,\r\n  FaceThresholdDistanceProvider,\r\n  NavbarProvider,\r\n  NotificationProvider,\r\n} from \"./context\";\r\nimport {\r\n  CourseDetails,\r\n  Dashboard,\r\n  MainMenu,\r\n  NoFound,\r\n  Notifications,\r\n  Profile,\r\n  SignIn,\r\n  SignUp,\r\n  InCourseAttendanceHistory,\r\n  SingleAttendanceHistory,\r\n  AttendanceRoom,\r\n  UndefinedCardIDAndRole,\r\n  PrivacyPolicy,\r\n  TermCondition,\r\n  UserGuidelines,\r\n} from \"./pages/common\";\r\nimport {\r\n  AttendanceForm,\r\n} from \"./pages/lecturerPage\";\r\nimport { FaceGallery } from \"./pages/studentPage\";\r\nimport {\r\n  AuthRoute,\r\n  LecturerRoute,\r\n  ProtectedRoute,\r\n  StudentRoute,\r\n  UndefinedCardIDAndRoleRoute,\r\n} from \"./routes\";\r\nimport Testing from \"./Testing\";\r\nimport \"lazysizes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <NavbarProvider>\r\n      <AuthProvider>\r\n        <NotificationProvider>\r\n          <AttendanceProvider>\r\n            <CourseProvider>\r\n              <EnrolmentProvider>\r\n                <FacePhotoProvider>\r\n                  <FaceThresholdDistanceProvider>\r\n                    <Router>\r\n                      <Switch>\r\n                        <ProtectedRoute exact path=\"/\" component={MainMenu} />\r\n                        <ProtectedRoute\r\n                          exact\r\n                          path=\"/signin\"\r\n                          component={SignIn}\r\n                        />\r\n                        <ProtectedRoute\r\n                          exact\r\n                          path=\"/signup\"\r\n                          component={SignUp}\r\n                        />\r\n\r\n                        <UndefinedCardIDAndRoleRoute\r\n                          exact\r\n                          path=\"/aboutYourself\"\r\n                          component={UndefinedCardIDAndRole}\r\n                        />\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/dashboard\"\r\n                          component={Dashboard}\r\n                        />\r\n                        <AuthRoute exact path=\"/profile\" component={Profile} />\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/notification\"\r\n                          component={Notifications}\r\n                        />\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/course/:id\"\r\n                          component={CourseDetails}\r\n                        />\r\n                        {/* <AuthRoute exact path='/testing' component={Testing} /> */}\r\n                        <LecturerRoute\r\n                          exact\r\n                          path=\"/course/:id/attendanceForm\"\r\n                          component={AttendanceForm}\r\n                        />\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/course/:courseID/attendanceRoom/:attendanceID\"\r\n                          component={AttendanceRoom}\r\n                        />\r\n\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/course/:id/attendanceList\"\r\n                          component={InCourseAttendanceHistory}\r\n                        />\r\n\r\n                        <AuthRoute\r\n                          exact\r\n                          path=\"/course/:courseID/attendanceList/:attendanceID\"\r\n                          component={SingleAttendanceHistory}\r\n                        />\r\n\r\n                        <StudentRoute\r\n                          exact\r\n                          path=\"/facegallery\"\r\n                          component={FaceGallery}\r\n                        />\r\n                        <Route\r\n                          exact\r\n                          path=\"/termandcondition\"\r\n                          component={TermCondition}\r\n                        />\r\n                        <Route\r\n                          exact\r\n                          path=\"/privacypolicy\"\r\n                          component={PrivacyPolicy}\r\n                        />\r\n                        <Route\r\n                          exact\r\n                          path=\"/userguidelines\"\r\n                          component={UserGuidelines}\r\n                        />\r\n                        <AuthRoute component={NoFound} />\r\n                      </Switch>\r\n                    </Router>\r\n                  </FaceThresholdDistanceProvider>\r\n                </FacePhotoProvider>\r\n              </EnrolmentProvider>\r\n            </CourseProvider>\r\n          </AttendanceProvider>\r\n        </NotificationProvider>\r\n      </AuthProvider>\r\n    </NavbarProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ApolloClient from \"apollo-client\";\r\nimport { defaultDataIdFromObject, InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport { setContext } from \"apollo-link-context\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri:\r\n    !process.env.NODE_ENV || process.env.NODE_ENV === \"development\"\r\n      ? \"http://localhost:4000/\"\r\n      : \"https://api-attendlytical.herokuapp.com\",\r\n});\r\n\r\nconst authLink = setContext(() => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n    },\r\n  };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache({\r\n    dataIdFromObject(responseObject) {\r\n      return defaultDataIdFromObject(responseObject);\r\n    },\r\n  }),\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport ApolloProvider from './ApolloProvider';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(ApolloProvider, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workerzs: https:s//bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}